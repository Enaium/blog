<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on</title><link>https://blog.enaium.cn/post/</link><description>Recent content in Posts on</description><generator>Hugo</generator><language>zh</language><lastBuildDate>Fri, 24 Jan 2025 20:41:52 +0800</lastBuildDate><atom:link href="https://blog.enaium.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Java使用FFM API调用SDL</title><link>https://blog.enaium.cn/post/2025-1-24-java%E4%BD%BF%E7%94%A8ffm-api%E8%B0%83%E7%94%A8sdl/</link><pubDate>Fri, 24 Jan 2025 20:41:52 +0800</pubDate><guid>https://blog.enaium.cn/post/2025-1-24-java%E4%BD%BF%E7%94%A8ffm-api%E8%B0%83%E7%94%A8sdl/</guid><description>&lt;p>首先我们需要创建一个&lt;code>Gradle&lt;/code>项目，之后设置项目的&lt;code>JDK&lt;/code>版本，设置为&lt;code>22&lt;/code>及以上版本。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span style="display:flex;">&lt;span>plugins {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kotlin(&lt;span style="color:#e6db74">&amp;#34;jvm&amp;#34;&lt;/span>) version &lt;span style="color:#e6db74">&amp;#34;2.1.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>group = &lt;span style="color:#e6db74">&amp;#34;cn.enaium&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>version = &lt;span style="color:#e6db74">&amp;#34;1.0-SNAPSHOT&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>repositories {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mavenCentral()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dependencies {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> testImplementation(kotlin(&lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tasks.test {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> useJUnitPlatform()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kotlin {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jvmToolchain(&lt;span style="color:#ae81ff">23&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着我们在当前目录初始化&lt;code>git&lt;/code>仓库，之后需要添加一个子模块。、&lt;/p>
&lt;pre tabindex="0">&lt;code>git init
git submodule add git@github.com:libsdl-org/SDL.git SDL
&lt;/code>&lt;/pre>&lt;p>之后编写生成接口的脚本，在这之前你必须安装&lt;a href="https://cmake.org/">CMake&lt;/a>和&lt;a href="https://jdk.java.net/jextract/">&lt;code>jextract&lt;/code>&lt;/a>到环境变量中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>$sdl_path = &lt;span style="color:#e6db74">&amp;#34;SDL&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$sdl_path&lt;span style="color:#e6db74">/build&amp;#34;&lt;/span>; cmake -DCMAKE_BUILD_TYPE=Release &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$sdl_path&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -B &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$sdl_path&lt;span style="color:#e6db74">/build&amp;#34;&lt;/span>; cmake --build &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$sdl_path&lt;span style="color:#e6db74">/build&amp;#34;&lt;/span> --config Release --parallel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jextract --include-dir &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$sdl_path&lt;span style="color:#e6db74">/include&amp;#34;&lt;/span> --dump-includes &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$sdl_path&lt;span style="color:#e6db74">/build/includes.txt&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$sdl_path&lt;span style="color:#e6db74">/include/SDL3/SDL.h&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jextract --include-dir &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$sdl_path&lt;span style="color:#e6db74">/include&amp;#34;&lt;/span> --output src/main/java --target-package org.libsdl --library SDL3 --use-system-load-library &lt;span style="color:#e6db74">&amp;#34;@&lt;/span>$sdl_path&lt;span style="color:#e6db74">/build/includes.txt&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$sdl_path&lt;span style="color:#e6db74">/include/SDL3/SDL.h&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>首先是使用&lt;code>CMake&lt;/code>编译&lt;code>SDL&lt;/code>，之后使用&lt;code>jextract&lt;/code>生成&lt;code>Java&lt;/code>接口，之后运行脚本，这样就会在&lt;code>src/main/java&lt;/code>生成&lt;code>SDL3&lt;/code>的接口。&lt;/p>
&lt;p>接着我们回到&lt;code>build.gradle.kts&lt;/code>，添加&lt;code>application&lt;/code>插件，之后将编译好的路径添加到启动参数中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span style="display:flex;">&lt;span>plugins {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> application
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>application {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mainClass = &lt;span style="color:#e6db74">&amp;#34;MainKt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> applicationDefaultJvmArgs = listOf(&lt;span style="color:#e6db74">&amp;#34;-Djava.library.path=SDL/build/Release&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;--enable-native-access=ALL-UNNAMED&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后就可以调用&lt;code>SDL&lt;/code>的接口了。&lt;/p></description></item><item><title>LSP介绍并实现语言服务</title><link>https://blog.enaium.cn/post/2025-1-4-lsp%E4%BB%8B%E7%BB%8D%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%AF%AD%E8%A8%80%E6%9C%8D%E5%8A%A1/</link><pubDate>Sat, 04 Jan 2025 11:13:20 +0800</pubDate><guid>https://blog.enaium.cn/post/2025-1-4-lsp%E4%BB%8B%E7%BB%8D%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%AF%AD%E8%A8%80%E6%9C%8D%E5%8A%A1/</guid><description>&lt;h2 id="lsp-language-server-protocol-介绍">LSP (Language Server Protocol) 介绍&lt;/h2>
&lt;p>前段时间我为&lt;a href="https://github.com/babyfish-ct/jimmer">Jimmer DTO&lt;/a>实现了一个 &lt;code>LSP&lt;/code> 的语言服务，这是我第一次实现 &lt;code>LSP&lt;/code>，所以在这里我分享一下我实现&lt;code>LSP&lt;/code>的经验。&lt;/p>
&lt;p>首先来看一下效果，图片太多，我就放一部分，更多的可以看&lt;a href="https://github.com/Enaium/jimmer-dto-lsp">jimmer-dto-lsp&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/12/13/DvS4n6xOLCuH23e.gif" alt="属性提示">&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/12/13/rjh9IMgSbdJ2o4n.gif" alt="结构">&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2025/01/03/jD9vxHoeylE5kWc.png" alt="触摸">&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/12/27/MLb56A47U2cBVTN.png" alt="高亮">&lt;/p>
&lt;p>&lt;code>LSP&lt;/code> 是一种协议，用于在 &lt;code>IDE&lt;/code> 和语言服务器之间通信。&lt;code>IDE&lt;/code> 通过 &lt;code>LSP&lt;/code> 请求语言服务器提供代码分析服务，语言服务器通过 &lt;code>LSP&lt;/code> 响应 IDE 的请求。在没有 &lt;code>LSP&lt;/code> 之前，每个 &lt;code>IDE&lt;/code> 都需要为每种语言实现一套代码分析服务，而 &lt;code>LSP&lt;/code> 的出现使得 IDE 只需要实现一套 &lt;code>LSP&lt;/code> 协议，就可以使用任何支持 &lt;code>LSP&lt;/code> 的语言服务器。所以就大大降低了 &lt;code>IDE&lt;/code> 的开发成本。&lt;/p>
&lt;p>列如，需要从一个地方跳转到其他地方，&lt;code>IDE&lt;/code> 会发送一个请求，位置是第 &lt;code>3&lt;/code> 行第 &lt;code>12&lt;/code> 列&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;jsonrpc&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;method&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;textDocument/definition&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;params&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;textDocument&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;uri&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;file:///p%3A/mseng/VSCode/Playgrounds/cpp/use.cpp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;position&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;line&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">3&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;character&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">12&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后服务端会返回一个响应，位置是第 &lt;code>0&lt;/code> 行第 &lt;code>4&lt;/code> 列到第 &lt;code>0&lt;/code> 行第 &lt;code>11&lt;/code> 列，这样 &lt;code>IDE&lt;/code> 就可以跳转到这个位置&lt;/p></description></item><item><title>DLL劫持并使用MinHook</title><link>https://blog.enaium.cn/post/2024-11-3-dll%E5%8A%AB%E6%8C%81%E5%B9%B6%E4%BD%BF%E7%94%A8minhook/</link><pubDate>Sun, 03 Nov 2024 01:28:23 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-11-3-dll%E5%8A%AB%E6%8C%81%E5%B9%B6%E4%BD%BF%E7%94%A8minhook/</guid><description>&lt;h2 id="测试用例">测试用例&lt;/h2>
&lt;p>首先我使用&lt;code>CLion&lt;/code>写了一个简单的程序，这个程序会加载一个&lt;code>dinput8.dll&lt;/code>，然后调用一个函数显示一段文字，然后等待用户按下任意键。这个程序的代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&amp;lt;windows.h&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&amp;lt;iostream&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">display&lt;/span>(&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>text) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std&lt;span style="color:#f92672">::&lt;/span>cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> text &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> std&lt;span style="color:#f92672">::&lt;/span>endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std&lt;span style="color:#f92672">::&lt;/span>cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Press any key to continue...&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> std&lt;span style="color:#f92672">::&lt;/span>endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std&lt;span style="color:#f92672">::&lt;/span>cin.ignore();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LoadLibrary(&lt;span style="color:#e6db74">&amp;#34;dinput8.dll&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;Address: %p&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, display);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> display(&lt;span style="color:#e6db74">&amp;#34;Hello World!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们所做的就是 Hook 这个&lt;code>display&lt;/code>函数，然后在这个函数被调用时，将这个文字改为另一个文字。之后将项目进行编译，别忘了在&lt;code>CMakeLists.txt&lt;/code>中添加&lt;code>set(CMAKE_EXE_LINKER_FLAGS &amp;quot;-static&amp;quot;)&lt;/code>，这样我们就可以得到一个静态链接的可执行文件。之后我们就可以开始 Hook 这个函数了。&lt;/p>
&lt;h2 id="dll-劫持">DLL 劫持&lt;/h2>
&lt;p>首先我们需要了解一下 DLL 的加载机制，Windows 系统在加载 DLL 时，会按照一定的顺序搜索 DLL 文件，如果找到了就加载，如果没有找到就会报错。这个顺序是怎么样的呢？我们可以通过查看&lt;a href="https://docs.microsoft.com/zh-cn/windows/win32/dlls/dynamic-link-library-search-order">官方文档&lt;/a>来了解。简单来说就是首先搜索应用程序目录，然后搜索系统目录，最后搜索环境变量中指定的路径。所以我们可以使用这个机制来劫持 DLL。&lt;/p>
&lt;h2 id="包装-dll">包装 DLL&lt;/h2>
&lt;p>上面我们知道了 DLL 的加载机制，那么我们就可以知道如何让程序加载我们自己的 DLL，加载我们的 DLL 后，我们需要让这个 DLL 也拥有原 DLL 的功能，这里我们需要对原 DLL 进行包装。我们可以使用&lt;a href="https://github.com/mavenlin/wrap_dll">wrap_dll&lt;/a>这个工具来包装 DLL。这是个&lt;code>Python&lt;/code>脚本，所以你必须安装了&lt;code>Python&lt;/code>，之后这个脚本还需要&lt;code>dumpbin.exe&lt;/code>和&lt;code>undname.exe&lt;/code>这两个工具，这两个工具是 Visual Studio 自带的，所以你需要安装了&lt;code>Visual Studio&lt;/code>，并且需要将&lt;code>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.40.33807\bin\Hostx64\x64&lt;/code>设置到环境变量中。之后你就可以使用这个脚本了。&lt;/p></description></item><item><title>星露谷模组开发教程#8 自定义武器</title><link>https://blog.enaium.cn/post/2024-8-11-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%238-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%AD%A6%E5%99%A8/</link><pubDate>Sun, 11 Aug 2024 00:03:18 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-8-11-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%238-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%AD%A6%E5%99%A8/</guid><description>&lt;p>添加武器还是比较简单的，只需要在 &lt;code>Data/Weapons&lt;/code> 中添加一个新的武器数据即可。&lt;/p>
&lt;p>这里做一张&lt;code>16x16&lt;/code>格式为&lt;code>png&lt;/code>的图。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/11/ybqCiZQvUTMrdF2.png" alt="TheLastSword">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (e.Name.IsEquivalentTo(&lt;span style="color:#e6db74">&amp;#34;Data/Weapons&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.Edit(assets =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> dict = assets.AsDictionary&amp;lt;&lt;span style="color:#66d9ef">string&lt;/span>, WeaponData&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dict.Data[&lt;span style="color:#e6db74">&amp;#34;Awesome_TheLastSword&amp;#34;&lt;/span>] = &lt;span style="color:#66d9ef">new&lt;/span> WeaponData
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name = &lt;span style="color:#e6db74">&amp;#34;Awesome_TheLastSword&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DisplayName = &lt;span style="color:#e6db74">&amp;#34;The Last Sword&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Description = &lt;span style="color:#e6db74">&amp;#34;The Last Sword You Will Ever Need&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MinDamage = &lt;span style="color:#ae81ff">999&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MaxDamage = &lt;span style="color:#ae81ff">999&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CritChance = &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CanBeLostOnDeath = &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Texture = &lt;span style="color:#e6db74">&amp;#34;Awesome_TheLastSword&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (e.Name.IsEquivalentTo(&lt;span style="color:#e6db74">&amp;#34;Awesome_TheLastSword&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.LoadFromModFile&amp;lt;Texture2D&amp;gt;(&lt;span style="color:#e6db74">&amp;#34;assets/TheLastSword.png&amp;#34;&lt;/span>, AssetLoadPriority.Medium);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://s2.loli.net/2024/08/11/eAYGCntFEkWOoLD.png" alt="20240811004219">&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/11/Egbz6iQA3rkpHPM.png" alt="20240811004201">&lt;/p></description></item><item><title>星露谷模组开发教程#7 自定义机器</title><link>https://blog.enaium.cn/post/2024-8-10-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%237-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%BA%E5%99%A8/</link><pubDate>Sat, 10 Aug 2024 16:20:59 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-8-10-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%237-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%BA%E5%99%A8/</guid><description>&lt;h2 id="添加大型工艺品">添加大型工艺品&lt;/h2>
&lt;p>机器也算是大型工艺品，所以我们需要先添加它的大型工艺品。&lt;/p>
&lt;p>这里做一张&lt;code>16x32&lt;/code>格式为&lt;code>png&lt;/code>的图。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/10/aoNjZsL12gcHwUY.png" alt="Orearium">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (e.Name.IsEquivalentTo(&lt;span style="color:#e6db74">&amp;#34;Data/BigCraftables&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.Edit(assets =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> dict = assets.AsDictionary&amp;lt;&lt;span style="color:#66d9ef">string&lt;/span>, BigCraftableData&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dict.Data[&lt;span style="color:#e6db74">&amp;#34;Awesome_Orearium&amp;#34;&lt;/span>] = &lt;span style="color:#66d9ef">new&lt;/span> BigCraftableData
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name = &lt;span style="color:#e6db74">&amp;#34;Awesome_Orearium&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DisplayName = &lt;span style="color:#e6db74">&amp;#34;Orearium&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Description = &lt;span style="color:#e6db74">&amp;#34;Insert a ore of your choice and it will grow copies.&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Texture = &lt;span style="color:#e6db74">&amp;#34;Awesome_Orearium&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (e.Name.IsEquivalentTo(&lt;span style="color:#e6db74">&amp;#34;Awesome_Orearium&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.LoadFromModFile&amp;lt;Texture2D&amp;gt;(&lt;span style="color:#e6db74">&amp;#34;assets/Orearium.png&amp;#34;&lt;/span>, AssetLoadPriority.Medium);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="添加机器">添加机器&lt;/h2>
&lt;p>在&lt;code>Data/Machines.json&lt;/code>中我们可以看到所有机器的信息，我们就仿照着宝石复制机做一个矿石复制机。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (e.Name.IsEquivalentTo(&lt;span style="color:#e6db74">&amp;#34;Data/Machines&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.Edit(assets =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> dict = assets.AsDictionary&amp;lt;&lt;span style="color:#66d9ef">string&lt;/span>, MachineData&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dict.Data[&lt;span style="color:#e6db74">&amp;#34;(BC)Awesome_Orearium&amp;#34;&lt;/span>] = &lt;span style="color:#66d9ef">new&lt;/span> MachineData
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OutputRules = &lt;span style="color:#66d9ef">new&lt;/span> List&amp;lt;MachineOutputRule&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = &lt;span style="color:#e6db74">&amp;#34;Default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Triggers =
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> List&amp;lt;MachineOutputTriggerRule&amp;gt;() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = &lt;span style="color:#e6db74">&amp;#34;OutputCollected&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Trigger = MachineOutputTrigger.OutputCollected,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RequiredCount = &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = &lt;span style="color:#e6db74">&amp;#34;CopperOre&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Trigger = MachineOutputTrigger.ItemPlacedInMachine,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RequiredItemId = &lt;span style="color:#e6db74">&amp;#34;(O)378&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = &lt;span style="color:#e6db74">&amp;#34;IronOre&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Trigger = MachineOutputTrigger.ItemPlacedInMachine,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RequiredItemId = &lt;span style="color:#e6db74">&amp;#34;(O)380&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = &lt;span style="color:#e6db74">&amp;#34;GoldOre&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Trigger = MachineOutputTrigger.ItemPlacedInMachine,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RequiredItemId = &lt;span style="color:#e6db74">&amp;#34;(O)384&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = &lt;span style="color:#e6db74">&amp;#34;IridiumOre&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Trigger = MachineOutputTrigger.ItemPlacedInMachine,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RequiredItemId = &lt;span style="color:#e6db74">&amp;#34;(O)386&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OutputItem = &lt;span style="color:#66d9ef">new&lt;/span> List&amp;lt;MachineItemOutput&amp;gt;() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = &lt;span style="color:#e6db74">&amp;#34;Default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ItemId = &lt;span style="color:#e6db74">&amp;#34;DROP_IN&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MinutesUntilReady = &lt;span style="color:#ae81ff">10&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ReadyTimeModifiers = &lt;span style="color:#66d9ef">new&lt;/span> List&amp;lt;StardewValley.GameData.QuantityModifier&amp;gt;() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = &lt;span style="color:#e6db74">&amp;#34;CopperOre&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Condition = &lt;span style="color:#e6db74">&amp;#34;ITEM_ID Target (O)378&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Modification = StardewValley.GameData.QuantityModifier.ModificationType.Multiply,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Amount = &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = &lt;span style="color:#e6db74">&amp;#34;CopperOre&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Condition = &lt;span style="color:#e6db74">&amp;#34;ITEM_ID Target (O)380&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Modification = StardewValley.GameData.QuantityModifier.ModificationType.Multiply,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Amount = &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = &lt;span style="color:#e6db74">&amp;#34;CopperOre&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Condition = &lt;span style="color:#e6db74">&amp;#34;ITEM_ID Target (O)384&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Modification = StardewValley.GameData.QuantityModifier.ModificationType.Multiply,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Amount = &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = &lt;span style="color:#e6db74">&amp;#34;CopperOre&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Condition = &lt;span style="color:#e6db74">&amp;#34;ITEM_ID Target (O)386&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Modification = StardewValley.GameData.QuantityModifier.ModificationType.Multiply,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Amount = &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>首先我们需要添加一个输出规则，它有一些触发器，首先是&lt;code>OutputCollected&lt;/code>，它会将输出物品继续放入机器，接着是&lt;code>ItemPlacedInMachine&lt;/code>它可以指定只能让机器使用某些物品，比如放入矿石，它有一个&lt;code>RequiredItemId&lt;/code>属性，这表示只能放入指定的物品，这里多加了几个矿石，铜矿石、铁矿石、金矿石和铱矿石。之后是它的输出物品，它的物品ID是&lt;code>DROP_IN&lt;/code>，这表示它会复制放入的物品。最后是它的准备时间，这里是10分钟。之后我们可以使用&lt;code>ReadyTimeModifiers&lt;/code>属性来修改准备时间，它有一个&lt;code>Condition&lt;/code>属性，比如这里使用了&lt;code>ITEM_ID Target (O)378&lt;/code>，这表示如果放入的物品是铜矿石，&lt;code>Modification&lt;/code>也就是修改的类型，这里是&lt;code>Multiply&lt;/code>，&lt;code>Amount&lt;/code>也就是修改的倍数，这里是1，所以铜矿石的准备时间是10分钟，以此类推，铁矿石是20分钟，金矿石是30分钟，铱矿石是40分钟。&lt;/p></description></item><item><title>星露谷模组开发教程#6 烹饪和制造配方</title><link>https://blog.enaium.cn/post/2024-8-10-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%236-%E7%83%B9%E9%A5%AA%E5%92%8C%E5%88%B6%E9%80%A0%E9%85%8D%E6%96%B9/</link><pubDate>Sat, 10 Aug 2024 00:43:03 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-8-10-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%236-%E7%83%B9%E9%A5%AA%E5%92%8C%E5%88%B6%E9%80%A0%E9%85%8D%E6%96%B9/</guid><description>&lt;p>在上篇文章中我们添加了一个新的食物，但是这个食物并没有配方，所以我们今天来添加一个配方。&lt;/p>
&lt;h2 id="烹饪配方">烹饪配方&lt;/h2>
&lt;p>我们在&lt;code>Data/CookingRecipes.json&lt;/code>中可以看到所有的食物配方，所以我们需要修改这个配置文件来添加我们的食物配方。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (e.Name.IsEquivalentTo(&lt;span style="color:#e6db74">&amp;#34;Data/CookingRecipes&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.Edit(assets =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> dict = assets.AsDictionary&amp;lt;&lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#66d9ef">string&lt;/span>&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dict.Data[&lt;span style="color:#e6db74">&amp;#34;Awesome_GoldenApple&amp;#34;&lt;/span>] = &lt;span style="color:#e6db74">&amp;#34;613 1 336 4/1 10/Awesome_GoldenApple/default/&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>首先每个参数会用&lt;code>/&lt;/code>进行分割，第一个参数就是需要用到的物品，它是以两个数字为一对，第一个是物品的ID。第二个参数在游戏中暂时没被用到的，配置里大多数都是&lt;code>1 10&lt;/code>，所以我们也这样写。第三个参数是产出物品的ID，第四个参数是配方的获取条件，&lt;code>default&lt;/code>就是默认就会有这个配方。合起来就是一个苹果和四个金锭可以合成一个金苹果。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/10/9pXZlDKLMYhRHyC.png" alt="20240810122310">&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/10/C4FJ3jLRXUsatxp.png" alt="20240810122345">&lt;/p>
&lt;h2 id="制造配方">制造配方&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (e.Name.IsEquivalentTo(&lt;span style="color:#e6db74">&amp;#34;Data/CraftingRecipes&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.Edit(assets =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> dict = assets.AsDictionary&amp;lt;&lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#66d9ef">string&lt;/span>&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dict.Data[&lt;span style="color:#e6db74">&amp;#34;72&amp;#34;&lt;/span>] = &lt;span style="color:#e6db74">&amp;#34;122 1 382 20/Field/72/false/default/&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>和烹饪配方一样，制造配方中第二个参数也是未被使用的，可以是&lt;code>Field&lt;/code>或&lt;code>Home&lt;/code>，不一样的是多了一个是否为大型工艺品。这里使用一个矮人小工具和二十个煤炭制造一个钻石。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/10/wP3YOlyGbXsJKhm.png" alt="20240810131317">&lt;/p></description></item><item><title>星露谷模组开发教程#5 自定义物品</title><link>https://blog.enaium.cn/post/2024-8-7-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%235-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%89%A9%E5%93%81/</link><pubDate>Wed, 07 Aug 2024 22:37:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-8-7-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%235-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%89%A9%E5%93%81/</guid><description>&lt;p>上篇文章我们已经学习到了如何去替换和修改游戏的内容，这篇文章我们将学习如何添加自定义物品。&lt;/p>
&lt;h2 id="修改-objects-数据">修改 Objects 数据&lt;/h2>
&lt;p>游戏中几乎所有的普通物品被称为&lt;code>Object&lt;/code>，我们也会看到&lt;code>Data\Objects.json&lt;/code>文件中有着许多数据。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (e.Name.IsEquivalentTo(&lt;span style="color:#e6db74">&amp;#34;Data/Objects&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.Edit(assets =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> dict = assets.AsDictionary&amp;lt;&lt;span style="color:#66d9ef">string&lt;/span>, ObjectData&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> diamond = &lt;span style="color:#66d9ef">new&lt;/span> ObjectData
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name = &lt;span style="color:#e6db74">&amp;#34;Awesome_Diamond&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DisplayName = &lt;span style="color:#e6db74">&amp;#34;Diamond&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Description = &lt;span style="color:#e6db74">&amp;#34;This is a diamond from Minecraft.&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type = &lt;span style="color:#e6db74">&amp;#34;Minerals&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Category = StardewValley.Object.GemCategory,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Price = &lt;span style="color:#ae81ff">10000&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Texture = &lt;span style="color:#e6db74">&amp;#34;Awesome_Diamond&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dict.Data[&lt;span style="color:#e6db74">&amp;#34;Awesome_Diamond&amp;#34;&lt;/span>] = diamond;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>首先我们先判断是否为&lt;code>Data/Objects&lt;/code>，接着我们使用&lt;code>ObjectData&lt;/code>去创建一个&lt;code>ObjectData&lt;/code>对象，然后我们设置&lt;code>Name&lt;/code>，&lt;code>DisplayName&lt;/code>，&lt;code>Description&lt;/code>，&lt;code>Type&lt;/code>，&lt;code>Category&lt;/code>，&lt;code>Price&lt;/code>，&lt;code>SpriteIndex&lt;/code>，&lt;code>Texture&lt;/code>，最后我们将这个对象添加到&lt;code>Data&lt;/code>中。&lt;/p>
&lt;h2 id="添加物品图片">添加物品图片&lt;/h2>
&lt;p>这里做一张&lt;code>16x16&lt;/code>格式为&lt;code>png&lt;/code>的图。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/08/MizstxXLmlvdCuU.png" alt="Diamond">&lt;/p>
&lt;p>我们需要在&lt;code>assets&lt;/code>文件夹下创建一个&lt;code>Awesome_Diamond.png&lt;/code>文件，然后将我们的图片放入其中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (e.Name.IsEquivalentTo(&lt;span style="color:#e6db74">&amp;#34;Awesome_Diamond&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.LoadFromModFile&amp;lt;Texture2D&amp;gt;(&lt;span style="color:#e6db74">&amp;#34;assets/Diamond.png&amp;#34;&lt;/span>, AssetLoadPriority.Medium);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们使用物品生成器搜索&lt;code>diamond&lt;/code>就会看到我们添加的自定义物品。&lt;/p></description></item><item><title>星露谷模组开发教程#4 替换修改内容</title><link>https://blog.enaium.cn/post/2024-8-5-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%234-%E6%9B%BF%E6%8D%A2%E4%BF%AE%E6%94%B9%E5%86%85%E5%AE%B9/</link><pubDate>Mon, 05 Aug 2024 21:04:40 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-8-5-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%234-%E6%9B%BF%E6%8D%A2%E4%BF%AE%E6%94%B9%E5%86%85%E5%AE%B9/</guid><description>&lt;p>在上篇教程中，我们学习了如何添加游戏事件，其中我们知道了&lt;code>AssetRequested&lt;/code>事件，它也可以替换或者修改游戏内的内容。在这篇教程中，我们将学习如何替换修改游戏内的内容。&lt;/p>
&lt;h2 id="解包游戏内容">解包游戏内容&lt;/h2>
&lt;p>在替换游戏内容直接我们需要知道每个文件的路径，我们可以使用&lt;a href="https://github.com/Pathoschild/StardewXnbHack">StardewXnbHack&lt;/a>来解包游戏内容，下载完成之后将&lt;code>StardewXnbHack&lt;/code>文件放到游戏目录下，然后运行&lt;code>StardewXnbHack&lt;/code>，它会自动解包游戏内容到&lt;code>Stardew Valley\Content (unpacked)&lt;/code>文件夹下。&lt;/p>
&lt;h2 id="替换图片内容">替换图片内容&lt;/h2>
&lt;p>这里就先替换游戏的肖像图片，我们可以在&lt;code>Stardew Valley\Content (unpacked)\Portraits&lt;/code>文件夹下找到肖像图片，比如这里我选择替换&lt;code>Abigail.png&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/05/xG4c7JQe3WuaDlC.png" alt="Abigail">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> OnAssetRequested(&lt;span style="color:#66d9ef">object?&lt;/span> sender, AssetRequestedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (e.Name.IsEquivalentTo(&lt;span style="color:#e6db74">&amp;#34;Portraits/Abigail&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.LoadFromModFile&amp;lt;Texture2D&amp;gt;(&lt;span style="color:#e6db74">&amp;#34;assets/Abigail.png&amp;#34;&lt;/span>, AssetLoadPriority.Medium);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>首先判断资源名称是否为&lt;code>Portraits/Abigail&lt;/code>，然后使用&lt;code>LoadFromModFile&lt;/code>来加载我们的图片文件，第一个参数就是图片的路径，也就是&lt;code>assets/Abigail.png&lt;/code>，这里就是在项目的目录下创建一个&lt;code>assets&lt;/code>文件夹，然后放入我们的图片文件，这样就可以替换游戏内的图片了，第二个参数是加载优先级，这里选择&lt;code>Medium&lt;/code>，如果有多个模组替换同一个文件，优先级高的会生效。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/05/TjXtDKyUYbzp2i3.png" alt="20240805225516">&lt;/p>
&lt;h2 id="修改图片内容">修改图片内容&lt;/h2>
&lt;p>这里依旧是修改&lt;code>Abigail.png&lt;/code>，这里准备一张有&lt;code>Alpah&lt;/code>通道的图片，然后将它遮罩到&lt;code>Abigail.png&lt;/code>上。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/05/9Cvp4n2YtkasWm5.png" alt="Black">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> OnAssetRequested(&lt;span style="color:#66d9ef">object?&lt;/span> sender, AssetRequestedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (e.Name.IsEquivalentTo(&lt;span style="color:#e6db74">&amp;#34;Portraits/Abigail&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.Edit(asset =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> editor = asset.AsImage();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IRawTextureData sourceImage = Helper.ModContent.Load&amp;lt;IRawTextureData&amp;gt;(&lt;span style="color:#e6db74">&amp;#34;assets/Black.png&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> editor.PatchImage(sourceImage, patchMode: PatchMode.Overlay);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>调用&lt;code>Edit&lt;/code>方法，之后将资源转为一个图片，然后加载我们的图片文件，之后调用&lt;code>PatchImage&lt;/code>方法，第一个参数是我们的图片文件，第二个参数是修补模式，这里选择&lt;code>Overlay&lt;/code>，这样就可以将我们的图片遮罩到游戏内的图片上了。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/05/k5iMXtWOKmJHY6B.png" alt="20240805225201">&lt;/p>
&lt;h2 id="修改数据内容">修改数据内容&lt;/h2>
&lt;p>这里我们选择修改商店的数据，我们可以在&lt;code>Stardew Valley\Content (unpacked)\Data&lt;/code>文件夹下找到&lt;code>Shops.json&lt;/code>文件，这个文件包含了所有物品的数据。&lt;/p></description></item><item><title>星露谷模组开发教程#3 事件</title><link>https://blog.enaium.cn/post/2024-8-4-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%233-%E4%BA%8B%E4%BB%B6/</link><pubDate>Sun, 04 Aug 2024 14:11:07 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-8-4-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%233-%E4%BA%8B%E4%BB%B6/</guid><description>&lt;p>&lt;code>SMAPI&lt;/code>提供了一些事件，比如游戏的内容、显示、输入等事件。这些事件可以让我们在游戏中添加自己的逻辑。这一节我们就来看看如何使用这些事件。&lt;/p>
&lt;h2 id="注册一个事件">注册一个事件&lt;/h2>
&lt;p>在&lt;code>SMAPI&lt;/code>中，我们可以通过&lt;code>IModHelper&lt;/code>的&lt;code>Events&lt;/code>属性来注册事件。比如我们要注册游戏启动事件，可以这样写：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Entry(IModHelper helper)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> helper.Events.GameLoop.GameLaunched += OnLaunched;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> OnLaunched(&lt;span style="color:#66d9ef">object?&lt;/span> sender, GameLaunchedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样我们就注册了一个游戏启动事件。当游戏启动时，&lt;code>OnLaunched&lt;/code>方法就会被调用，它有两个参数，第一个是事件的发送者，它是一个可空的对象，第二个是事件的参数，它是一个&lt;code>GameLaunchedEventArgs&lt;/code>对象。这个对象里面没有任何属性，只是一个空的类。&lt;/p>
&lt;h2 id="输入事件">输入事件&lt;/h2>
&lt;p>先来看一下按键按下或释放的事件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Entry(IModHelper helper)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> helper.Events.Input.ButtonPressed += OnPress;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> OnPress(&lt;span style="color:#66d9ef">object?&lt;/span> sender, ButtonPressedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Monitor.Log(&lt;span style="color:#e6db74">$&amp;#34;{e.Button} Press&amp;#34;&lt;/span>, LogLevel.Debug);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样我们就注册了一个按键按下事件。当按键按下时，&lt;code>OnPress&lt;/code>方法就会被调用，它有两个参数，第一个是事件的发送者，它是一个可空的对象，第二个是事件的参数，它是一个&lt;code>ButtonPressedEventArgs&lt;/code>对象。这个对象有一个属性&lt;code>Button&lt;/code>，它是一个&lt;code>SButton&lt;/code>枚举，表示按下的按键。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Entry(IModHelper helper)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> helper.Events.Input.ButtonReleased += OnReleased;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> OnReleased(&lt;span style="color:#66d9ef">object?&lt;/span> sender, ButtonReleasedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Monitor.Log(&lt;span style="color:#e6db74">$&amp;#34;{e.Button} Released&amp;#34;&lt;/span>, LogLevel.Debug);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样我们就注册了一个按键释放事件。当按键释放时，&lt;code>OnReleased&lt;/code>方法就会被调用，它有两个参数，第一个是事件的发送者，它是一个可空的对象，第二个是事件的参数，它是一个&lt;code>ButtonReleasedEventArgs&lt;/code>对象。这个对象有一个属性&lt;code>Button&lt;/code>，它是一个&lt;code>SButton&lt;/code>枚举，表示释放的按键。&lt;/p>
&lt;p>上面这些按键事件只能获取一个按键，如果要获取多个按键，可以使用&lt;code>ButtonsChanged&lt;/code>事件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Entry(IModHelper helper)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> helper.Events.Input.ButtonsChanged += OnChanged;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> OnChanged(&lt;span style="color:#66d9ef">object?&lt;/span> sender, ButtonsChangedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (e.Pressed.Any())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Monitor.Log(&lt;span style="color:#e6db74">$&amp;#34;{string.Join(&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;, e.Pressed)} Press&amp;#34;&lt;/span>, LogLevel.Debug);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (e.Released.Any())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Monitor.Log(&lt;span style="color:#e6db74">$&amp;#34;{string.Join(&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;, e.Released)} Released&amp;#34;&lt;/span>, LogLevel.Debug);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当事件被触发时，&lt;code>Pressed&lt;/code>属性表示按下的按键，&lt;code>Released&lt;/code>属性表示释放的按键，之后我们判断按键是否为空，如果不为空，就输出按键。&lt;/p></description></item><item><title>星露谷模组开发教程#2 创建模组项目</title><link>https://blog.enaium.cn/post/2024-8-3-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%232-%E5%88%9B%E5%BB%BA%E6%A8%A1%E7%BB%84%E9%A1%B9%E7%9B%AE/</link><pubDate>Sat, 03 Aug 2024 18:15:46 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-8-3-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%232-%E5%88%9B%E5%BB%BA%E6%A8%A1%E7%BB%84%E9%A1%B9%E7%9B%AE/</guid><description>&lt;h2 id="创建模组项目">创建模组项目&lt;/h2>
&lt;p>经过之前的配置，现在可以创建模组项目了，我们可以创建一个空白的文件夹，然后用&lt;code>Visual Studio Code&lt;/code>打开它，之后使用&lt;code>dotnet new classlib&lt;/code>来创建一个项目。&lt;/p>
&lt;p>我们可以看到，项目中有一个&lt;code>Class1.cs&lt;/code>文件，这个就是&lt;code>C#&lt;/code>的源文件，还有一个&lt;code>awesome.csproj&lt;/code>文件，这个是&lt;code>C#&lt;/code>项目的配置文件，我们需要将里面的&lt;code>net8.0&lt;/code>改为&lt;code>net6.0&lt;/code>。&lt;/p>
&lt;p>我们可以将&lt;code>Class1.cs&lt;/code>名称改为我们想要的名称，比如这里我就叫&lt;code>ModEntry.cs&lt;/code>，之后将源文件里的类名也改为&lt;code>ModEntry&lt;/code>。&lt;/p>
&lt;p>之后需要添加模组需要用到的&lt;code>NuGet&lt;/code>包，我们可以使用命令&lt;code>dotnet add package Pathoschild.Stardew.ModBuildConfig&lt;/code>来添加模组所需用的包。&lt;/p>
&lt;h2 id="编写模组代码">编写模组代码&lt;/h2>
&lt;p>首先进入到&lt;code>ModEntry&lt;/code>之中，之后继承&lt;code>Mod&lt;/code>这个抽象类，这里如果&lt;code>Visual Studio Code&lt;/code>没有提示，可以重新打开。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> StardewModdingAPI;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> awesome;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ModEntry&lt;/span> : Mod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里由于是抽象类，我们需要实现它的抽象的方法，这里&lt;code>Visual Studio Code&lt;/code>会在&lt;code>ModEntry&lt;/code>上提示，在这里使用快捷键&lt;code>Shift&lt;/code>+&lt;code>Alt&lt;/code>+&lt;code>.&lt;/code>可以使用快速修复。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> StardewModdingAPI;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> awesome;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ModEntry&lt;/span> : Mod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Entry(IModHelper helper)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> NotImplementedException();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样它就会实现一个方法，这个方法会在模组加载时调用，我们可以打印一个日志来测试一下。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> StardewModdingAPI;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> awesome;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ModEntry&lt;/span> : Mod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Entry(IModHelper helper)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Monitor.Log(&lt;span style="color:#e6db74">&amp;#34;Hello SMAPI!.&amp;#34;&lt;/span>, LogLevel.Debug);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里我们使用&lt;code>Monitor.Log&lt;/code>来打印一个日志，第一个参数是日志的内容，第二个参数是日志的等级，这里我们使用&lt;code>LogLevel.Debug&lt;/code>来打印一个调试日志。&lt;/p></description></item><item><title>星露谷模组开发教程#1 配置开发环境</title><link>https://blog.enaium.cn/post/2024-8-3-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%231-%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Sat, 03 Aug 2024 16:56:31 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-8-3-%E6%98%9F%E9%9C%B2%E8%B0%B7%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%231-%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>&lt;h2 id="安装net-sdk">安装.NET SDK&lt;/h2>
&lt;p>首先我们需要下载&lt;a href="https://dotnet.microsoft.com/en-us/download">.NET SDK&lt;/a>，这里当前最新的LTS是&lt;code>.NET 8&lt;/code>，我们选择&lt;code>.NET 8&lt;/code>进行下载。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/03/X3HkvTl6MeidOsn.png" alt="20240803170430">&lt;/p>
&lt;p>点击&lt;code>Download .NET SDK x64&lt;/code>进行下载。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/03/y6FvItrBMKG3J5E.png" alt="20240803170636">&lt;/p>
&lt;p>下载完成之后点击安装&lt;/p>
&lt;p>输入命令&lt;code>dotnet --version&lt;/code>，如果安装成功你就会看到终端中会输出当前的版本号。&lt;/p>
&lt;h2 id="安装visual-studio-code">安装Visual Studio Code&lt;/h2>
&lt;p>接着进入&lt;a href="https://code.visualstudio.com/Download">Visual Studio Code&lt;/a>的下载页面&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/03/HAJgCxhR3MSasGk.png" alt="20240803171235">&lt;/p>
&lt;p>选择对应的版本进行下载。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/03/NIrkJBOCDPciwaU.png" alt="20240803171348">&lt;/p>
&lt;p>接受之后一直下一步到完成。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/03/4iEHX1rmSUpFqJc.png" alt="20240803171442">&lt;/p>
&lt;h2 id="配置visual-studio-code">配置Visual Studio Code&lt;/h2>
&lt;p>进入到插件管理搜索&lt;code>C#&lt;/code>，点击安装。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/08/03/bcCXmkqK26MORag.png" alt="20240803175616">&lt;/p>
&lt;p>好了，这样我们配置环境这一步就大功告成了。&lt;/p>
&lt;h2 id="安装smapi">安装SMAPI&lt;/h2>
&lt;p>这里大家肯定都装了，应该还没有连模组都不会装就来看模组开发了吧。&lt;/p></description></item><item><title>Windows下Rust OpenCV环境配置</title><link>https://blog.enaium.cn/post/2024-7-28-windows%E4%B8%8Brust-opencv%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link><pubDate>Sun, 28 Jul 2024 21:14:31 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-7-28-windows%E4%B8%8Brust-opencv%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid><description>&lt;h2 id="安装chocolatey">安装Chocolatey&lt;/h2>
&lt;p>首先我们需要&lt;a href="https://chocolatey.org/">安装&lt;code>Chocolatey&lt;/code>&lt;/a>，&lt;code>Chocolatey&lt;/code>是一个Windows的包管理器。&lt;/p>
&lt;p>我们点击右上角的&lt;code>Install&lt;/code>进入到&lt;code>Installing Chocolatey&lt;/code>，选择&lt;code>Individual&lt;/code>&lt;/p>
&lt;p>复制命令&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Set-ExecutionPolicy Bypass -Scope &lt;span style="color:#66d9ef">Process&lt;/span> -Force; [&lt;span style="color:#66d9ef">System.Net.ServicePointManager&lt;/span>]::SecurityProtocol = [&lt;span style="color:#66d9ef">System.Net.ServicePointManager&lt;/span>]::SecurityProtocol &lt;span style="color:#f92672">-bor&lt;/span> &lt;span style="color:#ae81ff">3072&lt;/span>; iex ((New-Object System.Net.WebClient).DownloadString(&lt;span style="color:#e6db74">&amp;#39;https://community.chocolatey.org/install.ps1&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用管理员模式打开&lt;code>PowerShell&lt;/code>，粘贴命令，等待安装完成。&lt;/p>
&lt;h2 id="安装llvm和opencv">安装llvm和opencv&lt;/h2>
&lt;p>安装过程中可能会由于网络问题导致安装失败，可以多次尝试。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>choco install llvm opencv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置环境变量">配置环境变量&lt;/h2>
&lt;p>首先设置&lt;code>OPENCV_INCLUDE_PATHS&lt;/code>环境变量，值为&lt;code>C:\tools\opencv\build\include&lt;/code>，然后设置&lt;code>OPENCV_LINK_PATHS&lt;/code>环境变量，值为&lt;code>C:\tools\opencv\build\x64\vc16\lib&lt;/code>，接着设置&lt;code>OPENCV_LINK_LIBS&lt;/code>环境变量，值为&lt;code>opencv_worldxxxx&lt;/code>，&lt;code>xxxx&lt;/code>是你的&lt;code>OpenCV&lt;/code>版本号，例如&lt;code>opencv_world4100&lt;/code>。&lt;/p>
&lt;p>最后我们需要将&lt;code>C:\tools\opencv\build\x64\vc16\bin&lt;/code>添加到&lt;code>Path&lt;/code>环境变量中。&lt;/p>
&lt;h2 id="配置cargotoml">配置Cargo.toml&lt;/h2>
&lt;p>在&lt;code>Cargo.toml&lt;/code>中添加如下内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">dependencies&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">opencv&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;0.92.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="测试">测试&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rs" data-lang="rs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> opencv::{Error, highgui, imgcodecs};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() -&amp;gt; Result&lt;span style="color:#f92672">&amp;lt;&lt;/span>(), Error&lt;span style="color:#f92672">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> image_path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;images/mugshot.png&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> image &lt;span style="color:#f92672">=&lt;/span> imgcodecs::imread(&lt;span style="color:#f92672">&amp;amp;&lt;/span>image_path, imgcodecs::&lt;span style="color:#66d9ef">IMREAD_COLOR&lt;/span>)&lt;span style="color:#f92672">?&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> highgui::imshow(&lt;span style="color:#e6db74">&amp;#34;trump.png&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>image)&lt;span style="color:#f92672">?&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> highgui::wait_key(&lt;span style="color:#ae81ff">0&lt;/span>)&lt;span style="color:#f92672">?&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> Ok(());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行&lt;code>cargo run&lt;/code>，如果一切正常，你将看到一张图片弹出。&lt;/p>
&lt;p>&lt;img src="https://s21.ax1x.com/2024/07/28/pkqHbVg.png" alt="trump.png">&lt;/p></description></item><item><title>Vue项目整合Cordova一键打包apk</title><link>https://blog.enaium.cn/post/2024-7-13-vue%E9%A1%B9%E7%9B%AE%E6%95%B4%E5%90%88cordova%E4%B8%80%E9%94%AE%E6%89%93%E5%8C%85apk/</link><pubDate>Sat, 13 Jul 2024 23:40:06 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-7-13-vue%E9%A1%B9%E7%9B%AE%E6%95%B4%E5%90%88cordova%E4%B8%80%E9%94%AE%E6%89%93%E5%8C%85apk/</guid><description>&lt;p>&lt;code>Cordova&lt;/code>是一个依赖于&lt;code>Node.js&lt;/code>的工具，它可以将&lt;code>HTML&lt;/code>页面打包为&lt;code>apk&lt;/code>等移动端应用，本篇文章将介绍如何使用&lt;code>Cordova&lt;/code>将&lt;code>Vue&lt;/code>项目打包为&lt;code>apk&lt;/code>。&lt;/p>
&lt;h2 id="创建corodva项目">创建&lt;code>Corodva&lt;/code>项目&lt;/h2>
&lt;p>首先，我们需要安装&lt;code>Cordova&lt;/code>，可以使用&lt;code>npm&lt;/code>进行安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>npm install -g cordova
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装完成后，我们可以使用&lt;code>cordova create&lt;/code>命令创建一个&lt;code>Cordova&lt;/code>项目：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cordova create test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后进入到&lt;code>test&lt;/code>目录，添加到&lt;code>Android&lt;/code>平台：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cd test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cordova platform add android
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样就可以测试&lt;code>Cordova&lt;/code>项目了，可以使用&lt;code>cordova build&lt;/code>进行打包。&lt;/p>
&lt;p>在打包之前需要注意以下几点：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如果之前没有使用过&lt;code>Java&lt;/code>编程语言，则需要安装&lt;code>JDK&lt;/code>，并且版本需要大于等于&lt;code>11&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果之前没有使用过&lt;code>Gradle&lt;/code>，则需要安装&lt;code>Gradle&lt;/code>，并配置它的&lt;code>bin&lt;/code>目录到&lt;code>PATH&lt;/code>环境变量。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果之前没有开发过&lt;code>Android&lt;/code>项目，则需要安装&lt;code>Android Studio&lt;/code>，并下载&lt;code>Android SDK&lt;/code>，然后配置&lt;code>ANDROID_HOME&lt;/code>环境变量。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>如果过程顺利，那么会在&lt;code>app/build/outputs&lt;/code>目录下生成&lt;code>apk&lt;/code>文件。&lt;/p>
&lt;h2 id="整合vue项目">整合&lt;code>Vue&lt;/code>项目&lt;/h2>
&lt;p>首先我们可以将&lt;code>vue&lt;/code>和&lt;code>cordova&lt;/code>当成一个子项目，之后统一打包。&lt;/p>
&lt;p>这里我们可以将&lt;code>cordova&lt;/code>项目中的&lt;code>config.xml&lt;/code>文件复制到一个空白的&lt;code>node&lt;/code>项目中，之后创建一个空白的&lt;code>www&lt;/code>目录，之后添加&lt;code>cordova&lt;/code>依赖，这样就可以直接使用&lt;code>npx cordova add platform android&lt;/code>添加&lt;code>android&lt;/code>平台，通过&lt;code>npx cordova build&lt;/code>进行打包。&lt;/p>
&lt;p>之后通过修改&lt;code>vite.config.ts&lt;/code>配置文件，将&lt;code>outputDir&lt;/code>修改为&lt;code>www&lt;/code>目录，这样就可以将&lt;code>vue&lt;/code>项目打包到&lt;code>cordova&lt;/code>项目中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-typescript" data-lang="typescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#a6e22e">defineConfig&lt;/span>({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">build&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">outDir&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;../cordova/www&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样&lt;code>vue&lt;/code>和&lt;code>cordova&lt;/code>就整合到一起了。&lt;/p>
&lt;h2 id="一键打包">一键打包&lt;/h2>
&lt;p>我们可以通过配置根项目的&lt;code>package.json&lt;/code>文件，添加&lt;code>scripts&lt;/code>命令，这样就可以一键打包&lt;code>apk&lt;/code>了。&lt;/p>
&lt;p>Cordova:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;scripts&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;build&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;cordova build android&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;run&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;cordova run android&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Vue: 默认&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;workspaces&amp;#34;&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;packages/vue&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;packages/cordova&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;scripts&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;vue:dev&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;cd packages/vue &amp;amp;&amp;amp; yarn dev&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;vue:build&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;cd packages/vue &amp;amp;&amp;amp; yarn build&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;cordova:build&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;cd packages/cordova &amp;amp;&amp;amp; yarn build&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;cordova:run&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;cd packages/cordova &amp;amp;&amp;amp; yarn run&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;build&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;yarn vue:build &amp;amp;&amp;amp; yarn cordova:build&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Rust入门实战 编写Minecraft启动器#5启动游戏</title><link>https://blog.enaium.cn/post/2024-7-5-rust%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98-%E7%BC%96%E5%86%99minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%235%E5%90%AF%E5%8A%A8%E6%B8%B8%E6%88%8F/</link><pubDate>Fri, 05 Jul 2024 20:19:35 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-7-5-rust%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98-%E7%BC%96%E5%86%99minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%235%E5%90%AF%E5%8A%A8%E6%B8%B8%E6%88%8F/</guid><description>&lt;p>好了，我们已经完成了所有的准备工作，现在我们可以开始编写启动游戏的代码了。&lt;/p>
&lt;p>首先我们需要添加几个依赖。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">model&lt;/span> = { &lt;span style="color:#a6e22e">path&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;../model&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">parse&lt;/span> = { &lt;span style="color:#a6e22e">path&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;../parse&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">download&lt;/span> = { &lt;span style="color:#a6e22e">path&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;../download&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">clap&lt;/span> = { &lt;span style="color:#a6e22e">version&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;4.5&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">zip&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;2.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>clap&lt;/code>用于解析命令行参数，&lt;code>zip&lt;/code>用于解压文件。&lt;/p>
&lt;p>首先创建一个&lt;code>cli&lt;/code>函数用于构建我们的命令行。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">cli&lt;/span>() -&amp;gt; &lt;span style="color:#a6e22e">Command&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Command::new(&lt;span style="color:#e6db74">&amp;#34;rmcl&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .about(&lt;span style="color:#e6db74">&amp;#34;A Minecraft launcher written in Rust&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .version(&lt;span style="color:#e6db74">&amp;#34;0.1.0&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .author(&lt;span style="color:#e6db74">&amp;#34;Enaium&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .subcommand_required(&lt;span style="color:#66d9ef">true&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .arg_required_else_help(&lt;span style="color:#66d9ef">true&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .allow_external_subcommands(&lt;span style="color:#66d9ef">true&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .subcommand(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Command::new(&lt;span style="color:#e6db74">&amp;#34;search&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .about(&lt;span style="color:#e6db74">&amp;#34;Search Game&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .arg(arg!([&lt;span style="color:#66d9ef">VERSION&lt;/span>] &lt;span style="color:#e6db74">&amp;#34;Game version&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .arg(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> arg!(&lt;span style="color:#f92672">-&lt;/span>t &lt;span style="color:#f92672">--&lt;/span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#66d9ef">TYPE&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Game type&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .value_parser([&lt;span style="color:#e6db74">&amp;#34;release&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;snapshot&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;old_beta&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;old_alpha&amp;#34;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .require_equals(&lt;span style="color:#66d9ef">true&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .default_value(&lt;span style="color:#e6db74">&amp;#34;release&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .default_missing_value(&lt;span style="color:#e6db74">&amp;#34;release&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .subcommand(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Command::new(&lt;span style="color:#e6db74">&amp;#34;download&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .about(&lt;span style="color:#e6db74">&amp;#34;Download Game&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .arg(arg!(&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#66d9ef">VERSION&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Game Version&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .arg_required_else_help(&lt;span style="color:#66d9ef">true&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .subcommand(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Command::new(&lt;span style="color:#e6db74">&amp;#34;launch&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .about(&lt;span style="color:#e6db74">&amp;#34;Launch Game&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .arg(arg!(&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#66d9ef">VERSION&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Game Version&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .arg_required_else_help(&lt;span style="color:#66d9ef">true&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着创建一个&lt;code>get_version_manifest&lt;/code>函数用于获取游戏的所有版本清单。&lt;/p></description></item><item><title>Rust入门实战 编写Minecraft启动器#4下载资源</title><link>https://blog.enaium.cn/post/2024-7-5-rust%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98-%E7%BC%96%E5%86%99minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%234%E4%B8%8B%E8%BD%BD%E8%B5%84%E6%BA%90/</link><pubDate>Fri, 05 Jul 2024 19:58:57 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-7-5-rust%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98-%E7%BC%96%E5%86%99minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%234%E4%B8%8B%E8%BD%BD%E8%B5%84%E6%BA%90/</guid><description>&lt;p>首先我们需要添加几个依赖。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">model&lt;/span> = { &lt;span style="color:#a6e22e">path&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;../model&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">parse&lt;/span> = { &lt;span style="color:#a6e22e">path&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;../parse&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">reqwest&lt;/span> = { &lt;span style="color:#a6e22e">version&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;0.12&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">features&lt;/span> = [&lt;span style="color:#e6db74">&amp;#34;blocking&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;json&amp;#34;&lt;/span>] }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">file-hashing&lt;/span> = { &lt;span style="color:#a6e22e">version&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;0.1&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">sha1&lt;/span> = { &lt;span style="color:#a6e22e">version&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;0.10&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>reqwest&lt;/code>用于发送请求，&lt;code>file-hashing&lt;/code>用于计算文件的&lt;code>hash&lt;/code>，&lt;code>sha1&lt;/code>用于计算&lt;code>sha1&lt;/code>。&lt;/p>
&lt;p>之后我们需要添加下载的&lt;code>trait&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">pub&lt;/span> &lt;span style="color:#66d9ef">trait&lt;/span> Download {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">download&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>self, game_dir: &lt;span style="color:#66d9ef">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">Path&lt;/span>) -&amp;gt; Result&lt;span style="color:#f92672">&amp;lt;&lt;/span>(), Box&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#66d9ef">dyn&lt;/span> std::error::Error&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着我们需要使用&lt;code>Client::builder()&lt;/code>来创建一个&lt;code>Client&lt;/code>，因为默认的&lt;code>get&lt;/code>方法会用有个超时时间，而我们需要设置超时时间为无限。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">pub&lt;/span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>T: &lt;span style="color:#a6e22e">reqwest&lt;/span>::IntoUrl&lt;span style="color:#f92672">&amp;gt;&lt;/span>(url: &lt;span style="color:#a6e22e">T&lt;/span>) -&amp;gt; &lt;span style="color:#a6e22e">reqwest&lt;/span>::Result&lt;span style="color:#f92672">&amp;lt;&lt;/span>reqwest::blocking::Response&lt;span style="color:#f92672">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reqwest::blocking::Client::builder()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .timeout(None)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .build()&lt;span style="color:#f92672">?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .get(url)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .send()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后我们需要创建一个计算文件&lt;code>hash&lt;/code>的函数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">pub&lt;/span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">sha1&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>P: AsRef&lt;span style="color:#f92672">&amp;lt;&lt;/span>Path&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span>(path: &lt;span style="color:#a6e22e">P&lt;/span>) -&amp;gt; Result&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, std::io::Error&lt;span style="color:#f92672">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#66d9ef">mut&lt;/span> hasher &lt;span style="color:#f92672">=&lt;/span> Sha1::new();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file_hashing::get_hash_file(path, &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#66d9ef">mut&lt;/span> hasher)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后需要出创建&lt;code>asset.rs&lt;/code>、&lt;code>library.rs&lt;/code>、&lt;code>version.rs&lt;/code>文件，分别对应下载资源、下载库、下载游戏版本。&lt;/p></description></item><item><title>Rust入门实战 编写Minecraft启动器#3解析资源配置</title><link>https://blog.enaium.cn/post/2024-7-4-rust%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98-%E7%BC%96%E5%86%99minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%233%E8%A7%A3%E6%9E%90%E8%B5%84%E6%BA%90%E9%85%8D%E7%BD%AE/</link><pubDate>Thu, 04 Jul 2024 23:29:27 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-7-4-rust%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98-%E7%BC%96%E5%86%99minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%233%E8%A7%A3%E6%9E%90%E8%B5%84%E6%BA%90%E9%85%8D%E7%BD%AE/</guid><description>&lt;p>在上一篇文章中，我们已经建立了资源模型，接下来我们需要解析游戏的配置文件。&lt;/p>
&lt;p>首先我们添加&lt;code>serde_json&lt;/code>依赖和&lt;code>model&lt;/code>依赖。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">model&lt;/span> = { &lt;span style="color:#a6e22e">path&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;../model&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">serde_json&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后我们在&lt;code>lib.rs&lt;/code>中添加解析的&lt;code>trait&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">pub&lt;/span> &lt;span style="color:#66d9ef">trait&lt;/span> Parse&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span>: Sized {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Error&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">parse&lt;/span>(value: &lt;span style="color:#a6e22e">T&lt;/span>) -&amp;gt; Result&lt;span style="color:#f92672">&amp;lt;&lt;/span>Self, Self::Error&lt;span style="color:#f92672">&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后将所有的&lt;code>model&lt;/code>都实现这个&lt;code>trait&lt;/code>，并测试它们。这里其实只用将需要手动解析的实现这个&lt;code>trait&lt;/code>，其他的会在我们用&lt;code>reqwest&lt;/code>下载的时候自动解析。&lt;/p>
&lt;p>&lt;code>asset.rs&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> model::asset::&lt;span style="color:#f92672">*&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> &lt;span style="color:#66d9ef">crate&lt;/span>::Parse;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">impl&lt;/span> Parse&lt;span style="color:#f92672">&amp;lt;&amp;amp;&lt;/span>&lt;span style="color:#66d9ef">str&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> AssetIndex {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Error&lt;/span> &lt;span style="color:#f92672">=&lt;/span> serde_json::Error;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">parse&lt;/span>(value: &lt;span style="color:#66d9ef">&amp;amp;&lt;/span>&lt;span style="color:#66d9ef">str&lt;/span>) -&amp;gt; Result&lt;span style="color:#f92672">&amp;lt;&lt;/span>Self, Self::Error&lt;span style="color:#f92672">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> serde_json::from_str::&lt;span style="color:#f92672">&amp;lt;&lt;/span>AssetIndex&lt;span style="color:#f92672">&amp;gt;&lt;/span>(value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">impl&lt;/span> Parse&lt;span style="color:#f92672">&amp;lt;&amp;amp;&lt;/span>&lt;span style="color:#66d9ef">str&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> Index {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Error&lt;/span> &lt;span style="color:#f92672">=&lt;/span> serde_json::Error;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">parse&lt;/span>(value: &lt;span style="color:#66d9ef">&amp;amp;&lt;/span>&lt;span style="color:#66d9ef">str&lt;/span>) -&amp;gt; Result&lt;span style="color:#f92672">&amp;lt;&lt;/span>Self, Self::Error&lt;span style="color:#f92672">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> serde_json::from_str::&lt;span style="color:#f92672">&amp;lt;&lt;/span>Index&lt;span style="color:#f92672">&amp;gt;&lt;/span>(value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">impl&lt;/span> Parse&lt;span style="color:#f92672">&amp;lt;&amp;amp;&lt;/span>&lt;span style="color:#66d9ef">str&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> Object {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Error&lt;/span> &lt;span style="color:#f92672">=&lt;/span> serde_json::Error;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">parse&lt;/span>(value: &lt;span style="color:#66d9ef">&amp;amp;&lt;/span>&lt;span style="color:#66d9ef">str&lt;/span>) -&amp;gt; Result&lt;span style="color:#f92672">&amp;lt;&lt;/span>Self, Self::Error&lt;span style="color:#f92672">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> serde_json::from_str::&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;&lt;/span>(value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[cfg(test)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">mod&lt;/span> tests {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">use&lt;/span> &lt;span style="color:#66d9ef">super&lt;/span>::&lt;span style="color:#f92672">*&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#[test]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">test_asset_index&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> asset_index &lt;span style="color:#f92672">=&lt;/span> AssetIndex::parse(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">r&lt;/span>&lt;span style="color:#e6db74">#&amp;#34;{&amp;#34;id&amp;#34;: &amp;#34;17&amp;#34;, &amp;#34;sha1&amp;#34;: &amp;#34;fab15439bdef669e389e25e815eee8f1b2aa915e&amp;#34;, &amp;#34;size&amp;#34;: 447033, &amp;#34;totalSize&amp;#34;: 799252591, &amp;#34;url&amp;#34;: &amp;#34;https://piston-meta.mojang.com/v1/packages/fab15439bdef669e389e25e815eee8f1b2aa915e/17.json&amp;#34;}&amp;#34;#&lt;/span>).unwrap_or_else(&lt;span style="color:#f92672">|&lt;/span>err&lt;span style="color:#f92672">|&lt;/span> panic!(&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{:?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,err));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assert_eq!(&lt;span style="color:#e6db74">&amp;#34;17&amp;#34;&lt;/span>, asset_index.id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assert_eq!(&lt;span style="color:#e6db74">&amp;#34;fab15439bdef669e389e25e815eee8f1b2aa915e&amp;#34;&lt;/span>, asset_index.sha1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assert_eq!(&lt;span style="color:#ae81ff">447033&lt;/span>, asset_index.size);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assert_eq!(&lt;span style="color:#ae81ff">799252591&lt;/span>, asset_index.total_size);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assert_eq!(&lt;span style="color:#e6db74">&amp;#34;https://piston-meta.mojang.com/v1/packages/fab15439bdef669e389e25e815eee8f1b2aa915e/17.json&amp;#34;&lt;/span>, asset_index.url);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#[test]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">test_index&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> index &lt;span style="color:#f92672">=&lt;/span> Index::parse(&lt;span style="color:#e6db74">r&lt;/span>&lt;span style="color:#e6db74">#&amp;#34;{&amp;#34;objects&amp;#34;: {&amp;#34;icons/icon_128x128.png&amp;#34;: {&amp;#34;hash&amp;#34;: &amp;#34;b62ca8ec10d07e6bf5ac8dae0c8c1d2e6a1e3356&amp;#34;, &amp;#34;size&amp;#34;: 9101}}}&amp;#34;#&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .unwrap_or_else(&lt;span style="color:#f92672">|&lt;/span>err&lt;span style="color:#f92672">|&lt;/span> panic!(&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{:?}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,err));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assert_eq!(&lt;span style="color:#ae81ff">1&lt;/span>, index.objects.len());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assert_eq!(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;b62ca8ec10d07e6bf5ac8dae0c8c1d2e6a1e3356&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index.objects.get(&lt;span style="color:#e6db74">&amp;#34;icons/icon_128x128.png&amp;#34;&lt;/span>).unwrap().hash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assert_eq!(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">9101&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index.objects.get(&lt;span style="color:#e6db74">&amp;#34;icons/icon_128x128.png&amp;#34;&lt;/span>).unwrap().size
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>library.rs&lt;/code>&lt;/p></description></item><item><title>Rust入门实战 编写Minecraft启动器#2建立资源模型</title><link>https://blog.enaium.cn/post/2024-6-30-rust%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98-%E7%BC%96%E5%86%99minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%232%E5%BB%BA%E7%AB%8B%E8%B5%84%E6%BA%90%E6%A8%A1%E5%9E%8B/</link><pubDate>Sun, 30 Jun 2024 23:33:28 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-6-30-rust%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98-%E7%BC%96%E5%86%99minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%232%E5%BB%BA%E7%AB%8B%E8%B5%84%E6%BA%90%E6%A8%A1%E5%9E%8B/</guid><description>&lt;p>我们需要声明几个结构体来存储游戏的资源信息，之后我们需要将&lt;code>json&lt;/code>文件解析成这几个结构体，所以我们需要添加&lt;code>serde&lt;/code>依赖。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">serde&lt;/span> = { &lt;span style="color:#a6e22e">version&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">features&lt;/span> = [&lt;span style="color:#e6db74">&amp;#34;derive&amp;#34;&lt;/span>] }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>资源相关&lt;code>asset.rs&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> serde::Deserialize;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> std::collections::HashMap;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[derive(Deserialize)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">pub&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">AssetIndex&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> id: String,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> sha1: String,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> size: &lt;span style="color:#66d9ef">u32&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#[serde(alias = &lt;/span>&lt;span style="color:#e6db74">&amp;#34;totalSize&amp;#34;&lt;/span>&lt;span style="color:#75715e">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> total_size: &lt;span style="color:#66d9ef">u32&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> url: String,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[derive(Deserialize)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">pub&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">Index&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> objects: &lt;span style="color:#a6e22e">HashMap&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, Object&lt;span style="color:#f92672">&amp;gt;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[derive(Deserialize)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">pub&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">Object&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> hash: String,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> size: &lt;span style="color:#66d9ef">u32&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>游戏本体&lt;code>version.rs&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> serde::Deserialize;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">use&lt;/span> &lt;span style="color:#66d9ef">crate&lt;/span>::{asset::AssetIndex, library::Library};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">pub&lt;/span> &lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Libraries&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Vec&lt;span style="color:#f92672">&amp;lt;&lt;/span>Library&lt;span style="color:#f92672">&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[derive(Deserialize)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">pub&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">Version&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#[serde(alias = &lt;/span>&lt;span style="color:#e6db74">&amp;#34;assetIndex&amp;#34;&lt;/span>&lt;span style="color:#75715e">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> asset_index: &lt;span style="color:#a6e22e">AssetIndex&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> downloads: &lt;span style="color:#a6e22e">Download&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> id: String,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> libraries: &lt;span style="color:#a6e22e">Libraries&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#[serde(alias = &lt;/span>&lt;span style="color:#e6db74">&amp;#34;mainClass&amp;#34;&lt;/span>&lt;span style="color:#75715e">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> main_class: String,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#[serde(alias = &lt;/span>&lt;span style="color:#e6db74">&amp;#34;releaseTime&amp;#34;&lt;/span>&lt;span style="color:#75715e">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> release_time: String,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> time: String,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#[serde(alias = &lt;/span>&lt;span style="color:#e6db74">&amp;#34;type&amp;#34;&lt;/span>&lt;span style="color:#75715e">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> type_: String,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[derive(Deserialize)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">pub&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">Download&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> client: &lt;span style="color:#a6e22e">Client&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[derive(Deserialize)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">pub&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">Client&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> sha1: String,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> size: &lt;span style="color:#66d9ef">u32&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pub&lt;/span> url: String,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>游戏依赖库&lt;code>library.rs&lt;/code>&lt;/p></description></item><item><title>Rust入门实战 编写Minecraft启动器#1启动方法</title><link>https://blog.enaium.cn/post/2024-6-23-rust%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98-%E7%BC%96%E5%86%99minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%231%E5%90%AF%E5%8A%A8%E6%96%B9%E6%B3%95/</link><pubDate>Sun, 23 Jun 2024 22:12:39 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-6-23-rust%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98-%E7%BC%96%E5%86%99minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%231%E5%90%AF%E5%8A%A8%E6%96%B9%E6%B3%95/</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>想必大家都知道&lt;code>Minecraft&lt;/code>这个游戏，它是一个非常有趣的游戏，有没有想过它是如何启动的呢？在本系列中，我们将使用&lt;code>Rust&lt;/code>编写一个简单的&lt;code>Minecraft&lt;/code>启动器。&lt;/p>
&lt;p>本系列文章涉及的&lt;code>Rust&lt;/code>知识并不多，了解&lt;code>Rust&lt;/code>的基本语法即可，如果你对&lt;code>Minecraft&lt;/code>或者&lt;code>Java&lt;/code>有一定了解，那么会更容易理解本系列的内容。&lt;/p>
&lt;h2 id="观前须知">观前须知&lt;/h2>
&lt;p>本系列文章只考虑如何完成一个简单的&lt;code>Minecraft&lt;/code>启动器，不考虑支持启动老的游戏版本，也不考虑第三方的客户端，更不会去考虑正版验证等等，只是一个简单的启动器。&lt;/p>
&lt;h2 id="启动方法">启动方法&lt;/h2>
&lt;p>首先&lt;code>Minecarft&lt;/code>是使用&lt;code>Java&lt;/code>编写的，所以我们需要通过执行&lt;code>Java&lt;/code>命令来启动&lt;code>Minecraft&lt;/code>，并且也需要添加一些参数，比如游戏的一些资源文件，&lt;code>Java&lt;/code>的一些参数等等。&lt;/p>
&lt;p>大概就像这样：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>java -Xmx10745m -cp &lt;span style="color:#e6db74">&amp;#34;minecraft.jar;lib/*&amp;#34;&lt;/span> -Djava.library.path&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;natives&amp;#34;&lt;/span> net.minecraft.client.main.Main --username yourname --version 1.21
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="下载资源">下载资源&lt;/h3>
&lt;p>第一步我们需要下载&lt;code>Minecraft&lt;/code>的资源文件，包括游戏本体、依赖库、资源文件。&lt;/p>
&lt;p>&lt;code>http://launchermeta.mojang.com/mc/game/version_manifest.json&lt;/code>这个地址可以读取到游戏所有版本。&lt;/p>
&lt;p>&lt;code>https://piston-meta.mojang.com/v1/packages/&amp;lt;sha1&amp;gt;/&amp;lt;version&amp;gt;.json&lt;/code>这个地址可以获取到游戏的配置信息。&lt;/p>
&lt;p>&lt;code>http://resources.download.minecraft.net/&amp;lt;sha1_first_two&amp;gt;/&amp;lt;sha1&amp;gt;&lt;/code>这个地址可以获取到游戏的资源文件。&lt;/p>
&lt;p>&lt;code>https://libraries.minecraft.net/&amp;lt;group&amp;gt;/&amp;lt;artifact&amp;gt;/&amp;lt;version&amp;gt;/&amp;lt;artifact&amp;gt;-&amp;lt;version&amp;gt;.jar&lt;/code>这个地址可以获取到游戏的依赖库。&lt;/p>
&lt;h3 id="游戏目录结构">游戏目录结构&lt;/h3>
&lt;p>首先游戏的所有资源都在一个目录中，这个目录包括&lt;code>libraries&lt;/code>、&lt;code>assets&lt;/code>、&lt;code>versions&lt;/code>等文件夹，这个目录通常是&lt;code>.minecraft&lt;/code>。&lt;/p>
&lt;p>&lt;code>libraries&lt;/code>文件夹存放游戏的依赖库，目录结构和&lt;code>Maven&lt;/code>的目录结构类似。&lt;/p>
&lt;p>&lt;code>assets&lt;/code>文件夹存放游戏的资源文件，其中包括&lt;code>objects&lt;/code>和&lt;code>indexes&lt;/code>，&lt;code>objects&lt;/code>存放资源文件，所有的资源文件都是以&lt;code>sha1&lt;/code>命名的，所以&lt;code>objects&lt;/code>文件夹下有一个以 2 位&lt;code>sha1&lt;/code>命名的文件夹，所有前两位&lt;code>sha1&lt;/code>相同的资源文件都在这个文件夹下，&lt;code>indexes&lt;/code>存放资源文件的索引文件，也就是包含了资源文件的真实名称和对应的&lt;code>sha1&lt;/code>值。&lt;/p>
&lt;p>&lt;code>versions&lt;/code>文件夹存放游戏的版本文件，每个版本都有一个以版本号命名的文件夹，这个文件夹包括&lt;code>natives&lt;/code>，它存放游戏的本地库文件，我们需要在游戏启动的时候将所有&lt;code>native&lt;/code>的&lt;code>jar&lt;/code>文件都解压到这个文件夹下，这个文件夹还包括&lt;code>&amp;lt;version&amp;gt;.json&lt;/code>，这个文件包括了游戏的配置信息，比如&lt;code>mainClass&lt;/code>，&lt;code>assets&lt;/code>等等，还有&lt;code>&amp;lt;version&amp;gt;.jar&lt;/code>，这个文件是游戏的本体文件。&lt;/p>
&lt;h3 id="拼接命令">拼接命令&lt;/h3>
&lt;p>完成以上步骤后，我们就可以拼接命令了，首先是&lt;code>java&lt;/code>的程序路径，然后是&lt;code>JVM&lt;/code>参数，然后是&lt;code>classpath&lt;/code>，接着是&lt;code>main&lt;/code>方法的类路径，最后是&lt;code>Minecraft&lt;/code>的参数。&lt;/p>
&lt;p>拼接完成之后就可以执行这个命令启动游戏了。&lt;/p>
&lt;h2 id="项目结构">项目结构&lt;/h2>
&lt;p>本项目分为 4 个模块：&lt;code>download&lt;/code>, &lt;code>launch&lt;/code>, &lt;code>model&lt;/code>, &lt;code>parse&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>download&lt;/code>模块用于下载游戏资源文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>launch&lt;/code>模块用于启动游戏。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>model&lt;/code>模块用建立游戏的数据模型。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>parse&lt;/code>模块用于解析游戏的配置文件。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="流程">流程&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">graph LR
 建立资源模型 --&amp;gt; 解析资源配置 --&amp;gt; 下载游戏资源 --&amp;gt; 拼接启动命令 --&amp;gt; 启动游戏
&lt;/code>&lt;/pre>&lt;h2 id="结语">结语&lt;/h2>
&lt;p>好了，本文就到这里了，之后的一些内容会在后续文章中介绍。&lt;/p>
&lt;p>&lt;a href="https://github.com/Enaium/teaching-rust-minecraft-client-launch">项目地址&lt;/a>&lt;/p></description></item><item><title>使用Kotlin编写一个Http服务器</title><link>https://blog.enaium.cn/post/2024-6-8-%E4%BD%BF%E7%94%A8kotlin%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AAhttp%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Sat, 08 Jun 2024 20:04:11 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-6-8-%E4%BD%BF%E7%94%A8kotlin%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AAhttp%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>在本文中，我们将使用 Kotlin 编写一个简单的 HTTP 服务器。我们将使用 Java 的 &lt;code>ServerSocket&lt;/code> 类来实现这个服务器。我们将创建一个简单的服务器，它将监听端口 8000，并在接收到请求时返回一个简单的响应。&lt;/p>
&lt;h2 id="http-的格式">Http 的格式&lt;/h2>
&lt;p>HTTP 请求和响应都是文本格式的。HTTP 请求由请求行、请求头和请求体组成。HTTP 响应由状态行、响应头和响应体组成。&lt;/p>
&lt;p>具体可以到 &lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Messages">MDN&lt;/a> 查看。&lt;/p>
&lt;h2 id="代码实现">代码实现&lt;/h2>
&lt;p>首先我们需要创建一个&lt;code>Method&lt;/code>枚举和一个&lt;code>Version&lt;/code>枚举，用于表示请求的方法和版本。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">enum&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Method&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GET,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> POST,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UNKNOWN;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">companion&lt;/span> &lt;span style="color:#66d9ef">object&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#a6e22e">parse&lt;/span>(method: String): Method =
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">when&lt;/span> (method) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;GET&amp;#34;&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> GET
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;POST&amp;#34;&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> POST
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> UNKNOWN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">enum&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Version&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTP_1_1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UNKNOWN;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">companion&lt;/span> &lt;span style="color:#66d9ef">object&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#a6e22e">parse&lt;/span>(version: String): Version = &lt;span style="color:#66d9ef">when&lt;/span> (version) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;HTTP/1.1&amp;#34;&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> HTTP_1_1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> UNKNOWN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#a6e22e">toString&lt;/span>(): String {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">when&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTP_1_1 &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;HTTP/1.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UNKNOWN &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;UNKNOWN&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后我们创建一个&lt;code>HttpRequest&lt;/code>类，用于表示 HTTP 请求。&lt;/p></description></item><item><title>1小时学会SpringBoot3+Vue3前后端分离开发</title><link>https://blog.enaium.cn/post/2024-4-23-1%E5%B0%8F%E6%97%B6%E5%AD%A6%E4%BC%9Aspringboot3-vue3%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%BC%80%E5%8F%91/</link><pubDate>Tue, 23 Apr 2024 20:32:11 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-4-23-1%E5%B0%8F%E6%97%B6%E5%AD%A6%E4%BC%9Aspringboot3-vue3%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%BC%80%E5%8F%91/</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>大家可能刚学会&lt;code>Java&lt;/code>和&lt;code>Vue&lt;/code>之后都会想下一步是什么？那么就先把&lt;code>SpringBoot&lt;/code>和&lt;code>Vue&lt;/code>结合起来，做一个前后端分离的项目吧。&lt;/p>
&lt;h2 id="准备工作">准备工作&lt;/h2>
&lt;p>首先你需要懂得&lt;code>Java&lt;/code>和&lt;code>Vue&lt;/code>的基础知识，环境这里就不多说了，直接开始。&lt;/p>
&lt;h2 id="创建-springboot-项目">创建 SpringBoot 项目&lt;/h2>
&lt;p>使用&lt;code>IDEA&lt;/code>旗舰版的可以直接使用自带&lt;code>Spring Initializr&lt;/code>创建项目，其他的可以使用&lt;a href="https://start.spring.io/">Spring Initializr&lt;/a>创建项目。&lt;/p>
&lt;p>语言选择&lt;code>Java&lt;/code>，类型选择&lt;code>Gradle-Kotlin&lt;/code>，&lt;code>Java&lt;/code>选择 21，其他的都随便填。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/04/23/OCrh1epGw5UDq24.png" alt="20240423215241">&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/04/23/4nLkO3TgEdtpFsa.png" alt="20240423210415">&lt;/p>
&lt;p>接下来选择依赖，这里选择&lt;code>web&lt;/code>，&lt;code>lombok&lt;/code>,数据库选择&lt;code>PostgreSQL&lt;/code>，如果你使用的是&lt;code>MySQL&lt;/code>就选它&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/04/23/4GF2vzm5CtlaJT8.png" alt="20240423210635">&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/04/23/CDSJkhpmK52yEgv.png" alt="20240423210727">&lt;/p>
&lt;p>之后点击创建自动打开项目，或者点击生成打开下载的项目&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/04/23/6Y2qCyk8OGbhrc1.png" alt="20240423210848">
&lt;img src="https://s2.loli.net/2024/04/23/Y54rbSCx8QUAycW.png" alt="20240423210903">&lt;/p>
&lt;p>之后等待项目的依赖下载完成就好了&lt;/p>
&lt;p>如果需要配置镜像那就在&lt;code>repositories&lt;/code>中最上面添加腾讯云的镜像&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span style="display:flex;">&lt;span>repositories {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maven {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url = uri(&lt;span style="color:#e6db74">&amp;#34;https://mirrors.cloud.tencent.com/nexus/repository/maven-public&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mavenCentral()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>首先我们需要创建数据库，比如一个图书管理系统，需要有一张图书表，有一些字段，比如标题、作者、创建时间、等等。&lt;/p>
&lt;p>我们使用数据库管理工具来创建一个表吧。&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2024/04/23/pz61HG9EyuQLWUl.png" alt="20240423225934">&lt;/p>
&lt;p>注意这里使用的是&lt;code>Postgres&lt;/code>，如果是&lt;code>MySQL&lt;/code>类型略有不同。&lt;/p>
&lt;p>之后我们就可以创建实体类了，这里需要先引入&lt;code>ORM&lt;/code>框架依赖，这里我为了方便引入写了一个&lt;code>Gradle&lt;/code>插件，把它写入到&lt;code>plugins&lt;/code>中，接着在刷新一下项目就可以继续编写代码了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span style="display:flex;">&lt;span>plugins {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 省略其他插件...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> id(&lt;span style="color:#e6db74">&amp;#34;cn.enaium.jimmer.gradle&amp;#34;&lt;/span>) version &lt;span style="color:#e6db74">&amp;#34;0.0.11&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们创建一个接口&lt;code>Book&lt;/code>添加一个&lt;code>Entity&lt;/code>和&lt;code>Table&lt;/code>注解，之后添加一些方法，名称就是根据数据库中字段名称一样，只不过要把蛇形命名改为小驼峰。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Entity&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Table&lt;/span>(name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;book&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">Book&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@GeneratedValue&lt;/span>(strategy &lt;span style="color:#f92672">=&lt;/span> GenerationType.&lt;span style="color:#a6e22e">IDENTITY&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String &lt;span style="color:#a6e22e">title&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String &lt;span style="color:#a6e22e">author&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LocalDateTime &lt;span style="color:#a6e22e">createTime&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>写完之后，我们按下编译的快捷键(默认是 Ctrl+F9)，之后就可以编写接口了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@RestController&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@RequiredArgsConstructor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">BookController&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> JSqlClient sql;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@GetMapping&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/book&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Book&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">getBooks&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> sql.&lt;span style="color:#a6e22e">createQuery&lt;/span>(Tables.&lt;span style="color:#a6e22e">BOOK_TABLE&lt;/span>).&lt;span style="color:#a6e22e">select&lt;/span>(Tables.&lt;span style="color:#a6e22e">BOOK_TABLE&lt;/span>).&lt;span style="color:#a6e22e">execute&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@PostMapping&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/book&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">saveBook&lt;/span>(&lt;span style="color:#a6e22e">@RequestBody&lt;/span> Book book) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql.&lt;span style="color:#a6e22e">save&lt;/span>(book);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>RequiredArgsConstructor&lt;/code>注解可以为被&lt;code>final&lt;/code>修饰的字段生成构造方法，这样就不用手动写构造方法了。&lt;/p></description></item><item><title>使用Kotlin进行全栈开发 Ktor+Kotlin/JS</title><link>https://blog.enaium.cn/post/2024-4-13-%E4%BD%BF%E7%94%A8kotlin%E8%BF%9B%E8%A1%8C%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91-ktor-kotlin-js/</link><pubDate>Sat, 13 Apr 2024 21:50:28 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-4-13-%E4%BD%BF%E7%94%A8kotlin%E8%BF%9B%E8%A1%8C%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91-ktor-kotlin-js/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本文将介绍如何使用 Kotlin 全栈技术栈&lt;code>Ktor&lt;/code>+&lt;code>Kotlin/JS&lt;/code>来构建一个简单的全栈应用。&lt;/p>
&lt;h2 id="准备工作">准备工作&lt;/h2>
&lt;h3 id="创建项目">创建项目&lt;/h3>
&lt;p>首先我们需要创建一个&lt;code>Kotlin&lt;/code>项目，之后继续在其中新建两个子项目，一个是&lt;code>Kotlin/JS&lt;/code>项目，另一个是&lt;code>Ktor&lt;/code>项目。&lt;/p>
&lt;h3 id="添加依赖和插件">添加依赖和插件&lt;/h3>
&lt;p>这里我使用了&lt;code>Gradle&lt;/code>的&lt;code>catalog&lt;/code>，在项目中的&lt;code>gradle&lt;/code>目录下创建一个&lt;code>libs.versions.toml&lt;/code>文件，用于管理项目中的依赖版本。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">versions&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">jimmer&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;0.0.9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">kotlin&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;1.9.23&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ktor&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;2.3.9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ksp&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;1.9.23-1.0.20&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">coroutines&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;1.8.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">serialization&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;1.6.3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">wrappers&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;1.0.0-pre.729&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">logback&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;1.5.3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">postgresql&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;42.7.3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">hikari&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;5.1.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">koin&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;3.5.6&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">libraries&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ktor-server-core&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;io.ktor:ktor-server-core-jvm&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ktor&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ktor-server-netty&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;io.ktor:ktor-server-netty-jvm&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ktor&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ktor-server-cors&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;io.ktor:ktor-server-cors&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ktor&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ktor-server-content-negotiation&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;io.ktor:ktor-server-content-negotiation&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ktor&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ktor-serialization-jsackson&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;io.ktor:ktor-serialization-jackson&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ktor&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ktor-server-config-yaml&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;io.ktor:ktor-server-config-yaml&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ktor&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">logback&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ch.qos.logback:logback-classic&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;logback&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">kotlinx-coroutines-core&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;org.jetbrains.kotlinx:kotlinx-coroutines-core&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;coroutines&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">kotlinx-serialization-json&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;org.jetbrains.kotlinx:kotlinx-serialization-json&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;serialization&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">kotlin-wrappers&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;org.jetbrains.kotlin-wrappers:kotlin-wrappers-bom&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;wrappers&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">kotlin-wrappers-react&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;org.jetbrains.kotlin-wrappers:kotlin-react&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">kotlin-wrappers-react-dom&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;org.jetbrains.kotlin-wrappers:kotlin-react-dom&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">kotlin-wrappers-emotion&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;org.jetbrains.kotlin-wrappers:kotlin-emotion&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">postgresql&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;org.postgresql:postgresql&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;postgresql&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">hikari&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;com.zaxxer:HikariCP&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;hikari&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">koin&lt;/span> = { &lt;span style="color:#a6e22e">module&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;io.insert-koin:koin-ktor&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;koin&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">bundles&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">api&lt;/span> = [&lt;span style="color:#e6db74">&amp;#39;ktor-server-core&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;ktor-server-netty&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;ktor-server-cors&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;ktor-server-content-negotiation&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;ktor-serialization-jsackson&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;ktor-server-config-yaml&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;logback&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;postgresql&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;hikari&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;koin&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">app&lt;/span> = [&lt;span style="color:#e6db74">&amp;#39;kotlinx-coroutines-core&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;kotlinx-serialization-json&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;kotlin-wrappers-react&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;kotlin-wrappers-react-dom&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;kotlin-wrappers-emotion&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">plugins&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">jimmer&lt;/span> = { &lt;span style="color:#a6e22e">id&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;cn.enaium.jimmer.gradle&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;jimmer&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">kotlin-jvm&lt;/span> = { &lt;span style="color:#a6e22e">id&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;org.jetbrains.kotlin.jvm&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;kotlin&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">kotlin-multiplatform&lt;/span> = { &lt;span style="color:#a6e22e">id&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;org.jetbrains.kotlin.multiplatform&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;kotlin&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ktor&lt;/span> = { &lt;span style="color:#a6e22e">id&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;io.ktor.plugin&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ktor&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">ksp&lt;/span> = { &lt;span style="color:#a6e22e">id&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;com.google.devtools.ksp&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ksp&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">kotlin-plugin-serialization&lt;/span> = { &lt;span style="color:#a6e22e">id&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;org.jetbrains.kotlin.plugin.serialization&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">version&lt;/span>.&lt;span style="color:#a6e22e">ref&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;kotlin&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后我们分别在前端和后端项目中的&lt;code>build.gradle.kts&lt;/code>文件中引入这些依赖和插件。&lt;/p></description></item><item><title>JDK22新特性Class-File API尝鲜</title><link>https://blog.enaium.cn/post/2024-3-4-jdk22%E6%96%B0%E7%89%B9%E6%80%A7class-file-api%E5%B0%9D%E9%B2%9C/</link><pubDate>Mon, 04 Mar 2024 12:14:18 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-3-4-jdk22%E6%96%B0%E7%89%B9%E6%80%A7class-file-api%E5%B0%9D%E9%B2%9C/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>到目前为止&lt;code>JDK22&lt;/code>已经&lt;code>Final Release Candidate&lt;/code>了，不出意外的话，这个就是最终&lt;code>General Availability&lt;/code>版本了，在本次更新有一个新的的特性也就是，&lt;code>Class-File API&lt;/code>，不过还是在预览版中，不过我们可以尝鲜一下，也就是在未来的版本中可能会被删除或者修改，大家在之前可能使用过&lt;code>ASM&lt;/code>等第三方库，但现在&lt;code>JDK&lt;/code>是每6个月就会发布一个新的版本，第三方库可能会更新不及时，所以&lt;code>JDK&lt;/code>内置了一个&lt;code>Class-File API&lt;/code>，这样就可以更好的支持&lt;code>Java&lt;/code>的新特性。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>我们先需要在&lt;a href="https://jdk.java.net/22/">jdk.java.net&lt;/a>下载JDK22，之后再&lt;code>IntelliJ IDEA&lt;/code>中开启&lt;code>22(Preview)&lt;/code>，之后就可以使用&lt;code>Class-File API&lt;/code>了。&lt;/p>
&lt;h2 id="使用">使用&lt;/h2>
&lt;h3 id="读取类信息">读取类信息&lt;/h3>
&lt;p>我们首先是读取一个&lt;code>class&lt;/code>文件，也就是读取它的类信息，既然是读取类，我们就写一个类之后再编译。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Test&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Enaium&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">render&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后我们在&lt;code>IntelliJ IDEA&lt;/code>中编译一下，然后我们就可以读取这个&lt;code>class&lt;/code>文件了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() &lt;span style="color:#66d9ef">throws&lt;/span> IOException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ClassFile.&lt;span style="color:#a6e22e">of&lt;/span>().&lt;span style="color:#a6e22e">parse&lt;/span>(Path.&lt;span style="color:#a6e22e">of&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;out/production/untitled1/Test.class&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ClassFile.&lt;span style="color:#a6e22e">of&lt;/span>().&lt;span style="color:#a6e22e">parse&lt;/span>(Files.&lt;span style="color:#a6e22e">readAllBytes&lt;/span>(Path.&lt;span style="color:#a6e22e">of&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;out/production/untitled1/Test.class&amp;#34;&lt;/span>)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们可以看到&lt;code>ClassFile&lt;/code>有一个&lt;code>of&lt;/code>方法，这个方法返回一个&lt;code>ClassFile&lt;/code>对象，然后我们可以调用&lt;code>parse&lt;/code>方法解析&lt;code>class&lt;/code>文件，这里可以使用两种方法，一种是传入&lt;code>Path&lt;/code>对象，一种是传入&lt;code>byte&lt;/code>数组。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() &lt;span style="color:#66d9ef">throws&lt;/span> IOException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> ClassModel parse &lt;span style="color:#f92672">=&lt;/span> ClassFile.&lt;span style="color:#a6e22e">of&lt;/span>().&lt;span style="color:#a6e22e">parse&lt;/span>(Path.&lt;span style="color:#a6e22e">of&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;out/production/untitled1/Test.class&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(parse.&lt;span style="color:#a6e22e">majorVersion&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(parse.&lt;span style="color:#a6e22e">superclass&lt;/span>().&lt;span style="color:#a6e22e">get&lt;/span>().&lt;span style="color:#a6e22e">name&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (PoolEntry poolEntry : parse.&lt;span style="color:#a6e22e">constantPool&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(STR.&lt;span style="color:#e6db74">&amp;#34; \{poolEntry.toString()}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们可以看到&lt;code>ClassFile&lt;/code>有一个&lt;code>parse&lt;/code>方法，这个方法返回一个&lt;code>ClassModel&lt;/code>对象，然后我们可以调用&lt;code>majorVersion&lt;/code>方法获取&lt;code>class&lt;/code>文件的版本，&lt;code>superclass&lt;/code>方法获取父类，&lt;code>constantPool&lt;/code>方法获取常量池。&lt;/p>
&lt;p>其中&lt;code>PoolEntry&lt;/code>比较特殊，它是一个接口，所以我直接调用&lt;code>toString&lt;/code>方法，这个方法返回一个&lt;code>String&lt;/code>对象，这个对象就是常量池的内容，我们进入到&lt;code>JDK&lt;/code>源码中，获取它有哪些实现类，&lt;code>ClassEntry&lt;/code>、&lt;code>FieldRefEntry&lt;/code>、&lt;code>MethodRefEntry&lt;/code>等等。&lt;/p>
&lt;h3 id="读取字段信息">读取字段信息&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() &lt;span style="color:#66d9ef">throws&lt;/span> IOException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> ClassModel parse &lt;span style="color:#f92672">=&lt;/span> ClassFile.&lt;span style="color:#a6e22e">of&lt;/span>().&lt;span style="color:#a6e22e">parse&lt;/span>(Path.&lt;span style="color:#a6e22e">of&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;out/production/untitled1/Test.class&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (FieldModel field : parse.&lt;span style="color:#a6e22e">fields&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(STR.&lt;span style="color:#e6db74">&amp;#34;\{field.flags().flags()} \{field.fieldName()}: \{field.fieldType()} | \{field.fieldTypeSymbol().packageName()}.\{field.fieldTypeSymbol().displayName()}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们调用&lt;code>fields&lt;/code>可以获取这个类中的所有字段，然后我们可以调用&lt;code>flags&lt;/code>方法获取字段的修饰符，&lt;code>fieldName&lt;/code>方法获取字段的名字，&lt;code>fieldType&lt;/code>方法获取字段的类型，&lt;code>fieldTypeSymbol&lt;/code>方法获取字段的类型的符号。&lt;/p></description></item><item><title>一个脚本让您的Gradle项目下载速度起飞</title><link>https://blog.enaium.cn/post/2024-2-5-%E4%B8%80%E4%B8%AA%E8%84%9A%E6%9C%AC%E8%AE%A9%E6%82%A8%E7%9A%84gradle%E9%A1%B9%E7%9B%AE%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E8%B5%B7%E9%A3%9E/</link><pubDate>Mon, 05 Feb 2024 15:56:36 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-2-5-%E4%B8%80%E4%B8%AA%E8%84%9A%E6%9C%AC%E8%AE%A9%E6%82%A8%E7%9A%84gradle%E9%A1%B9%E7%9B%AE%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E8%B5%B7%E9%A3%9E/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;code>Gradle&lt;/code>是一个非常优秀的构建工具，但用过&lt;code>Maven&lt;/code>的人都知道，&lt;code>Maven&lt;/code>可以设置镜像，加速下载速度，而&lt;code>Gradle&lt;/code>却没有这个功能。因为&lt;code>Gradle&lt;/code>没有&lt;code>Maven&lt;/code>这么死板的概念，在&lt;code>Gradle&lt;/code>中大部分功能都是通过脚本实现的，所以我们可以通过脚本来实现镜像的功能。&lt;/p>
&lt;p>首先需要了解一下什么是&lt;code>Initialization scripts&lt;/code>，&lt;code>Initialization scripts&lt;/code>是&lt;code>Gradle&lt;/code>的初始化脚本，它可以在&lt;code>Gradle&lt;/code>启动时执行，&lt;code>Gradle&lt;/code>会在执行构建之前执行初始化脚本，也就是说我们可以在这个时候编写替换仓库地址的脚本，这样就可以实现镜像的功能。&lt;/p>
&lt;h2 id="脚本">脚本&lt;/h2>
&lt;p>首先我们需要再用户目录下的&lt;code>.gradle&lt;/code>的目录下创建一个&lt;code>init.gradle.kts&lt;/code>文件，然后在这个文件中编写脚本。&lt;/p>
&lt;p>首先使用&lt;code>apply&lt;/code>给脚本添加一个&lt;code>EnterpriseRepositoryPlugin&lt;/code>插件，之后编写一个类实现&lt;code>Plugin&lt;/code>接口，然后我们在&lt;code>apply&lt;/code>方法中编写替换仓库地址的逻辑。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span style="display:flex;">&lt;span>apply&amp;lt;EnterpriseRepositoryPlugin&amp;gt;()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EnterpriseRepositoryPlugin&lt;/span> : Plugin&amp;lt;Gradle&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#a6e22e">apply&lt;/span>(gradle: Gradle) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>首先我们创建一个派生类，在这个派生类中定义一些常量，这些常量是我们要替换的仓库地址。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">companion&lt;/span> &lt;span style="color:#66d9ef">object&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">val&lt;/span> CENTRAL = &lt;span style="color:#e6db74">&amp;#34;https://maven.aliyun.com/repository/central&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">val&lt;/span> GRADLE_PLUGIN = &lt;span style="color:#e6db74">&amp;#34;https://maven.aliyun.com/repository/gradle-plugin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后在这里使用&lt;code>gradle.settingsEvaluated&lt;/code>方法，这个方法会在&lt;code>settings.gradle&lt;/code>文件被解析之后执行，我们可以在这个方法中编写替换插件仓库地址的逻辑。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span style="display:flex;">&lt;span>gradle.settingsEvaluated {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pluginManagement {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> repositories {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> all {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span> &lt;span style="color:#66d9ef">is&lt;/span> MavenArtifactRepository) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">val&lt;/span> url = &lt;span style="color:#66d9ef">this&lt;/span>.url.toString()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (url.startsWith(&lt;span style="color:#e6db74">&amp;#34;https://repo1.maven.org/maven2&amp;#34;&lt;/span>) &lt;span style="color:#f92672">||&lt;/span> url.startsWith(&lt;span style="color:#e6db74">&amp;#34;https://repo.maven.apache.org/maven2&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.setUrl(CENTRAL)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (url.startsWith(&lt;span style="color:#e6db74">&amp;#34;https://plugins.gradle.org/m2&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.setUrl(GRADLE_PLUGIN)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在完成插件的仓库地址替换之后，我们还需要替换项目的仓库地址，逻辑和替换插件的仓库地址一样。&lt;/p></description></item><item><title>Fabric模组开发中4个热重载的方法</title><link>https://blog.enaium.cn/post/2024-1-23-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E4%B8%AD4%E4%B8%AA%E7%83%AD%E9%87%8D%E8%BD%BD%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Tue, 23 Jan 2024 00:15:06 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-1-23-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E4%B8%AD4%E4%B8%AA%E7%83%AD%E9%87%8D%E8%BD%BD%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>当你在开发Fabric模组时，你可能会遇到这样的情况：你修改了模组的资源、数据或者代码，但是你需要重启游戏才能看到效果。这样的话，你的开发效率就会大大降低。所以，这篇文章就是为了解决这个问题而写的，不过需要注意的是，代码部分需要以Debug模式运行，每次修改后都需要重新编译一下，&lt;code>IDEA&lt;/code>的快捷键就是&lt;code>Ctrl+Shift+F9&lt;/code>。&lt;/p>
&lt;h2 id="热重载资源">热重载资源&lt;/h2>
&lt;p>使用&lt;code>F3+T&lt;/code>快捷键可以重载资源。&lt;/p>
&lt;p>比如这里我给物品添加一个纹理：&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric/2024-1-23-1.png" alt="2024-1-23-1">
&lt;img src="https://blog.enaium.cn/assets/fabric/2024-1-23-2.png" alt="2024-1-23-2">&lt;/p>
&lt;h2 id="热重载资源-1">热重载资源&lt;/h2>
&lt;p>使用&lt;code>/reload&lt;/code>命令可以重载资源。&lt;/p>
&lt;p>比如这里我修改一个合成表：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">@@ -1,9 +1,8 @@
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;type&amp;#34;: &amp;#34;minecraft:crafting_shaped&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;pattern&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;EEE&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;EEE&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;EEE&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;EE&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ &amp;#34;EE&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;key&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;E&amp;#34;: {
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric/2024-1-23-3.png" alt="2024-1-23-3">
&lt;img src="https://blog.enaium.cn/assets/fabric/2024-1-23-4.png" alt="2024-1-23-4">&lt;/p>
&lt;h2 id="热重载代码">热重载代码&lt;/h2>
&lt;p>我们这里修改一个按钮的位置，然后到&lt;code>IDEA&lt;/code>的源码文件中按下&lt;code>Ctrl+Shift+F9&lt;/code>，然后就可以看到效果了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">@@ -12,6 +12,6 @@
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> @Override
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> protected void init() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> addDrawableChild(ButtonWidget.builder(Text.literal(&amp;#34;Button&amp;#34;), (button) -&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- }).dimensions(0, 0, 50, 20).build());
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ }).dimensions(100, 100, 50, 20).build());
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric/2024-1-23-5.png" alt="2024-1-23-5">&lt;/p></description></item><item><title>Minecraft Fabric模组开发教程#11 添加流体</title><link>https://blog.enaium.cn/post/2024-1-15-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%2311-%E6%B7%BB%E5%8A%A0%E6%B5%81%E4%BD%93/</link><pubDate>Mon, 15 Jan 2024 15:45:08 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-1-15-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%2311-%E6%B7%BB%E5%8A%A0%E6%B5%81%E4%BD%93/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本教程将会教你如何添加流体，什么是流体呢？就是像水、熔岩这样的东西，我们将会添加一种新的流体。&lt;/p>
&lt;h2 id="创建流体">创建流体&lt;/h2>
&lt;p>在原版中流体都继承了&lt;code>net.minecraft.fluid.FlowableFluid&lt;/code>，所以我们也继承它。&lt;/p>
&lt;p>首先创建一个抽象类&lt;code>AwesomeFluid&lt;/code>，然后继承&lt;code>FlowableFluid&lt;/code>，然后实现一些方法。&lt;/p>
&lt;ul>
&lt;li>&lt;code>matchesType&lt;/code>：判断流体是否是我们的流体&lt;/li>
&lt;li>&lt;code>isInfinite&lt;/code>：是否是无限流体，就是像水一样，无限多&lt;/li>
&lt;li>&lt;code>beforeBreakingBlock&lt;/code>：当流体破坏方块时，会调用这个方法，我们在这里把方块掉落，比如火把被水破坏时，会掉落火把&lt;/li>
&lt;li>&lt;code>canBeReplacedWith&lt;/code>：是否可以被替换&lt;/li>
&lt;li>&lt;code>getFlowSpeed&lt;/code>：流体流动速度&lt;/li>
&lt;li>&lt;code>getLevelDecreasePerBlock&lt;/code>：水返回 1，熔岩在主世界时返回 2 并且在下界时返回 1&lt;/li>
&lt;li>&lt;code>getTickRate&lt;/code>：水返回 5，熔岩在主世界时返回 30 并且在下界时返回 10&lt;/li>
&lt;li>&lt;code>getBlastResistance&lt;/code>：爆炸抗性，水和熔岩都是 100&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">abstract&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">AwesomeFluid&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> FlowableFluid {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">matchesType&lt;/span>(Fluid fluid) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> fluid &lt;span style="color:#f92672">==&lt;/span> getStill() &lt;span style="color:#f92672">||&lt;/span> fluid &lt;span style="color:#f92672">==&lt;/span> getFlowing();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isInfinite&lt;/span>(World world) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">beforeBreakingBlock&lt;/span>(WorldAccess world, BlockPos pos, BlockState state) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> BlockEntity blockEntity &lt;span style="color:#f92672">=&lt;/span> state.&lt;span style="color:#a6e22e">hasBlockEntity&lt;/span>() &lt;span style="color:#f92672">?&lt;/span> world.&lt;span style="color:#a6e22e">getBlockEntity&lt;/span>(pos) : &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Block.&lt;span style="color:#a6e22e">dropStacks&lt;/span>(state, world, pos, blockEntity);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">canBeReplacedWith&lt;/span>(FluidState state, BlockView world, BlockPos pos, Fluid fluid, Direction direction) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getFlowSpeed&lt;/span>(WorldView world) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getLevelDecreasePerBlock&lt;/span>(WorldView world) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getTickRate&lt;/span>(WorldView world) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> &lt;span style="color:#a6e22e">getBlastResistance&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 100;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后我们创建一个&lt;code>EndWaterFluid&lt;/code>枚举类，继承&lt;code>AwesomeFluid&lt;/code>，然后实现一些方法，这里先返回&lt;code>null&lt;/code>，我们之后会修改。&lt;/p></description></item><item><title>Minecraft Fabric模组开发教程#10 添加矿物</title><link>https://blog.enaium.cn/post/2024-1-14-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%2310-%E6%B7%BB%E5%8A%A0%E7%9F%BF%E7%89%A9/</link><pubDate>Sun, 14 Jan 2024 14:44:09 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-1-14-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%2310-%E6%B7%BB%E5%8A%A0%E7%9F%BF%E7%89%A9/</guid><description>&lt;h2 id="注册矿物">注册矿物&lt;/h2>
&lt;p>我们都知道，在矿物被挖掘之后，会掉落经验，所以我们需要使用&lt;code>ExperienceDroppingBlock&lt;/code>来创建方块对象，之后需要创建两种矿物，一种是普通的矿物，一种是深层矿物。&lt;/p>
&lt;p>&lt;code>ExperienceDroppingBlock&lt;/code>的构造函数需要两个参数，第一个是掉落的经验数量，这里也就是创建了一个随机为 10-17 的经验掉落，第二个参数是方块的设置，这里设置了方块的颜色，敲击音效，硬度抗性，必须使用工具，以及挖掘音效。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Block END_HEART_ORE &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ExperienceDroppingBlock(UniformIntProvider.&lt;span style="color:#a6e22e">create&lt;/span>(10, 17), AbstractBlock.&lt;span style="color:#a6e22e">Settings&lt;/span>.&lt;span style="color:#a6e22e">create&lt;/span>().&lt;span style="color:#a6e22e">mapColor&lt;/span>(MapColor.&lt;span style="color:#a6e22e">STONE_GRAY&lt;/span>).&lt;span style="color:#a6e22e">instrument&lt;/span>(Instrument.&lt;span style="color:#a6e22e">BASEDRUM&lt;/span>).&lt;span style="color:#a6e22e">requiresTool&lt;/span>().&lt;span style="color:#a6e22e">strength&lt;/span>(3.&lt;span style="color:#a6e22e">0f&lt;/span>, 3.&lt;span style="color:#a6e22e">0f&lt;/span>).&lt;span style="color:#a6e22e">sounds&lt;/span>(BlockSoundGroup.&lt;span style="color:#a6e22e">NETHER_ORE&lt;/span>));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>深层矿物的设置和普通矿物差不多，只不过需要调用&lt;code>copy&lt;/code>方法。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Block DEEPSLATE_END_HEART_ORE &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ExperienceDroppingBlock(UniformIntProvider.&lt;span style="color:#a6e22e">create&lt;/span>(10, 17), AbstractBlock.&lt;span style="color:#a6e22e">Settings&lt;/span>.&lt;span style="color:#a6e22e">copy&lt;/span>(END_HEART_ORE).&lt;span style="color:#a6e22e">mapColor&lt;/span>(MapColor.&lt;span style="color:#a6e22e">DEEPSLATE_GRAY&lt;/span>).&lt;span style="color:#a6e22e">instrument&lt;/span>(Instrument.&lt;span style="color:#a6e22e">BASEDRUM&lt;/span>).&lt;span style="color:#a6e22e">requiresTool&lt;/span>().&lt;span style="color:#a6e22e">strength&lt;/span>(4.&lt;span style="color:#a6e22e">5f&lt;/span>, 3.&lt;span style="color:#a6e22e">0f&lt;/span>).&lt;span style="color:#a6e22e">sounds&lt;/span>(BlockSoundGroup.&lt;span style="color:#a6e22e">DEEPSLATE&lt;/span>));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后，我们需要注册这两个矿物。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>Registry.&lt;span style="color:#a6e22e">register&lt;/span>(Registries.&lt;span style="color:#a6e22e">BLOCK&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> Identifier(&lt;span style="color:#e6db74">&amp;#34;awesome&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;end_heart_ore&amp;#34;&lt;/span>), END_HEART_ORE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Registry.&lt;span style="color:#a6e22e">register&lt;/span>(Registries.&lt;span style="color:#a6e22e">BLOCK&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> Identifier(&lt;span style="color:#e6db74">&amp;#34;awesome&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;deepslate_end_heart_ore&amp;#34;&lt;/span>), DEEPSLATE_END_HEART_ORE);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注册矿物物品">注册矿物物品&lt;/h2>
&lt;p>使用之前学习的方法，我们可以很容易的注册矿物物品。&lt;/p>
&lt;h2 id="矿物纹理">矿物纹理&lt;/h2>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric2024/end_heart_ore.png" alt="end_heart_ore">
&lt;img src="https://blog.enaium.cn/assets/fabric2024/deepslate_end_heart_ore.png" alt="deepslate_end_heart_ore">&lt;/p>
&lt;p>使用之前学习的方法，我们可以很容易的注册矿物纹理。&lt;/p>
&lt;h2 id="多语言文件">多语言文件&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;item.awesome.end_heart_ore&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;End Heart Ore&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;item.awesome.deepslate_end_heart_ore&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Deepslate End Heart Ore&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;block.awesome.end_heart_ore&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;End Heart Ore&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;block.awesome.deepslate_end_heart_ore&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Deepslate End Heart Ore&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="掉落物">掉落物&lt;/h2>
&lt;p>这里会比较复杂，需要考虑&lt;code>精准采集&lt;/code>和&lt;code>时运&lt;/code>的影响，但我们可以使用原版中已经存在的配置。&lt;/p>
&lt;p>我们进入到原版游戏中的&lt;code>data/minecraft/loot_tables/blocks/diamond_ore.json&lt;/code>和&lt;code>data/minecraft/loot_tables/blocks/deepslate_diamond_ore.json&lt;/code>将钻石矿的掉落配置加以修改。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">@@ -24,7 +24,7 @@
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;name&amp;#34;: &amp;#34;minecraft:diamond_ore&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;name&amp;#34;: &amp;#34;awesome:end_heart_ore&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;type&amp;#34;: &amp;#34;minecraft:item&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">@@ -38,7 +38,7 @@
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &amp;#34;function&amp;#34;: &amp;#34;minecraft:explosion_decay&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;name&amp;#34;: &amp;#34;minecraft:diamond&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;name&amp;#34;: &amp;#34;awesome:end_heart&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">@@ -46,5 +46,5 @@
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &amp;#34;rolls&amp;#34;: 1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;random_sequence&amp;#34;: &amp;#34;minecraft:blocks/diamond_ore&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;random_sequence&amp;#34;: &amp;#34;awesome:blocks/end_heart_ore&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">@@ -24,7 +24,7 @@
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;name&amp;#34;: &amp;#34;minecraft:deepslate_diamond_ore&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;name&amp;#34;: &amp;#34;awesome:deepslate_end_heart_ore&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;type&amp;#34;: &amp;#34;minecraft:item&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">@@ -38,7 +38,7 @@
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &amp;#34;function&amp;#34;: &amp;#34;minecraft:explosion_decay&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;name&amp;#34;: &amp;#34;minecraft:diamond&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;name&amp;#34;: &amp;#34;awesome:end_heart&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">@@ -46,5 +46,5 @@
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &amp;#34;rolls&amp;#34;: 1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;random_sequence&amp;#34;: &amp;#34;minecraft:blocks/deepslate_diamond_ore&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;random_sequence&amp;#34;: &amp;#34;awesome:blocks/deepslate_end_heart_ore&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="可挖掘方块">可挖掘方块&lt;/h2>
&lt;p>我们需要在&lt;code>data/minecraft/tags/blocks/mineable/pickaxe.json&lt;/code>中添加我们的矿物。&lt;/p></description></item><item><title>Minecraft Fabric模组开发教程#9 添加附魔书</title><link>https://blog.enaium.cn/post/2024-1-13-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%239-%E6%B7%BB%E5%8A%A0%E9%99%84%E9%AD%94%E4%B9%A6/</link><pubDate>Sat, 13 Jan 2024 15:17:47 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-1-13-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%239-%E6%B7%BB%E5%8A%A0%E9%99%84%E9%AD%94%E4%B9%A6/</guid><description>&lt;h2 id="创建附魔类">创建附魔类&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">FireBoomEnchantment&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Enchantment {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">FireBoomEnchantment&lt;/span>(Rarity rarity, EnchantmentTarget target, EquipmentSlot&lt;span style="color:#f92672">[]&lt;/span> slotTypes) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(rarity, target, slotTypes);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果目标被攻击，目标就会爆炸，这里直接使用&lt;code>FireballEntity&lt;/code>类中&lt;code>onCollision&lt;/code>方法的部分代码。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onTargetDamaged&lt;/span>(LivingEntity user, Entity target, &lt;span style="color:#66d9ef">int&lt;/span> level) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (target &lt;span style="color:#66d9ef">instanceof&lt;/span> LivingEntity) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> bl &lt;span style="color:#f92672">=&lt;/span> user.&lt;span style="color:#a6e22e">getWorld&lt;/span>().&lt;span style="color:#a6e22e">getGameRules&lt;/span>().&lt;span style="color:#a6e22e">getBoolean&lt;/span>(GameRules.&lt;span style="color:#a6e22e">DO_MOB_GRIEFING&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user.&lt;span style="color:#a6e22e">getWorld&lt;/span>().&lt;span style="color:#a6e22e">createExplosion&lt;/span>(target, target.&lt;span style="color:#a6e22e">getX&lt;/span>(), target.&lt;span style="color:#a6e22e">getY&lt;/span>(), target.&lt;span style="color:#a6e22e">getZ&lt;/span>(), 1, bl, World.&lt;span style="color:#a6e22e">ExplosionSourceType&lt;/span>.&lt;span style="color:#a6e22e">MOB&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注册附魔">注册附魔&lt;/h2>
&lt;p>创建&lt;code>FireBoomEnchantment&lt;/code>对象的时候，需要传入&lt;code>Enchantment.Rarity&lt;/code>、&lt;code>EnchantmentTarget&lt;/code>和&lt;code>EquipmentSlot[]&lt;/code>，其中&lt;code>VERY_RARE&lt;/code>表示非常稀有，&lt;code>EnchantmentTarget.WEAPON&lt;/code>表示只能附魔武器，&lt;code>EquipmentSlot[]&lt;/code>表示只能附魔主手。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> FireBoomEnchantment FIRE_BOOM &lt;span style="color:#f92672">=&lt;/span> Registry.&lt;span style="color:#a6e22e">register&lt;/span>(Registries.&lt;span style="color:#a6e22e">ENCHANTMENT&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> Identifier(&lt;span style="color:#e6db74">&amp;#34;awesome&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;fire_boom&amp;#34;&lt;/span>), &lt;span style="color:#66d9ef">new&lt;/span> FireBoomEnchantment(Enchantment.&lt;span style="color:#a6e22e">Rarity&lt;/span>.&lt;span style="color:#a6e22e">VERY_RARE&lt;/span>, EnchantmentTarget.&lt;span style="color:#a6e22e">WEAPON&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> EquipmentSlot&lt;span style="color:#f92672">[]&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> EquipmentSlot.&lt;span style="color:#a6e22e">MAINHAND&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="多语言">多语言&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;enchantment.awesome.fire_boom&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Fire Boom&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>附魔书在在原材料的最后&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric2024/9-1.png" alt="9-1">&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric2024/9-2.png" alt="9-2">&lt;/p></description></item><item><title>Minecraft Fabric模组开发教程#8 添加武器</title><link>https://blog.enaium.cn/post/2024-1-10-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%238-%E6%B7%BB%E5%8A%A0%E6%AD%A6%E5%99%A8/</link><pubDate>Wed, 10 Jan 2024 16:00:24 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-1-10-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%238-%E6%B7%BB%E5%8A%A0%E6%AD%A6%E5%99%A8/</guid><description>&lt;h2 id="工具材料">工具材料&lt;/h2>
&lt;p>和添加盔甲差不多，需要创建一个&lt;code>EndToolMaterial&lt;/code>类，之后实现&lt;code>ToolMaterial&lt;/code>接口，这样我们就可以创建武器了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">enum&lt;/span> EndToolMaterial &lt;span style="color:#66d9ef">implements&lt;/span> ToolMaterial {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getDurability&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> &lt;span style="color:#a6e22e">getMiningSpeedMultiplier&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> &lt;span style="color:#a6e22e">getAttackDamage&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getMiningLevel&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getEnchantability&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Ingredient &lt;span style="color:#a6e22e">getRepairIngredient&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后仿照&lt;code>net.minecraft.item.ToolMaterials&lt;/code>枚举类完成这些方法。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span> package com.example.tool;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+import com.example.ExampleMod;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> import net.minecraft.item.ToolMaterial;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> import net.minecraft.recipe.Ingredient;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+import java.util.function.Supplier;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> public enum EndToolMaterial implements ToolMaterial {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- ;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ END(5, 2592, 17.0f, 4.0f, 15, () -&amp;gt; Ingredient.ofItems(ExampleMod.END_HEART));
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ private final int miningLevel;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ private final int itemDurability;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ private final float miningSpeed;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ private final float attackDamage;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ private final int enchantability;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ private final Supplier&amp;lt;Ingredient&amp;gt; repairIngredient;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ private EndToolMaterial(int miningLevel, int itemDurability, float miningSpeed, float attackDamage, int enchantability, Supplier&amp;lt;Ingredient&amp;gt; repairIngredient) {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ this.miningLevel = miningLevel;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ this.itemDurability = itemDurability;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ this.miningSpeed = miningSpeed;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ this.attackDamage = attackDamage;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ this.enchantability = enchantability;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ this.repairIngredient = repairIngredient;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> @Override
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public int getDurability() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- return 0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ return this.itemDurability;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Override
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public float getMiningSpeedMultiplier() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- return 0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ return this.miningSpeed;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Override
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public float getAttackDamage() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- return 0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ return this.attackDamage;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Override
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public int getMiningLevel() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- return 0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ return this.miningLevel;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Override
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public int getEnchantability() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- return 0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ return this.enchantability;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Override
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public Ingredient getRepairIngredient() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- return null;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ return this.repairIngredient.get();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注册武器">注册武器&lt;/h2>
&lt;p>和盔甲不同的是，在创建&lt;code>SwordItem&lt;/code>时，额外需要传入武器的伤害和攻击速度，需要注意的是攻击速度始终会多出4.0f。&lt;/p></description></item><item><title>Minecraft Fabric模组开发教程#7 添加盔甲</title><link>https://blog.enaium.cn/post/2024-1-10-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%237-%E6%B7%BB%E5%8A%A0%E7%9B%94%E7%94%B2/</link><pubDate>Wed, 10 Jan 2024 14:53:56 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-1-10-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%237-%E6%B7%BB%E5%8A%A0%E7%9B%94%E7%94%B2/</guid><description>&lt;h2 id="盔甲材料">盔甲材料&lt;/h2>
&lt;p>我们创建一个&lt;code>EndArmorMaterial&lt;/code>枚举类，之后实现&lt;code>ArmorMaterial&lt;/code>接口，这样我们就可以创建盔甲了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> com.example.armor;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.item.ArmorItem;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.item.ArmorMaterial;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.recipe.Ingredient;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.sound.SoundEvent;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">enum&lt;/span> EndArmorMaterial &lt;span style="color:#66d9ef">implements&lt;/span> ArmorMaterial {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getDurability&lt;/span>(ArmorItem.&lt;span style="color:#a6e22e">Type&lt;/span> type) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getProtection&lt;/span>(ArmorItem.&lt;span style="color:#a6e22e">Type&lt;/span> type) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getEnchantability&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> SoundEvent &lt;span style="color:#a6e22e">getEquipSound&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Ingredient &lt;span style="color:#a6e22e">getRepairIngredient&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getName&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> &lt;span style="color:#a6e22e">getToughness&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> &lt;span style="color:#a6e22e">getKnockbackResistance&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后仿照&lt;code>net.minecraft.item.ArmorMaterials&lt;/code>枚举类完成这些方法。&lt;/p></description></item><item><title>Minecraft Fabric模组开发教程#6 多语言 合成表 提示</title><link>https://blog.enaium.cn/post/2024-1-10-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%236-%E5%A4%9A%E8%AF%AD%E8%A8%80-%E5%90%88%E6%88%90%E8%A1%A8-%E5%B7%A5%E5%85%B7%E6%8F%90%E7%A4%BA/</link><pubDate>Wed, 10 Jan 2024 02:49:55 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-1-10-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%236-%E5%A4%9A%E8%AF%AD%E8%A8%80-%E5%90%88%E6%88%90%E8%A1%A8-%E5%B7%A5%E5%85%B7%E6%8F%90%E7%A4%BA/</guid><description>&lt;h2 id="多语言">多语言&lt;/h2>
&lt;p>在之前我们已经添加了物品、物品组和方快，但是它们还没有名称，这里可以使用多语言来为它们添加名称。&lt;/p>
&lt;p>我们在&lt;code>assets/awesome/lang&lt;/code>目录下创建一个&lt;code>en_us.json&lt;/code>文件，这个文件就是英文语言文件，我们可以在这个文件中添加多语言。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;item.awesome.end_heart&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;End Heart&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;item.awesome.end_heart_block&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;End Heart Block&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;block.awesome.end_heart_block&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;End Heart Block&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;itemGroup.awesome.item_group&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Awesome&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric2024/6-1.png" alt="6-1">&lt;/p>
&lt;h2 id="合成表">合成表&lt;/h2>
&lt;p>合成表是用来合成物品的，我们可以在这里设置合成物品的配方。&lt;/p>
&lt;p>在&lt;code>data\awesome\recipes&lt;/code>创建一个&lt;code>end_heart_block.json&lt;/code>文件，也就是如何在工作台中合成&lt;code>end_heart_block.json&lt;/code>。&lt;/p>
&lt;p>其中&lt;code>type&lt;/code>是合成表的类型，&lt;code>pattern&lt;/code>是合成表的合成模式，也就是在工作台中的物品摆放位置，&lt;code>key&lt;/code>是合成表的材料，&lt;code>result&lt;/code>是合成表的结果。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;minecraft:crafting_shaped&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;pattern&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;EEE&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;EEE&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;EEE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;key&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;E&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;item&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;awesome:end_heart&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;result&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;item&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;awesome:end_heart_block&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;count&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着我们需要再添加一个分解的合成表，也就是如何将&lt;code>end_heart_block&lt;/code>分解成&lt;code>end_heart&lt;/code>。&lt;/p>
&lt;p>在&lt;code>data\awesome\recipes&lt;/code>创建一个&lt;code>end_heart.json&lt;/code>文件。&lt;/p>
&lt;p>和之前的合成表不同的是，这个合成表的&lt;code>type&lt;/code>是&lt;code>minecraft:crafting_shapeless&lt;/code>，也就是无序合成表，&lt;code>ingredients&lt;/code>是合成表的材料，&lt;code>result&lt;/code>是合成表的结果。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;minecraft:crafting_shapeless&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;ingredients&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;item&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;awesome:end_heart_block&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;result&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;item&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;awesome:end_heart&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;count&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">9&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric2024/6-2.png" alt="6-2">&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric2024/6-3.png" alt="6-3">&lt;/p>
&lt;h2 id="提示">提示&lt;/h2>
&lt;p>我们可以在方块上添加提示，当玩家将鼠标悬停在方块上时，就会显示提示。&lt;/p>
&lt;p>在&lt;code>EndHeartBlock&lt;/code>中添加&lt;code>appendTooltip&lt;/code>方法，之后调用&lt;code>tooltip.add&lt;/code>添加提示，使用&lt;code>Text.translatable&lt;/code>方法可以将多语言的key转换为对应的多语言。&lt;/p></description></item><item><title>Minecraft Fabric模组开发教程#5 添加方块</title><link>https://blog.enaium.cn/post/2024-1-9-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%235-%E6%B7%BB%E5%8A%A0%E6%96%B9%E5%9D%97/</link><pubDate>Wed, 10 Jan 2024 01:53:12 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-1-9-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%235-%E6%B7%BB%E5%8A%A0%E6%96%B9%E5%9D%97/</guid><description>&lt;h2 id="注册方块">注册方块&lt;/h2>
&lt;p>和注册物品相同，我们先声明一个方块对象，和物品不同的是，方块有一个&lt;code>strength&lt;/code>属性，这个属性代表方块的硬度，也就是玩家破坏方块需要花费的时间，这个属性的值越大，方块的硬度越高，破坏方块需要花费的时间越长。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Block END_HEART_BLOCK &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Block(FabricBlockSettings.&lt;span style="color:#a6e22e">create&lt;/span>().&lt;span style="color:#a6e22e">strength&lt;/span>(4.&lt;span style="color:#a6e22e">0f&lt;/span>));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后我们需要注册这个方块，和注册物品相同，我们需要在&lt;code>onInitialize&lt;/code>方法中注册方块。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">@@ -31,5 +31,6 @@
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Override
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public void onInitialize() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ Registry.register(Registries.BLOCK, new Identifier(&amp;#34;awesome&amp;#34;, &amp;#34;end_heart_block&amp;#34;), END_HEART_BLOCK);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>虽然说已经将方块注册到了游戏中，但是我们还是获取不到这个方块的物品，因为我们还没有注册这个方块的物品。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">@@ -32,5 +32,6 @@
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> @Override
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public void onInitialize() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Registry.register(Registries.BLOCK, new Identifier(&amp;#34;awesome&amp;#34;, &amp;#34;end_heart_block&amp;#34;), END_HEART_BLOCK);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ Registry.register(Registries.ITEM, new Identifier(&amp;#34;awesome&amp;#34;, &amp;#34;end_heart_block&amp;#34;), new BlockItem(END_HEART_BLOCK, new FabricItemSettings()));
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="添加纹理">添加纹理&lt;/h2>
&lt;p>需要方快的状态配置、方快模型配置、方快物品模型配置和方快纹理。&lt;/p>
&lt;h3 id="方块状态配置">方块状态配置&lt;/h3>
&lt;p>位置:&lt;code>assets/awesome/blockstates/end_heart_block.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;variants&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;&amp;#34;&lt;/span>: { &lt;span style="color:#f92672">&amp;#34;model&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;awesome:block/end_heart_block&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="方块模型配置">方块模型配置&lt;/h3>
&lt;p>位置:&lt;code>assets/awesome/models/block/end_heart_block.json&lt;/code>&lt;/p></description></item><item><title>Minecraft Fabric模组开发教程#4 添加物品</title><link>https://blog.enaium.cn/post/2024-1-9-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%234-%E6%B7%BB%E5%8A%A0%E7%89%A9%E5%93%81/</link><pubDate>Tue, 09 Jan 2024 22:38:21 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-1-9-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%234-%E6%B7%BB%E5%8A%A0%E7%89%A9%E5%93%81/</guid><description>&lt;h2 id="注册物品">注册物品&lt;/h2>
&lt;p>首先在&lt;code>ExampleMod&lt;/code>类中声明&lt;code>Item&lt;/code>对象。&lt;/p>
&lt;p>接着在&lt;code>onInitialize&lt;/code>方法中注册物品。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span> import net.fabricmc.api.ModInitializer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+import net.fabricmc.fabric.api.item.v1.FabricItemSettings;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+import net.minecraft.item.Item;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+import net.minecraft.registry.Registries;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+import net.minecraft.registry.Registry;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+import net.minecraft.util.Identifier;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> import org.slf4j.Logger;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> import org.slf4j.LoggerFactory;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public class ExampleMod implements ModInitializer {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public static final Logger LOGGER = LoggerFactory.getLogger(&amp;#34;awesome&amp;#34;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ public static final Item END_HEART = new Item(new FabricItemSettings());
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> @Override
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public void onInitialize() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- LOGGER.info(&amp;#34;Hello Fabric world!&amp;#34;);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ Registry.register(Registries.ITEM, new Identifier(&amp;#34;awesome&amp;#34;, &amp;#34;end_heart&amp;#34;), END_HEART);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&lt;code>Registry.register&lt;/code>方法的第一个参数是注册的类型，第二个参数是注册的ID(格式为&lt;code>modid:itemid&lt;/code>)，第三个参数是注册的对象。&lt;/p></description></item><item><title>Minecraft Fabric模组开发教程#3 编写简单的代码</title><link>https://blog.enaium.cn/post/2024-1-9-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%233-%E7%BC%96%E5%86%99%E7%AE%80%E5%8D%95%E7%9A%84%E4%BB%A3%E7%A0%81/</link><pubDate>Tue, 09 Jan 2024 21:50:27 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-1-9-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%233-%E7%BC%96%E5%86%99%E7%AE%80%E5%8D%95%E7%9A%84%E4%BB%A3%E7%A0%81/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在上篇文章中我们已经了解了模组和项目的基本信息，这篇文章我们将会编写一些简单的代码。&lt;/p>
&lt;h2 id="调整模组信息">调整模组信息&lt;/h2>
&lt;p>我们首先删除无用的文件。&lt;/p>
&lt;h3 id="删除client文件夹">删除&lt;code>client&lt;/code>文件夹&lt;/h3>
&lt;p>删除之后我们还需要调整其他地方。&lt;/p>
&lt;ul>
&lt;li>删除&lt;code>build.gradle&lt;/code>中的&lt;code>client&lt;/code>部分，由于之后不需要区分客户端和服务端，所以就把&lt;code>loom&lt;/code>的一整块代码删除。&lt;/li>
&lt;li>删除&lt;code>src/main/resources&lt;/code>中的&lt;code>fabric.mod.json&lt;/code>中的&lt;code>client&lt;/code>部分。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span> &amp;#34;entrypoints&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;main&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;com.example.ExampleMod&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- ],
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;client&amp;#34;: [
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;com.example.ExampleModClient&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;mixins&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;modid.mixins.json&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;config&amp;#34;: &amp;#34;modid.client.mixins.json&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;environment&amp;#34;: &amp;#34;client&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;modid.mixins.json&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;depends&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;fabricloader&amp;#34;: &amp;#34;&amp;gt;=0.15.0&amp;#34;,
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="修改模组信息">修改模组信息&lt;/h3>
&lt;ul>
&lt;li>修改&lt;code>id&lt;/code>、&lt;code>name&lt;/code>、&lt;code>description&lt;/code>、&lt;code>authors&lt;/code>、&lt;code>icon&lt;/code>。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;schemaVersion&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;id&amp;#34;: &amp;#34;modid&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;id&amp;#34;: &amp;#34;awesome&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> &amp;#34;version&amp;#34;: &amp;#34;${version}&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;name&amp;#34;: &amp;#34;Example mod&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;description&amp;#34;: &amp;#34;This is an example description! Tell everyone what your mod is about!&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;name&amp;#34;: &amp;#34;Awesome&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">+ &amp;#34;description&amp;#34;: &amp;#34;This is an awesome mod&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> &amp;#34;authors&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;Me!&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;Enaium&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;contact&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;homepage&amp;#34;: &amp;#34;https://fabricmc.net/&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;sources&amp;#34;: &amp;#34;https://github.com/FabricMC/fabric-example-mod&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;license&amp;#34;: &amp;#34;CC0-1.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;icon&amp;#34;: &amp;#34;assets/modid/icon.png&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;icon&amp;#34;: &amp;#34;assets/awesome/icon.png&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> &amp;#34;environment&amp;#34;: &amp;#34;*&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;entrypoints&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;main&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">@@ -20,7 +20,7 @@
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;mixins&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;#34;modid.mixins.json&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;#34;awesome.mixins.json&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;depends&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;fabricloader&amp;#34;: &amp;#34;&amp;gt;=0.15.0&amp;#34;,
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>修改&lt;code>modid.mixins.json&lt;/code>为&lt;code>awesome.mixins.json&lt;/code>&lt;/li>
&lt;li>修改&lt;code>assets/modid/icon.png&lt;/code>为&lt;code>assets/awesome/icon.png&lt;/code>&lt;/li>
&lt;li>修改&lt;code>ExampleMod.java&lt;/code>中的日志名称&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- public static final Logger LOGGER = LoggerFactory.getLogger(&amp;#34;modid&amp;#34;);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ public static final Logger LOGGER = LoggerFactory.getLogger(&amp;#34;awesome&amp;#34;);
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="编写代码">编写代码&lt;/h2>
&lt;p>在&lt;code>ExampleMixin&lt;/code>类中添加一行日志。&lt;/p></description></item><item><title>Minecraft Fabric模组开发教程#2 了解模组和项目</title><link>https://blog.enaium.cn/post/2024-1-9-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%232-%E4%BA%86%E8%A7%A3%E6%A8%A1%E7%BB%84%E5%92%8C%E9%A1%B9%E7%9B%AE/</link><pubDate>Tue, 09 Jan 2024 21:18:20 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-1-9-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%232-%E4%BA%86%E8%A7%A3%E6%A8%A1%E7%BB%84%E5%92%8C%E9%A1%B9%E7%9B%AE/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在上篇文章中我们已经完成了开发环境的配置，这篇文章我们将会介绍一下模组和项目的基本信息。&lt;/p>
&lt;h2 id="目录结构">目录结构&lt;/h2>
&lt;p>点击左上角的&lt;code>Project&lt;/code>按钮，可以看到项目的目录结构，之后我们展开&lt;code>src&lt;/code>中的所有文件夹。&lt;/p>
&lt;pre tabindex="0">&lt;code>├─client
│ ├─java
│ │ └─com
│ │ └─example
│ │ │ ExampleModClient.java
│ │ │
│ │ └─mixin
│ │ └─client
│ │ ExampleClientMixin.java
│ │
│ └─resources
│ modid.client.mixins.json
│
└─main
 ├─java
 │ └─com
 │ └─example
 │ │ ExampleMod.java
 │ │
 │ └─mixin
 │ ExampleMixin.java
 │
 └─resources
 │ fabric.mod.json
 │ modid.mixins.json
 │
 └─assets
 └─modid
 icon.png
&lt;/code>&lt;/pre>&lt;p>我们可以看到&lt;code>src&lt;/code>下有两个文件夹，&lt;code>client&lt;/code>和&lt;code>main&lt;/code>，这两个文件夹分别对应客户端和任意端，他们分别有自己的&lt;code>java&lt;/code>和&lt;code>resources&lt;/code>文件夹，&lt;code>java&lt;/code>文件夹中存放的是 Java 代码，&lt;code>resources&lt;/code>文件夹中存放的是资源文件。&lt;/p>
&lt;h2 id="模组信息">模组信息&lt;/h2>
&lt;p>在&lt;code>main&lt;/code>文件夹下的&lt;code>resources&lt;/code>文件夹中有一个&lt;code>fabric.mod.json&lt;/code>文件，这个文件就是模组的信息文件，我们可以在这里修改模组的信息。&lt;/p>
&lt;pre tabindex="0">&lt;code>{
	&amp;#34;schemaVersion&amp;#34;: 1,
	&amp;#34;id&amp;#34;: &amp;#34;modid&amp;#34;,
	&amp;#34;version&amp;#34;: &amp;#34;${version}&amp;#34;,
	&amp;#34;name&amp;#34;: &amp;#34;Example mod&amp;#34;,
	&amp;#34;description&amp;#34;: &amp;#34;This is an example description! Tell everyone what your mod is about!&amp;#34;,
	&amp;#34;authors&amp;#34;: [
		&amp;#34;Me!&amp;#34;
	],
	&amp;#34;contact&amp;#34;: {
		&amp;#34;homepage&amp;#34;: &amp;#34;https://fabricmc.net/&amp;#34;,
		&amp;#34;sources&amp;#34;: &amp;#34;https://github.com/FabricMC/fabric-example-mod&amp;#34;
	},
	&amp;#34;license&amp;#34;: &amp;#34;CC0-1.0&amp;#34;,
	&amp;#34;icon&amp;#34;: &amp;#34;assets/modid/icon.png&amp;#34;,
	&amp;#34;environment&amp;#34;: &amp;#34;*&amp;#34;,
	&amp;#34;entrypoints&amp;#34;: {
		&amp;#34;main&amp;#34;: [
			&amp;#34;com.example.ExampleMod&amp;#34;
		],
		&amp;#34;client&amp;#34;: [
			&amp;#34;com.example.ExampleModClient&amp;#34;
		]
	},
	&amp;#34;mixins&amp;#34;: [
		&amp;#34;modid.mixins.json&amp;#34;,
		{
			&amp;#34;config&amp;#34;: &amp;#34;modid.client.mixins.json&amp;#34;,
			&amp;#34;environment&amp;#34;: &amp;#34;client&amp;#34;
		}
	],
	&amp;#34;depends&amp;#34;: {
		&amp;#34;fabricloader&amp;#34;: &amp;#34;&amp;gt;=0.15.0&amp;#34;,
		&amp;#34;minecraft&amp;#34;: &amp;#34;~1.20.4&amp;#34;,
		&amp;#34;java&amp;#34;: &amp;#34;&amp;gt;=17&amp;#34;,
		&amp;#34;fabric-api&amp;#34;: &amp;#34;*&amp;#34;
	},
	&amp;#34;suggests&amp;#34;: {
		&amp;#34;another-mod&amp;#34;: &amp;#34;*&amp;#34;
	}
}
&lt;/code>&lt;/pre>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>模组的基本信息包括&lt;code>id&lt;/code>、&lt;code>version&lt;/code>、&lt;code>name&lt;/code>、&lt;code>description&lt;/code>、&lt;code>authors&lt;/code>、&lt;code>contact&lt;/code>、&lt;code>license&lt;/code>、&lt;code>icon&lt;/code>。&lt;/p></description></item><item><title>Minecraft Fabric模组开发教程#1 配置开发环境</title><link>https://blog.enaium.cn/post/2024-1-9-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%231-%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Tue, 09 Jan 2024 18:17:05 +0800</pubDate><guid>https://blog.enaium.cn/post/2024-1-9-minecraft-fabric%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%231-%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在几年前我已经写过很多关于Mincraft开发相关的文章，今年已经是2024年了所以我决定重新写一遍，这次我会更加详细的介绍一些内容。&lt;/p>
&lt;h2 id="安装jdk">安装JDK&lt;/h2>
&lt;p>由于最新的Minecraft最低只支持JDK17，所以我们需要安装JDK17，这里我选择下载&lt;a href="https://bell-sw.com/pages/downloads/#/java-17-lts">Libreica OpenJDK 17&lt;/a>。&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric2024/1-1.png" alt="1-1">&lt;/p>
&lt;p>这里选择&lt;code>Full JDK&lt;/code>之后点击后缀为&lt;code>msi&lt;/code>的文件下载，下载完成后双击安装即可。&lt;/p>
&lt;h2 id="安装idea">安装IDEA&lt;/h2>
&lt;p>这里我选择下载&lt;a href="https://www.jetbrains.com/idea/download/#section=windows">IDEA&lt;/a>，选择&lt;code>Community&lt;/code>版本即可。&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric2024/1-2.png" alt="1-2">&lt;/p>
&lt;p>下载完成后双击安装即可。&lt;/p>
&lt;h2 id="下载项目模板">下载项目模板&lt;/h2>
&lt;p>这里需要到Fabric的GitHub仓库下载模板，&lt;a href="https://github.com/FabricMC/fabric-example-mod">点击这里&lt;/a>进入仓库，点击&lt;code>Code&lt;/code>按钮，选择&lt;code>Download ZIP&lt;/code>下载。&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric2024/1-3.png" alt="1-3">&lt;/p>
&lt;h2 id="运行项目">运行项目&lt;/h2>
&lt;p>下载完成后解压，打开IDEA，选择&lt;code>Open&lt;/code>，选择解压后的文件夹，点击&lt;code>OK&lt;/code>，最后点击&lt;code>Trust Project&lt;/code>。&lt;/p>
&lt;p>这样就算是将项目导入IDEA了，接下来只需等待IDEA加载完成即可，如果是第一次开发Fabric模组，可能会需要下载一些依赖，这个过程可能会比较慢，需要耐心等待。&lt;/p>
&lt;p>点击左下角有一个&lt;code>Build&lt;/code>图标的按钮，之后再右侧出现&lt;code>BUILD SUCCESSFUL&lt;/code>时，说明项目已经完成构建，可以运行了。&lt;/p>
&lt;p>之后点击右上角的&lt;code>Gradle&lt;/code>图标的按钮，展开之后找到&lt;code>Tasks&lt;/code>下的&lt;code>fabric&lt;/code>，点击&lt;code>runClient&lt;/code>，等待运行完成即可。&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric2024/1-4.png" alt="1-4">&lt;/p></description></item><item><title>Gradle极简入门</title><link>https://blog.enaium.cn/post/2023-6-2-gradle%E6%9E%81%E7%AE%80%E5%85%A5%E9%97%A8/</link><pubDate>Fri, 02 Jun 2023 09:18:47 +0800</pubDate><guid>https://blog.enaium.cn/post/2023-6-2-gradle%E6%9E%81%E7%AE%80%E5%85%A5%E9%97%A8/</guid><description>&lt;h2 id="什么是-gradle">什么是 Gradle&lt;/h2>
&lt;p>&lt;code>Gradle&lt;/code>是一个基于&lt;code>Apache Ant&lt;/code>和&lt;code>Apache Maven&lt;/code>概念的项目自动化构建工具。它使用一种基于&lt;code>Groovy&lt;/code>的特定领域语言(&lt;code>DSL&lt;/code>)来声明项目设置，而不是传统的&lt;code>XML&lt;/code>。&lt;code>Gradle&lt;/code>构建脚本是用&lt;code>Groovy&lt;/code>编写的，也可以使用&lt;code>Kotlin&lt;/code>编写，两者都是基于&lt;code>JVM&lt;/code>的语言。&lt;/p>
&lt;h2 id="安装-gradle">安装 Gradle&lt;/h2>
&lt;p>在开始之前，想必大家已经学会了&lt;code>Java&lt;/code>或者&lt;code>Kotlin&lt;/code>，现在大家都在使用&lt;code>Android Studio&lt;/code>开发&lt;code>Android&lt;/code>应用，&lt;code>Android Studio&lt;/code>是基于&lt;code>IntelliJ IDEA&lt;/code>开发的，但现在不从&lt;code>Android Studio&lt;/code>的角度来讲，也不从&lt;code>IntelliJ IDEA&lt;/code>的角度来讲，而是从&lt;code>Gradle&lt;/code>的角度来讲，所以我们需要去官网下载&lt;code>Gradle&lt;/code>，然后在&lt;code>IntelliJ IDEA&lt;/code>中去使用&lt;code>Gradle&lt;/code>。&lt;/p>
&lt;p>首先去官网下载&lt;code>Gradle&lt;/code>，下载地址：&lt;a href="https://gradle.org/releases/">https://gradle.org/releases/&lt;/a>，之后点击最新版本中的&lt;code>binary-only&lt;/code>，这会直接下载一个&lt;code>zip&lt;/code>压缩包，下载完成后解压到一个目录，然后再配置环境变量到&lt;code>bin&lt;/code>目录，这样就可以在&lt;code>Terminal&lt;/code>中使用&lt;code>gradle&lt;/code>命令了，因为&lt;code>Java&lt;/code>跨平台的缘故，在其他的操作系统上配置环境变量的方式都是大相不差的，这里我就不再赘述了，如果不会配置环境变量的话，可以去网上搜索一下，这里我就不再赘述了。&lt;/p>
&lt;p>配置好环境变量之后，打开&lt;code>Terminal&lt;/code>，输入&lt;code>gradle -v&lt;/code>，如果出现下面的信息，说明&lt;code>Gradle&lt;/code>安装成功了。&lt;/p>
&lt;pre tabindex="0">&lt;code>------------------------------------------------------------
Gradle 8.1
------------------------------------------------------------

Build time: 2023-04-12 12:07:45 UTC
Revision: 40ba32cde9d6daf2b92c39376d2758909dd6b813

Kotlin: 1.8.10
Groovy: 3.0.15
Ant: Apache Ant(TM) version 1.10.11 compiled on July 10 2021
JVM: 17.0.6 (BellSoft 17.0.6+10-LTS)
OS: Windows 10 10.0 amd64
&lt;/code>&lt;/pre>&lt;h2 id="创建-hello-world-项目">创建 Hello World 项目&lt;/h2>
&lt;p>创建一个文件夹，然后在文件夹中打开&lt;code>Terminal&lt;/code>，输入&lt;code>gradle init&lt;/code>，之后按照我的步骤来。&lt;/p>
&lt;pre tabindex="0">&lt;code>Select type of project to generate:
 1: basic
 2: application
 3: library
 4: Gradle plugin
Enter selection (default: basic) [1..4] 2 // 选择 application

Select implementation language:
 1: C++
 2: Groovy
 3: Java
 4: Kotlin
 5: Scala
 6: Swift
Enter selection (default: Java) [1..6] 3 // 选择 Java

Generate multiple subprojects for application? (default: no) [yes, no] // 默认 no

Select build script DSL:
 1: Groovy
 2: Kotlin
Enter selection (default: Groovy) [1..2] 2 // 选择 Kotlin

Select test framework:
 1: JUnit 4
 2: TestNG
 3: Spock
 4: JUnit Jupiter
Enter selection (default: JUnit Jupiter) [1..4] //默认 JUnit Jupiter

Project name (default: gradle_learn):
Source package (default: gradle_learn): cn.enaium
Enter target version of Java (min. 7) (default: 17): // 默认 17
Generate build using new APIs and behavior (some features may change in the next minor release)? (default: no) [yes, no] // 默认 no


&amp;gt; Task :init
Get more help with your project: https://docs.gradle.org/8.1/samples/sample_building_java_applications.html

BUILD SUCCESSFUL in 32s // 构建成功
2 actionable tasks: 2 executed
&lt;/code>&lt;/pre>&lt;p>如果最后出现&lt;code>BUILD SUCCESSFUL&lt;/code>，说明项目创建成功了，现在我们来看一下项目的结构，这里先简单的介绍一下，后面会详细的介绍。&lt;/p></description></item><item><title>Jimmer VS MyBatisPlus查询自关联表</title><link>https://blog.enaium.cn/post/2023-5-30-jimmer-vs-mybatisplus%E6%9F%A5%E8%AF%A2%E8%87%AA%E5%85%B3%E8%81%94%E8%A1%A8/</link><pubDate>Tue, 30 May 2023 09:48:17 +0800</pubDate><guid>https://blog.enaium.cn/post/2023-5-30-jimmer-vs-mybatisplus%E6%9F%A5%E8%AF%A2%E8%87%AA%E5%85%B3%E8%81%94%E8%A1%A8/</guid><description>&lt;p>本文是对&lt;code>Jimmer&lt;/code>文档中&lt;a href="https://babyfish-ct.github.io/jimmer/zh/docs/jimmer-sql/query/fetcher#%E8%87%AA%E5%85%B3%E8%81%94%E9%80%92%E5%BD%92%E6%8A%93%E5%8F%96">对象抓取器-自关联递归抓取&lt;/a>部分的介绍,之后会对比&lt;code>MyBatisPlus&lt;/code>的查询自关联表的能力。&lt;/p>
&lt;blockquote>
&lt;p>对象抓取器是 jimmer-sql 一个非常强大的特征，具备可媲美 GraphQL 的能力。
即使用户不采用任何 GraphQL 相关的技术栈，也能在 SQL 查询层面得到和 GraphQL 相似的对象图查询能力。&lt;/p>
&lt;/blockquote>
&lt;h2 id="准备数据库和实体类">准备数据库和实体类&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> tree_node(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node_id bigint &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name varchar(&lt;span style="color:#ae81ff">20&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parent_id bigint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">alter&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> tree_node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">add&lt;/span> &lt;span style="color:#66d9ef">constraint&lt;/span> pk_tree_node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">primary&lt;/span> &lt;span style="color:#66d9ef">key&lt;/span>(node_id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">alter&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> tree_node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">add&lt;/span> &lt;span style="color:#66d9ef">constraint&lt;/span> uq_tree_node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unique&lt;/span>(parent_id, name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">alter&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> tree_node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">add&lt;/span> &lt;span style="color:#66d9ef">constraint&lt;/span> fk_tree_node__parent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreign&lt;/span> &lt;span style="color:#66d9ef">key&lt;/span>(parent_id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">references&lt;/span> tree_node(node_id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">insert&lt;/span> &lt;span style="color:#66d9ef">into&lt;/span> tree_node(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node_id, name, parent_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) &lt;span style="color:#66d9ef">values&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Home&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Food&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Drinks&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Coca Cola&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Fanta&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">6&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Bread&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">7&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Baguette&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">6&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">8&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Ciabatta&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">6&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">9&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Clothing&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Woman&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">9&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">11&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Casual wear&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">12&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Dress&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">11&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">13&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Miniskirt&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">11&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">14&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Jeans&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">11&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">15&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Formal wear&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">16&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Suit&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">15&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">17&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Shirt&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">15&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">18&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Man&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">9&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">19&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Casual wear&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">18&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">20&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Jacket&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">19&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">21&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Jeans&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">19&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">22&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Formal wear&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">18&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">23&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Suit&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">22&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#ae81ff">24&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Shirt&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">22&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Entity&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">TreeNode&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Column&lt;/span>(name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;NODE_ID&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String &lt;span style="color:#a6e22e">name&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ManyToOne&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TreeNode &lt;span style="color:#a6e22e">parent&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@OneToMany&lt;/span>(mappedBy &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;parent&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>TreeNode&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">childNodes&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="指定查询的深度">指定查询的深度&lt;/h2>
&lt;p>我们可以看到，这是一个自关联的表，每个节点都有一个父节点，也可以有多个子节点。&lt;/p></description></item><item><title>Java革命性ORM框架Jimmer简单介绍</title><link>https://blog.enaium.cn/post/2023-5-27-java%E9%9D%A9%E5%91%BD%E6%80%A7orm%E6%A1%86%E6%9E%B6jimmer%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</link><pubDate>Sat, 27 May 2023 10:35:44 +0800</pubDate><guid>https://blog.enaium.cn/post/2023-5-27-java%E9%9D%A9%E5%91%BD%E6%80%A7orm%E6%A1%86%E6%9E%B6jimmer%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</guid><description>&lt;p>本文使用&lt;code>Jimmer&lt;/code>的&lt;a href="https://github.com/babyfish-ct/jimmer/tree/main/example/java/jimmer-sql">官方用例&lt;/a>来介绍&lt;code>Jimmer&lt;/code>的使用方法,&lt;code>Jimmer&lt;/code>同时支持&lt;code>Java&lt;/code>和&lt;code>Kotlin&lt;/code>,本文使用&lt;code>Java&lt;/code>来介绍,实际上&lt;code>Kotlin&lt;/code>比&lt;code>Java&lt;/code>使用起来更方便,这里为了方便大家理解,使用&lt;code>Java&lt;/code>来介绍,本篇文章只是对&lt;code>Jimmer&lt;/code>的一个简单介绍,更多的内容请参考&lt;a href="https://babyfish-ct.gitee.io/jimmer-doc/">官方文档&lt;/a>&lt;/p>
&lt;p>这里开始就不从实体类开始介绍了,这里简单的把用到的三张表之间的关系介绍一下:&lt;/p>
&lt;ul>
&lt;li>&lt;code>BookStore&lt;/code>书店 可以拥有多个&lt;code>Book&lt;/code>&lt;/li>
&lt;li>&lt;code>Book&lt;/code>书 可以属于多个&lt;code>BookStore&lt;/code>,可以有多个&lt;code>Author&lt;/code>&lt;/li>
&lt;li>&lt;code>Author&lt;/code>作者 可以拥有多个&lt;code>Book&lt;/code>,多对多书与作者的关系.&lt;/li>
&lt;/ul>
&lt;h2 id="查询">查询&lt;/h2>
&lt;p>&lt;code>Jimmer&lt;/code>可以配合&lt;code>SpringData&lt;/code>(不是&lt;code>SpringDataJPA&lt;/code>),但这里先介绍脱离&lt;code>SpringData&lt;/code>的使用方法,但还是在&lt;code>SpringBoot&lt;/code>环境下,这里使用&lt;code>H2&lt;/code>内存数据库,&lt;code>Jimmer&lt;/code>支持&lt;code>H2&lt;/code>,&lt;code>MySQL&lt;/code>,&lt;code>PostgreSQL&lt;/code>,&lt;code>Oracle&lt;/code>等数据库,这里使用&lt;code>H2&lt;/code>内存数据库.&lt;/p>
&lt;p>这里的查询都使用&lt;code>Controller&lt;/code>来演示.&lt;/p>
&lt;h3 id="查询所有书店">查询所有书店&lt;/h3>
&lt;p>&lt;code>createQuery&lt;/code>就是创建一个查询,&lt;code>select&lt;/code>就是选择要查询的字段,这里直接传入了&lt;code>BookStoreTable&lt;/code>表示查询所有字段.&lt;/p>
&lt;p>这里用到的&lt;code>sql&lt;/code>就是使用&lt;code>Jimmer&lt;/code>的&lt;code>Sql&lt;/code>对象,这个对象是&lt;code>Jimmer&lt;/code>的核心对象,所有的查询都是通过这个对象来实现的,使用&lt;code>Spring&lt;/code>的注入方式注入&lt;code>JSqlClient&lt;/code>对象.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">final&lt;/span> BookStoreTable bookStore &lt;span style="color:#f92672">=&lt;/span> BookStoreTable.&lt;span style="color:#a6e22e">$&lt;/span>;&lt;span style="color:#75715e">//这里的$是一个静态方法,返回一个BookStoreTable对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sql.&lt;span style="color:#a6e22e">createQuery&lt;/span>(bookStore).&lt;span style="color:#a6e22e">select&lt;/span>(bookStore).&lt;span style="color:#a6e22e">execute&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查询结果如下:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;createdTime&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2023-05-27 11:00:37&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;modifiedTime&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2023-05-27 11:00:37&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;O&amp;#39;REILLY&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;website&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;createdTime&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2023-05-27 11:00:37&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;modifiedTime&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2023-05-27 11:00:37&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;MANNING&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;website&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="指定查询字段">指定查询字段&lt;/h3>
&lt;p>如何需要需要查询指定字段就可以这样,这里的&lt;code>name&lt;/code>是&lt;code>BookStoreTable&lt;/code>的一个字段,但这里的&lt;code>Controller&lt;/code>返回的是&lt;code>BookStore&lt;/code>对象,所以只好像上面的那样查询所有字段.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>sql.&lt;span style="color:#a6e22e">createQuery&lt;/span>(bookStore).&lt;span style="color:#a6e22e">select&lt;/span>(bookStore.&lt;span style="color:#a6e22e">name&lt;/span>()).&lt;span style="color:#a6e22e">execute&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>像上面的例子中如果我们非要查询指定字段又不想定义新的&lt;code>DTO&lt;/code>对象,那么这种在&lt;code>Jimmer&lt;/code>中也可以非常简单的实现,那就是使用&lt;code>Jimmer&lt;/code>中的&lt;code>Fetchr&lt;/code>&lt;/p>
&lt;p>使用&lt;code>BookStore&lt;/code>的&lt;code>Fetchr&lt;/code>来指定查询的字段&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>sql.&lt;span style="color:#a6e22e">createQuery&lt;/span>(bookStore).&lt;span style="color:#a6e22e">select&lt;/span>(bookStore.&lt;span style="color:#a6e22e">fetch&lt;/span>(BookStoreFetcher.&lt;span style="color:#a6e22e">$&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span>())).&lt;span style="color:#a6e22e">execute&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查询结果如下:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;MANNING&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;O&amp;#39;REILLY&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>惊奇的发现,&lt;code>Controller&lt;/code>的返回类型是&lt;code>BookStore&lt;/code>,但是查询结果中只有&lt;code>id&lt;/code>和&lt;code>name&lt;/code>字段.&lt;/p>
&lt;p>这里我把完整的&lt;code>Controller&lt;/code>代码贴出来,&lt;code>List&lt;/code>的类型就是&lt;code>BookStore&lt;/code>的实体类,这就是&lt;code>Jimmer&lt;/code>的强大之处,不需要定义&lt;code>DTO&lt;/code>对象,就可以实现查询指定字段的功能.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@GetMapping&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/simpleList&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>BookStore&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">findSimpleStores&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> BookStoreTable bookStore &lt;span style="color:#f92672">=&lt;/span> BookStoreTable.&lt;span style="color:#a6e22e">$&lt;/span>;&lt;span style="color:#75715e">//这里的$是一个静态方法,返回一个BookStoreTable对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> sql.&lt;span style="color:#a6e22e">createQuery&lt;/span>(bookStore).&lt;span style="color:#a6e22e">select&lt;/span>(bookStore.&lt;span style="color:#a6e22e">fetch&lt;/span>(BookStoreFetcher.&lt;span style="color:#a6e22e">$&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span>())).&lt;span style="color:#a6e22e">execute&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>和实体类的&lt;code>Table&lt;/code>一样,&lt;code>Fetcher&lt;/code>也可以声明一个静态常量.&lt;/p></description></item><item><title>使用SolidJS+SpringBoot写一个简单的个人博客</title><link>https://blog.enaium.cn/post/2023-5-23-%E4%BD%BF%E7%94%A8solidjs+springboot%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link><pubDate>Tue, 23 May 2023 12:24:52 +0800</pubDate><guid>https://blog.enaium.cn/post/2023-5-23-%E4%BD%BF%E7%94%A8solidjs+springboot%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>前端我们使用了&lt;code>SolidJS&lt;/code>来进行开发,它是一个新出的前端框架,它的特点是使用&lt;code>React Hooks&lt;/code>的方式来进行开发,并且它的&lt;code>API&lt;/code>和&lt;code>React&lt;/code>的&lt;code>API&lt;/code>非常相似,所以如果你会&lt;code>React&lt;/code>的话,那么你就会&lt;code>SolidJS&lt;/code>.&lt;/p>
&lt;p>后端我们使用了&lt;code>SpringBoot&lt;/code>来进行开发,数据库我们使用了&lt;code>MySQL&lt;/code>来进行开发,这里我使用的是&lt;code>MariaDB&lt;/code>来进行开发,ORM 框架使用的是&lt;code>Jimmer&lt;/code>,这个框架它支持&lt;code>Java&lt;/code>和&lt;code>Kotlin&lt;/code>,这里为了简单起见就使用&lt;code>Java&lt;/code>开发,但实际使用&lt;code>Koltin&lt;/code>会更方便.&lt;/p>
&lt;h2 id="前端环境">前端环境&lt;/h2>
&lt;p>首先呢,需要安装一下&lt;code>SolidJS&lt;/code>的模板,这里我使用的是&lt;code>TypeScript&lt;/code>和&lt;code>Bootstrap&lt;/code>的模板&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npx degit solidjs/templates/ts-bootstrap website
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd website
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pmpm install &lt;span style="color:#75715e"># or npm install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pmpm dev &lt;span style="color:#75715e"># or npm run dev&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后我们需要安装一下&lt;code>SolidJS&lt;/code>的路由,这是一个官方的路由&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm install @solidjs/router
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后我们需要安装一下&lt;code>SolidJS&lt;/code>的状态管理,这里我使用的是&lt;code>zustand&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm install zustand solid-zustand
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后我们需要安装一下&lt;code>Immer&lt;/code>用于修改不可变数据&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm install solid-immer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后我们需要安装&lt;code>solid-toast&lt;/code>,这是一个用于显示提示的库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm install solid-toast
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后我们需要安装&lt;code>TanStack Query&lt;/code>,这是一个用于进行网络请求的库,同时支持&lt;code>React&lt;/code>,&lt;code>Vue&lt;/code>,&lt;code>Svelte&lt;/code>当然也支持&lt;code>SolidJS&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm install @tanstack/solid-query
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="编写前端基础代码">编写前端基础代码&lt;/h3>
&lt;p>现在我们开始编写前端代码&lt;/p>
&lt;p>首先我们需要删掉模板中自带的样式,并且删除&lt;code>App.tsx&lt;/code>中的内容,然后我们需要在&lt;code>App.tsx&lt;/code>中引入&lt;code>Router&lt;/code>组件,并且使用&lt;code>useRoutes&lt;/code>来进行路由的渲染,这里我们需要传入一个路由数组,这个数组中包含了我们的路由信息,然后我们需要在&lt;code>App.tsx&lt;/code>中使用&lt;code>Router&lt;/code>组件来进行路由的渲染&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#66d9ef">type&lt;/span> { &lt;span style="color:#a6e22e">Component&lt;/span> } &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;solid-js&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">Router&lt;/span>, &lt;span style="color:#a6e22e">useRoutes&lt;/span> } &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;@solidjs/router&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">routes&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;./router&amp;#34;&lt;/span> &lt;span style="color:#75715e">//这里是路由数组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">Toaster&lt;/span> } &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;solid-toast&amp;#34;&lt;/span> &lt;span style="color:#75715e">//这个组件用于显示提示
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">App&lt;/span>: &lt;span style="color:#66d9ef">Component&lt;/span> &lt;span style="color:#f92672">=&lt;/span> () &lt;span style="color:#f92672">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">Routes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">useRoutes&lt;/span>(&lt;span style="color:#a6e22e">routes&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">Toaster&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">Router&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">Routes&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">Router&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后新建&lt;code>views&lt;/code>目录,在其中新家一个&lt;code>Login.tsx&lt;/code>文件,这个文件用于渲染登录页面,然后我们需要在路由数组中添加这个路由,路由文件就是在&lt;code>src&lt;/code>目录下新建一个&lt;code>router&lt;/code>目录,然后在其中新建一个&lt;code>index.ts&lt;/code>文件,这个文件用于导出路由数组&lt;/p></description></item><item><title>解决IDEA创建或打开项目时下载Gradle</title><link>https://blog.enaium.cn/post/2023-2-3-%E8%A7%A3%E5%86%B3idea%E5%88%9B%E5%BB%BA%E6%88%96%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE%E6%97%B6%E4%B8%8B%E8%BD%BDgradle/</link><pubDate>Fri, 03 Feb 2023 15:42:31 +0800</pubDate><guid>https://blog.enaium.cn/post/2023-2-3-%E8%A7%A3%E5%86%B3idea%E5%88%9B%E5%BB%BA%E6%88%96%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE%E6%97%B6%E4%B8%8B%E8%BD%BDgradle/</guid><description>&lt;h1 id="引言">引言&lt;/h1>
&lt;p>我们在使用IDEA创建或打开一个Gradle项目时,IDEA会下载一个新或旧的Gradle版本,虽然下载很快,但到下次IDEA更新后又会是一个新版的Gradle版本,这样很影响我们的开发效率,所以我做了一个东西,可以让IDEA在创建或打开一个项目时使用自己指定的版本&lt;/p>
&lt;h2 id="使用">使用&lt;/h2>
&lt;p>我做了一个Agent,可以让他来加载自己写的&lt;code>Transformer&lt;/code>大大减少了开发时间,它叫做&lt;a href="https://github.com/Cafully/cafully">Cafully&lt;/a>&lt;/p>
&lt;p>首先下载它到任意位置&lt;/p>
&lt;p>接着在给IDEA添加下面JVM参数(idea64.exe.vmoptions),agent的位置就是刚才下载的位置&lt;/p>
&lt;pre tabindex="0">&lt;code>--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED
--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED

-javaagent:/absolute/path/to/cafully-agent.jar
&lt;/code>&lt;/pre>&lt;h2 id="安装插件">安装插件&lt;/h2>
&lt;p>下载好后放入Agent同级目录下的&lt;code>plugin&lt;/code>文件夹里面&lt;/p>
&lt;p>&lt;a href="https://github.com/Cafully/cafully-plugin-asm">cafully-plugin-asm&lt;/a> 这个是ASM插件,用来生成和修改字节码&lt;/p>
&lt;p>接下来下载解决这个问题的插件&lt;/p>
&lt;p>&lt;a href="https://github.com/Enaium/KeepGradleVersion">KeepGradleVersion&lt;/a>&lt;/p>
&lt;h2 id="配置">配置&lt;/h2>
&lt;p>首先呢这个插件有一个配置,在Agent同级目录下的&lt;code>config&lt;/code>文件夹里面放入&lt;code>keep-gradle-version.properties&lt;/code>文件即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#默认 7.6, Gradle的版本&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">version&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">7.6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#默认 false, 是否在当打开一个项目时使用指定的版本&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">open&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样IDEA无论在创建或打开一个项目时使用指定的版本了&lt;/p>
&lt;p>&lt;a href="https://www.bilibili.com/video/BV1Ye4y1N7Km">视频&lt;/a>&lt;/p></description></item><item><title>Hugo教程#5遍历页面</title><link>https://blog.enaium.cn/post/2022-12-7-hugo%E6%95%99%E7%A8%8B%235%E9%81%8D%E5%8E%86%E9%A1%B5%E9%9D%A2/</link><pubDate>Wed, 07 Dec 2022 11:28:02 +0800</pubDate><guid>https://blog.enaium.cn/post/2022-12-7-hugo%E6%95%99%E7%A8%8B%235%E9%81%8D%E5%8E%86%E9%A1%B5%E9%9D%A2/</guid><description>&lt;h1 id="引言">引言&lt;/h1>
&lt;p>前面几期视频学习了一些布局和模板语法,其实&lt;code>Hugo&lt;/code>的最终用法就是来写个人博客,需要遍历出所有的博客来呈现在网站的主页,Markdown文件都会创建一个页面,所以只需要把每个页面的地址遍历出来就行了&lt;/p>
&lt;h2 id="创建页面">创建页面&lt;/h2>
&lt;p>首先在&lt;code>content/post&lt;/code>创建多个页面,以此类推创建4个页面&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-markdown" data-lang="markdown">&lt;span style="display:flex;">&lt;span># Post1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="布局">布局&lt;/h2>
&lt;p>因为要使用模板语法来遍历出这些页面,所以这里选择修改主页布局,使用&lt;code>with&lt;/code>将当前目录改为&lt;code>/post&lt;/code>,接着使用&lt;code>range&lt;/code>来遍历&lt;code>.Pages&lt;/code>,&lt;code>Title&lt;/code>就是每个页面的标题,&lt;code>Permalink&lt;/code>就是路径&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{ with .Site.GetPage &amp;#34;/post&amp;#34; }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ range .Pages }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;&amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{{ .Permalink }}&amp;#34;&lt;/span>&amp;gt;{{ .Title }}&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ end }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ end }}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Hugo教程#4基础布局</title><link>https://blog.enaium.cn/post/2022-11-24-hugo%E6%95%99%E7%A8%8B%234%E5%9F%BA%E7%A1%80%E5%B8%83%E5%B1%80/</link><pubDate>Thu, 24 Nov 2022 11:30:04 +0800</pubDate><guid>https://blog.enaium.cn/post/2022-11-24-hugo%E6%95%99%E7%A8%8B%234%E5%9F%BA%E7%A1%80%E5%B8%83%E5%B1%80/</guid><description>&lt;h1 id="引言">引言&lt;/h1>
&lt;p>前几期学习了布局,本期学习一下布局更多的用法,比如&lt;code>partial&lt;/code>和&lt;code>block&lt;/code>,其中&lt;code>partial&lt;/code>可以吧每个布局引用,&lt;code>block&lt;/code>可作为布局的扩展&lt;/p>
&lt;h2 id="布局">布局&lt;/h2>
&lt;p>&lt;code>layouts/_default&lt;/code>里有一个&lt;code>baseof.html&lt;/code>布局,初始内容是&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{- partial &amp;#34;head.html&amp;#34; . -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{- partial &amp;#34;header.html&amp;#34; . -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;content&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{- block &amp;#34;main&amp;#34; . }}{{- end }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{- partial &amp;#34;footer.html&amp;#34; . -}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>除了基本的html代码,还有一些使用&lt;code>{{}}&lt;/code>包起来的东西,这些都是&lt;code>hugo&lt;/code>的模板语法&lt;/p>
&lt;p>&lt;code>partial&lt;/code>可以将对应的布局引用过来&lt;/p>
&lt;p>&lt;code>block&lt;/code>可以让这个部分被扩展,对应的子布局需要使用&lt;code>define&lt;/code>来进行扩展&lt;/p>
&lt;p>首先来看&lt;code>partial&lt;/code>&lt;/p>
&lt;p>在&lt;code>static&lt;/code>中写一个css&lt;/p>
&lt;pre tabindex="0">&lt;code> static
 └── css
 └── style.css
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#a6e22e">red&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">color&lt;/span>: &lt;span style="color:#66d9ef">red&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>layouts/partials/head.html&lt;/code>的布局中引入css,需要注意的是static是在根目录下,所以不用写,直接从static里的路径开始引用就行了,其实partials就相当于把部分文件内容给放到另一个文件中了,然后使用partial来引用这个文件的内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">link&lt;/span> &lt;span style="color:#a6e22e">rel&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/css/style.css&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在将&lt;code>single.html&lt;/code>中的内容改为,别忘了要使用&lt;code>define&lt;/code>来扩展&lt;code>baseof.html&lt;/code>里的&lt;code>block&lt;/code>,不然使用的就是&lt;code>single.html&lt;/code>这个布局,而不是使用了扩展了&lt;code>baseof.html&lt;/code>布局的&lt;code>single.html&lt;/code>布局&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{ define &amp;#34;main&amp;#34; }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;red&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ .Content }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ end }}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Hugo教程#3单页面布局</title><link>https://blog.enaium.cn/post/2022-11-24-hugo%E6%95%99%E7%A8%8B%233%E5%8D%95%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/</link><pubDate>Thu, 24 Nov 2022 10:58:26 +0800</pubDate><guid>https://blog.enaium.cn/post/2022-11-24-hugo%E6%95%99%E7%A8%8B%233%E5%8D%95%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/</guid><description>&lt;h1 id="引言">引言&lt;/h1>
&lt;p>上集我们学习了如何创建一个&lt;code>index&lt;/code>的布局,那么是不是所有的页面都要创建一个布局,那肯定不是的,那样的话实在太麻烦,因为只显对应页面的&lt;code>markdown&lt;/code>里面的内容,所以创建一个&lt;code>single.html&lt;/code>布局就可以了,所有的页面都可以使用这个布局&lt;/p>
&lt;h2 id="布局">布局&lt;/h2>
&lt;p>在&lt;code>layouts/_default&lt;/code>里有一个&lt;code>single.html&lt;/code>的布局,默认是空的,我们只需要读取到&lt;code>markdown&lt;/code>的内容,之后呈现在页面中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">html&lt;/span> &lt;span style="color:#a6e22e">lang&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;en&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">charset&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">http-equiv&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;X-UA-Compatible&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">content&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;IE=edge&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">content&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">title&lt;/span>&amp;gt;{{ .Title }}&amp;lt;/&lt;span style="color:#f92672">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ .Content }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="测试">测试&lt;/h2>
&lt;p>在&lt;code>home.md&lt;/code>里面写一些内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-markdown" data-lang="markdown">&lt;span style="display:flex;">&lt;span># Home
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## Single
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>好了现在所有的页面都可以使用&lt;code>single.html&lt;/code>这个布局了&lt;/p></description></item><item><title>Hugo教程#2布局</title><link>https://blog.enaium.cn/post/2022-11-21-hugo%E6%95%99%E7%A8%8B%232%E5%B8%83%E5%B1%80/</link><pubDate>Mon, 21 Nov 2022 09:16:06 +0800</pubDate><guid>https://blog.enaium.cn/post/2022-11-21-hugo%E6%95%99%E7%A8%8B%232%E5%B8%83%E5%B1%80/</guid><description>&lt;h1 id="引言">引言&lt;/h1>
&lt;p>从本集开始,就开始和布局打交道了,所以我们需要学习Hugo的模板语法,其实也刚开始一步一步来,不需要一次学一堆&lt;/p>
&lt;p>那如何知道布局的模板是什么呢,其实hugo内置了一个功能,可以创建一个空白主题&lt;/p>
&lt;h2 id="创建主题">创建主题&lt;/h2>
&lt;p>&lt;code>hugo new theme default&lt;/code> 其中&lt;code>default&lt;/code>就是主题名&lt;/p>
&lt;p>创建好后我们发目录结构基本上和创建一个&lt;code>site&lt;/code>(页面项目)的结构一样,只不过&lt;code>layouts&lt;/code>里面有一堆html文件,这个就是默认的模板&lt;/p>
&lt;p>检查一些主题的&lt;code>theme.toml&lt;/code>文件内容,发现友好多内容,其实都是字面意思,没必要太多纠结&lt;/p>
&lt;p>再来看&lt;code>layouts&lt;/code>里的&lt;code>index.html&lt;/code>文件&lt;/p>
&lt;p>像平常写html一样写一些基本内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">html&lt;/span> &lt;span style="color:#a6e22e">lang&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;en&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">charset&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">http-equiv&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;X-UA-Compatible&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">content&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;IE=edge&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">content&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">title&lt;/span>&amp;gt;Document&amp;lt;/&lt;span style="color:#f92672">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;This is a home page&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后在项目的配置文件中使用这个主题&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">baseURL&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;http://example.org/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">languageCode&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;en-us&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">title&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;My New Hugo Site&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">baseURL&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;http://example.org/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">languageCode&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;en-us&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">title&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;My New Hugo Site&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">theme&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;default&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 添加的主题&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>项目运行后可以正常显示我们写的内容&lt;/p>
&lt;p>其实也可以直接将主题&lt;code>default&lt;/code>中的&lt;code>layouts&lt;/code>内容全部复制到&lt;code>site&lt;/code>的&lt;code>layouts&lt;/code>中&lt;/p>
&lt;pre tabindex="0">&lt;code>default
├── archetypes
│ └── default.md
├── layouts
│ ├── 404.html
│ ├── _default
│ │ ├── baseof.html
│ │ ├── list.html
│ │ └── single.html
│ ├── index.html
│ └── partials
│ ├── footer.html
│ ├── header.html
│ └── head.html
├── LICENSE
├── static
│ ├── css
│ └── js
└── theme.toml
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>.
├── archetypes
│ └── default.md
├── config.toml
├── content
│ └── home.md
├── data
├── layouts
│ ├── 404.html
│ ├── _default
│ │ ├── baseof.html
│ │ ├── list.html
│ │ └── single.html
│ ├── index.html
│ └── partials
│ ├── footer.html
│ ├── header.html
│ └── head.html
&lt;/code>&lt;/pre>&lt;p>然后删掉项目配置中的&lt;code>theme&lt;/code>和项目的&lt;code>themes&lt;/code>目录&lt;/p></description></item><item><title>Hugo教程#1配置开发环境</title><link>https://blog.enaium.cn/post/2022-11-21-hugo%E6%95%99%E7%A8%8B%231%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Mon, 21 Nov 2022 08:28:43 +0800</pubDate><guid>https://blog.enaium.cn/post/2022-11-21-hugo%E6%95%99%E7%A8%8B%231%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>&lt;h1 id="引言">引言&lt;/h1>
&lt;p>前段时间我把我的博客的生成器从&lt;code>Jekyll&lt;/code>换到了&lt;code>Gatsby&lt;/code>后来发现并不好用,又想回到&lt;code>Jekyll&lt;/code>,最后由于ruby的gem安装老是出错,所以我试了一下&lt;a href="https://gohugo.io/">Hugo&lt;/a>&lt;/p>
&lt;p>好了废话不多说,开始配置&lt;code>Hugo&lt;/code>的开发环境吧&lt;/p>
&lt;h2 id="配置环境">配置环境&lt;/h2>
&lt;h3 id="安装">安装&lt;/h3>
&lt;h4 id="linux">Linux&lt;/h4>
&lt;p>Linux用户可以直接使用包管理器安装&lt;code>apt&lt;/code>,&lt;code>yum&lt;/code>,&lt;code>dnf&lt;/code>,&lt;code>zypper&lt;/code>,&lt;code>pacman&lt;/code>等等,包名就是&lt;code>hugo&lt;/code>&lt;/p>
&lt;h4 id="windows">Windows&lt;/h4>
&lt;p>Windows用户可以在&lt;a href="https://github.com/gohugoio/hugo/releases">GitHub的release&lt;/a>下载对应的平台,hugo也支持arm64&lt;/p>
&lt;h3 id="创建项目">创建项目&lt;/h3>
&lt;p>使用命令&lt;code>hugo new site blog&lt;/code>既可在blog下创建一个hugo项目,hugo可以换成自己想在的目录下,如果想在当前目录下创建需要加上&lt;code>--force&lt;/code>参数,也就是&lt;code>hugo new site . --force&lt;/code>&lt;/p>
&lt;h3 id="目录结构">目录结构&lt;/h3>
&lt;pre tabindex="0">&lt;code>. 当前目录
├── archetypes 原型模板 使用new 文件名.md参数的时候会在content下创建一个md文件
│   └── default.md 默认模板
├── config.toml 配置文件
├── content 内容基本上所有的内容都写在这里面
├── data 数据
├── layouts 布局
├── public 生成的页面
├── static 静态资源
└── themes 主题
&lt;/code>&lt;/pre>&lt;h3 id="创建内容">创建内容&lt;/h3>
&lt;p>使用&lt;code>hugo new &lt;/code>&lt;/p>
&lt;p>默认创建项目后使用的是&lt;code>yaml&lt;/code>的写法,当然也可以使用&lt;code>json&lt;/code>和&lt;code>toml&lt;/code>的写法,如果是&lt;code>toml&lt;/code>的写法那就吧&lt;code>---&lt;/code>换成&lt;code>+++&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>---
title: &amp;#34;{{ replace .Name &amp;#34;-&amp;#34; &amp;#34; &amp;#34; | title }}&amp;#34; # 标题
date: {{ .Date }} # 日期
draft: true # 是否为草稿
---
&lt;/code>&lt;/pre>&lt;h3 id="运行项目">运行项目&lt;/h3>
&lt;p>如何运行项目呢,使用&lt;code>hugo server&lt;/code>运行&lt;code>serve&lt;/code>和&lt;code>server&lt;/code>都行&lt;/p></description></item><item><title>解决Debian网速慢问题</title><link>https://blog.enaium.cn/post/2022-10-07-%E8%A7%A3%E5%86%B3debian%E7%BD%91%E9%80%9F%E6%85%A2%E9%97%AE%E9%A2%98/</link><pubDate>Fri, 07 Oct 2022 15:12:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2022-10-07-%E8%A7%A3%E5%86%B3debian%E7%BD%91%E9%80%9F%E6%85%A2%E9%97%AE%E9%A2%98/</guid><description>&lt;p>最近在我的笔记本上换了Debian，装上驱动后发现网速很慢，后来换了Ubuntu，Ubuntu自带了网卡驱动，测试了一下网速发现网速还是很慢，只要是基于Debian的系统，或者基于Ubuntu的Mint也是慢&lt;/p>
&lt;p>后来在bing上搜了一下，在&lt;a href="https://askubuntu.com/questions/1403954/wifi-issues-in-ubuntu-22-04lts">Ubuntu的论坛&lt;/a>上找到了解决方法，其实内核5.15这个版本有问题，我升级到了5.17后发现好了点，不过网速还是慢，所以我将内核直接升级到6.0，测试了一下网速发现网速是可以跑满了&lt;/p>
&lt;p>接下来说下更新方法&lt;/p>
&lt;p>进入到Ubuntu的&lt;a href="https://kernel.ubuntu.com/~kernel-ppa/mainline">内核列表&lt;/a>里，下载找到大于当前5.15的6.0，最近6.0刚更新&lt;/p>
&lt;p>进入到6.0后最上面有4个deb文件是amd64的，其他处理器可以在下面找到，下载下来后全部安装后重启就可以了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cd ~/Downloads
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -c https://kernel.ubuntu.com/~kernel-ppa/mainline/v6.0/amd64/linux-headers-6.0.0-060000-generic_6.0.0-060000.202210022231_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -c https://kernel.ubuntu.com/~kernel-ppa/mainline/v6.0/amd64/linux-headers-6.0.0-060000_6.0.0-060000.202210022231_all.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -c https://kernel.ubuntu.com/~kernel-ppa/mainline/v6.0/amd64/linux-image-unsigned-6.0.0-060000-generic_6.0.0-060000.202210022231_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -c https://kernel.ubuntu.com/~kernel-ppa/mainline/v6.0/amd64/linux-modules-6.0.0-060000-generic_6.0.0-060000.202210022231_amd64.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg -i *.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看内核版本命令&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>uname -r
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>如何使用Gatsby创建自己的博客</title><link>https://blog.enaium.cn/post/2022-9-28%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8gatsby%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</link><pubDate>Wed, 28 Sep 2022 11:16:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2022-9-28%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8gatsby%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid><description>&lt;p>首先使用npm安装gatsby，使用gatsby –version命令可以查看是否安装&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>npm install -g gatsby-cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用new命令后面跟着目录名，即可创建一个gatsby项目&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>gatsby new website
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用develop参数即可启用gatsby服务&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>gatsby develop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>进入到8000端口后即可访问默认的页面，不过本文章是创建个人博客&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/Snipaste_2022-09-28_09-38-35.png" alt="">&lt;/p>
&lt;p>在创建项目时后面跟着一个github地址，这个是gatsby官方的一个博客模板&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>gatsby new blog https://github.com/gatsbyjs/gatsby-starter-blog 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://blog.enaium.cn/assets/Snipaste_2022-09-28_09-46-26.png" alt="">&lt;/p>
&lt;p>这个是项目的目录结构&lt;/p>
&lt;pre tabindex="0">&lt;code>C:.
├─content
│ └─blog
│ ├─hello-world
│ ├─my-second-post
│ └─new-beginnings
├─src
│ ├─components
│ ├─images
│ ├─pages
│ └─templates
└─static
&lt;/code>&lt;/pre>&lt;p>content下主要是markdown文件，但如果要被识别为blog还需要在blog里创建markdown文件&lt;/p>
&lt;p>主要看blog里都有哪些文件，每个文件夹下都有一个index.md文件，这里会根据文件夹的名称来决定地址名是什么&lt;/p>
&lt;pre tabindex="0">&lt;code>C:.
├─hello-world
│ index.md
│ salty_egg.jpg
│
├─my-second-post
│ index.md
│
└─new-beginnings
 index.md
&lt;/code>&lt;/pre>&lt;p>这里可以直接在blog中创建markdown文件，地址名就是markdown文件名&lt;/p>
&lt;p>每个markdown文件的前几行都会有用3个横杠抱起来的内容，这个就是Front-matter格式，博客的信息都会从这里获取，title是博客的标题，date是发布时间，description是描述，其中时间必须遵守正确的格式&lt;/p>
&lt;pre tabindex="0">&lt;code>---
title: &amp;#34;如何使用Gatsby创建自己的博客&amp;#34;
date: 2022-09-28T11:16:00+0800
categroy: javascript
---
&lt;/code>&lt;/pre>&lt;p>现在来介绍如何使用GitHub的pages服务，首先需要在项目下安装gh-pages&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>npm install gh-pages --save-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在项目的gatsby的config文件中添加pathPrefix，这里选择没前缀&lt;/p></description></item><item><title>Netty手写RPC框架</title><link>https://blog.enaium.cn/post/2022-3-14-netty%E6%89%8B%E5%86%99rpc%E6%A1%86%E6%9E%B6/</link><pubDate>Mon, 14 Mar 2022 14:26:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2022-3-14-netty%E6%89%8B%E5%86%99rpc%E6%A1%86%E6%9E%B6/</guid><description>&lt;p>协议就用上篇文章的协议&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Message&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Serializable {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> order;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Message&lt;/span>(&lt;span style="color:#66d9ef">long&lt;/span> order) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">order&lt;/span> &lt;span style="color:#f92672">=&lt;/span> order;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#a6e22e">getOrder&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> order;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>只不过&lt;code>Message&lt;/code>加了个&lt;code>Order&lt;/code>熟悉,&lt;/p>
&lt;p>创建&lt;code>Request&lt;/code>类,继承&lt;code>Message&lt;/code>,&lt;code>klass&lt;/code>是调用的&lt;code>Class&lt;/code>目标,&lt;code>name&lt;/code>,&lt;code>parameterType&lt;/code>,&lt;code>argument&lt;/code>分别是方法名称,参数类型,参数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Request&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Message {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> String klass;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> String name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;[]&lt;/span> parameterType;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Object&lt;span style="color:#f92672">[]&lt;/span> argument;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Request&lt;/span>(&lt;span style="color:#66d9ef">long&lt;/span> order, String klass, String name, Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;[]&lt;/span> parameterType, Object&lt;span style="color:#f92672">[]&lt;/span> argument) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(order);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">klass&lt;/span> &lt;span style="color:#f92672">=&lt;/span> klass;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">parameterType&lt;/span> &lt;span style="color:#f92672">=&lt;/span> parameterType;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">argument&lt;/span> &lt;span style="color:#f92672">=&lt;/span> argument;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getKlass&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> klass;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getName&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;[]&lt;/span> getParameterType() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> parameterType;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Object&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#a6e22e">getArgument&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> argument;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建&lt;code>Response&lt;/code>类继承&lt;code>Message&lt;/code>,&lt;code>result&lt;/code>调用的结果,&lt;code>throwable&lt;/code>调用的异常&lt;/p></description></item><item><title>Netty自定义协议</title><link>https://blog.enaium.cn/post/2022-3-12-netty%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8D%8F%E8%AE%AE/</link><pubDate>Sat, 12 Mar 2022 19:21:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2022-3-12-netty%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8D%8F%E8%AE%AE/</guid><description>&lt;p>先写一个&lt;code>Messsage&lt;/code>类,解码的时候将要把&lt;code>ByteBuf&lt;/code>解码为&lt;code>Message&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Message&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Serializable {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> String data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Message&lt;/span>(String data) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">toString&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Message{&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;data=&amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> data &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;\&amp;#39;&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;}&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后创建&lt;code>MessageCodec&lt;/code>类,继承&lt;code>MessageToMessageCodec&lt;/code>&lt;/p>
&lt;p>入站为&lt;code>ByteBuf&lt;/code>解码为&lt;code>Message&lt;/code>,出站为&lt;code>Message&lt;/code>编码为&lt;code>ByteBuf&lt;/code>&lt;/p>
&lt;p>重写编码的解码方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MessageCodec&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> MessageToMessageCodec&lt;span style="color:#f92672">&amp;lt;&lt;/span>ByteBuf, Message&lt;span style="color:#f92672">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">encode&lt;/span>(ChannelHandlerContext channelHandlerContext, Message message, List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> list) &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">decode&lt;/span>(ChannelHandlerContext channelHandlerContext, ByteBuf byteBuf, List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> list) &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里用四个字节表示内容的长度,最后是所有内容,这里使用JDK来序列化&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">encode&lt;/span>(ChannelHandlerContext channelHandlerContext, Message message, List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> list) &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ByteBuf buffer &lt;span style="color:#f92672">=&lt;/span> channelHandlerContext.&lt;span style="color:#a6e22e">alloc&lt;/span>().&lt;span style="color:#a6e22e">buffer&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ByteArrayOutputStream byteArrayOutputStream &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ByteArrayOutputStream();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ObjectOutputStream objectOutputStream &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ObjectOutputStream(byteArrayOutputStream);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> objectOutputStream.&lt;span style="color:#a6e22e">writeObject&lt;/span>(message);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> bytes &lt;span style="color:#f92672">=&lt;/span> byteArrayOutputStream.&lt;span style="color:#a6e22e">toByteArray&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buffer.&lt;span style="color:#a6e22e">writeInt&lt;/span>(bytes.&lt;span style="color:#a6e22e">length&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buffer.&lt;span style="color:#a6e22e">writeBytes&lt;/span>(bytes);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list.&lt;span style="color:#a6e22e">add&lt;/span>(buffer);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>怎么编码的就怎么解码,读取长度读取内容&lt;/p></description></item><item><title>Token+Redis登录认证</title><link>https://blog.enaium.cn/post/2022-3-10-token-redis%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81/</link><pubDate>Thu, 10 Mar 2022 19:17:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2022-3-10-token-redis%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81/</guid><description>&lt;p>首先需要了解一下大概的步骤&lt;/p>
&lt;ol>
&lt;li>登录生成一个Token存入Redis有效期为30分钟,返回到前端&lt;/li>
&lt;li>之后前端每次请求,带上登录时返回的Token&lt;/li>
&lt;li>服务器判断前端带来的Token是否在Redis服务器中&lt;/li>
&lt;li>存在放行并且重置Token有效期,不存在拦截&lt;/li>
&lt;/ol>
&lt;p>一个简简单单的登录请求&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@RequestMapping&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/login&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@ResponseBody&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> Result&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">login&lt;/span>(&lt;span style="color:#a6e22e">@RequestBody&lt;/span> UserDTO userDTO) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> byUsernameAndPassword &lt;span style="color:#f92672">=&lt;/span> mapper.&lt;span style="color:#a6e22e">getByUsernameAndPassword&lt;/span>(userDTO.&lt;span style="color:#a6e22e">getUsername&lt;/span>(), userDTO.&lt;span style="color:#a6e22e">getPassword&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (byUsernameAndPassword &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Result&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;login success&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Result&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>(&lt;span style="color:#66d9ef">false&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;wrong username or password&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>生成一个UUID存入Redis,值为用户的ID,并且设置有效期为30分钟&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> uuid &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user-token:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> UUID.&lt;span style="color:#a6e22e">randomUUID&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> redisTemplate.&lt;span style="color:#a6e22e">opsForValue&lt;/span>().&lt;span style="color:#a6e22e">set&lt;/span>(uuid, byUsernameAndPassword.&lt;span style="color:#a6e22e">getId&lt;/span>().&lt;span style="color:#a6e22e">toString&lt;/span>(), 30, TimeUnit.&lt;span style="color:#a6e22e">MINUTES&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Result&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>, uuid);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来直写拦截器,重写addInterceptors方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">RequestInterceptor&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> WebMvcConfigurer {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">addInterceptors&lt;/span>(InterceptorRegistry registry) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>HandlerInterceptor&lt;/code>重写preHandle方法,登录和注册不用拦截&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>registry.&lt;span style="color:#a6e22e">addInterceptor&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> HandlerInterceptor() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">preHandle&lt;/span>(HttpServletRequest request, HttpServletResponse response, Object handler) &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}).&lt;span style="color:#a6e22e">excludePathPatterns&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/user/login&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;/user/register&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>前端在请求头中放入Token,之后从请求头中获取Token,从Redis中获取token是否存在,存在返回为true并且重新设置有效期,不存在就返回false设置响应状态为401&lt;/p></description></item><item><title>实现JPanel切换</title><link>https://blog.enaium.cn/post/2022-2-28-%E5%AE%9E%E7%8E%B0jpanel%E5%88%87%E6%8D%A2/</link><pubDate>Mon, 28 Feb 2022 17:13:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2022-2-28-%E5%AE%9E%E7%8E%B0jpanel%E5%88%87%E6%8D%A2/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JFrame jFrame &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> JFrame(&lt;span style="color:#e6db74">&amp;#34;Test&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jFrame.&lt;span style="color:#a6e22e">setSize&lt;/span>(500, 500);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jFrame.&lt;span style="color:#a6e22e">setLocationRelativeTo&lt;/span>(jFrame.&lt;span style="color:#a6e22e">getOwner&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jFrame.&lt;span style="color:#a6e22e">setDefaultCloseOperation&lt;/span>(JFrame.&lt;span style="color:#a6e22e">EXIT_ON_CLOSE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jFrame.&lt;span style="color:#a6e22e">setLayout&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> BorderLayout());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> jPanel &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> JPanel(&lt;span style="color:#66d9ef">new&lt;/span> BorderLayout());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jFrame.&lt;span style="color:#a6e22e">add&lt;/span>(jPanel, BorderLayout.&lt;span style="color:#a6e22e">CENTER&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AtomicBoolean b &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> AtomicBoolean(&lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jFrame.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> JButton(&lt;span style="color:#e6db74">&amp;#34;Switch&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> addActionListener(e &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> b.&lt;span style="color:#a6e22e">set&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>b.&lt;span style="color:#a6e22e">get&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jPanel.&lt;span style="color:#a6e22e">removeAll&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jPanel.&lt;span style="color:#a6e22e">repaint&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jPanel.&lt;span style="color:#a6e22e">revalidate&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jPanel.&lt;span style="color:#a6e22e">add&lt;/span>(b.&lt;span style="color:#a6e22e">get&lt;/span>() &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> JPanel() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">paintComponent&lt;/span>(Graphics g) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setBackground(Color.&lt;span style="color:#a6e22e">RED&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">paintComponent&lt;/span>(g);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } : &lt;span style="color:#66d9ef">new&lt;/span> JPanel() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">paintComponent&lt;/span>(Graphics g) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setBackground(Color.&lt;span style="color:#a6e22e">GREEN&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">paintComponent&lt;/span>(g);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jPanel.&lt;span style="color:#a6e22e">repaint&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jPanel.&lt;span style="color:#a6e22e">revalidate&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, BorderLayout.&lt;span style="color:#a6e22e">SOUTH&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jFrame.&lt;span style="color:#a6e22e">setVisible&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>主要就是这几行&lt;/p></description></item><item><title>Minecraft模组加载器开发教程#1基本介绍</title><link>https://blog.enaium.cn/post/2022-1-21-minecraft%E6%A8%A1%E7%BB%84%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%231%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</link><pubDate>Fri, 21 Jan 2022 12:23:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2022-1-21-minecraft%E6%A8%A1%E7%BB%84%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%231%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</guid><description>&lt;p>学习之前，应该先了解一下这些东西&lt;/p>
&lt;p>一、	什么是模组加载器&lt;/p>
&lt;p>二、	他们是如何修改Minecraft的&lt;/p>
&lt;p>三、	修改Minecraft的原理是什么&lt;/p>
&lt;p>四、	什么是混淆&lt;/p>
&lt;p>五、	如何修改Minecraft&lt;/p>
&lt;p>1．	类似于Fabric、Forge，等等，这些都是模组加载器&lt;/p>
&lt;p>2．	他们都会通过重新设置类加载器，而重新加载所有类，除了java.lang，java.xxx 之类的核心类，因为java不允许这些类重新加载，当然也可以通过bootclasspath来强制修改java核心类，这些都是后话了, 我们可以使用Mojang官方的LegacyLauncher，这个依赖来在运行的时候重新加载，但年代太久没更新，已经不支持Java9以上的版本，不过修复它也很简单&lt;/p>
&lt;p>3．	当类被重新加载的时候，有一个过程，会将二进制文件读取，在读取后我们可以对它进行修改，可以通过ASM等框架，或者基于ASM框架的Mixin框架，之前我制作过这些ASM和Mixin的基础视频&lt;/p>
&lt;p>4．	混淆就是把一个类名或者其他可见名，改为不能分辨的名字，比如一个Minecraft类，混淆之后会变成abc这个名字，并且所有的包名都会被去掉， Minecraft原版Jar文件都是混淆后的，只有类名、方法名、字段名被混淆了，再加上近几年官方都在放出每个版本的混淆映射，我们可以通过映射来返混淆，映射就是把每个混淆的名字，告诉你它之前是什么名字，Mojang不允许我们把反混淆后的源码放出来，所以一些客户端比如LiquidBounce使用Forge以Mod的形式来修改客户端&lt;/p>
&lt;p>5．	我们可以先把Jar反混淆，之后我们依赖这个类，这样我们就可以正常依赖这个Jar，之后在用官方给的映射列表把写好的东西给重新混淆，这仅仅是不行的，我们还需要修改Java类，使用ASM或者Mixin，比如需要在游戏的onUpdate等方法里插入调用，来实现事件Event，这些操作都需要Gradle来完成，可以写一个Gradle插件来帮我们完成这些操作，比如在编译之后打包Jar之前，我们就可以对这些类重新混淆&lt;/p></description></item><item><title>Netty Http服务器接收请求</title><link>https://blog.enaium.cn/post/2021-7-19-netty-http%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82/</link><pubDate>Mon, 19 Jul 2021 15:38:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-7-19-netty-http%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> EventLoopGroup eventLoopGroup &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> NioEventLoopGroup();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ServerBootstrap serverBootstrap &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ServerBootstrap();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> serverBootstrap.&lt;span style="color:#a6e22e">group&lt;/span>(eventLoopGroup).&lt;span style="color:#a6e22e">channel&lt;/span>(NioServerSocketChannel.&lt;span style="color:#a6e22e">class&lt;/span>).&lt;span style="color:#a6e22e">childHandler&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> ChannelInitializer&lt;span style="color:#f92672">&amp;lt;&lt;/span>SocketChannel&lt;span style="color:#f92672">&amp;gt;&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">initChannel&lt;/span>(SocketChannel ch) &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ch.&lt;span style="color:#a6e22e">pipeline&lt;/span>().&lt;span style="color:#a6e22e">addLast&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> HttpRequestDecoder());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ch.&lt;span style="color:#a6e22e">pipeline&lt;/span>().&lt;span style="color:#a6e22e">addLast&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> HttpResponseEncoder());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ch.&lt;span style="color:#a6e22e">pipeline&lt;/span>().&lt;span style="color:#a6e22e">addLast&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> HttpObjectAggregator(65535));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ch.&lt;span style="color:#a6e22e">pipeline&lt;/span>().&lt;span style="color:#a6e22e">addLast&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> SimpleChannelInboundHandler&lt;span style="color:#f92672">&amp;lt;&lt;/span>FullHttpRequest&lt;span style="color:#f92672">&amp;gt;&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">channelRead0&lt;/span>(ChannelHandlerContext ctx, FullHttpRequest msg) &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ByteBuf byteBuf &lt;span style="color:#f92672">=&lt;/span> Unpooled.&lt;span style="color:#a6e22e">wrappedBuffer&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello world!&amp;#34;&lt;/span>.&lt;span style="color:#a6e22e">getBytes&lt;/span>(StandardCharsets.&lt;span style="color:#a6e22e">UTF_8&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FullHttpResponse fullHttpResponse &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> DefaultFullHttpResponse(HttpVersion.&lt;span style="color:#a6e22e">HTTP_1_1&lt;/span>, HttpResponseStatus.&lt;span style="color:#a6e22e">OK&lt;/span>, byteBuf);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fullHttpResponse.&lt;span style="color:#a6e22e">headers&lt;/span>().&lt;span style="color:#a6e22e">set&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Content-Type&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;text/plain;charset=UTF-8&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fullHttpResponse.&lt;span style="color:#a6e22e">headers&lt;/span>().&lt;span style="color:#a6e22e">set&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Content-Length&amp;#34;&lt;/span>, byteBuf.&lt;span style="color:#a6e22e">readableBytes&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ctx.&lt;span style="color:#a6e22e">writeAndFlush&lt;/span>(fullHttpResponse).&lt;span style="color:#a6e22e">addListener&lt;/span>(ChannelFutureListener.&lt;span style="color:#a6e22e">CLOSE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }).&lt;span style="color:#a6e22e">bind&lt;/span>(8080).&lt;span style="color:#a6e22e">sync&lt;/span>().&lt;span style="color:#a6e22e">channel&lt;/span>().&lt;span style="color:#a6e22e">closeFuture&lt;/span>().&lt;span style="color:#a6e22e">sync&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (InterruptedException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eventLoopGroup.&lt;span style="color:#a6e22e">shutdownGracefully&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Java实现Autowired自动注入</title><link>https://blog.enaium.cn/post/2021-7-16-java%E5%AE%9E%E7%8E%B0autowired%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%85%A5/</link><pubDate>Fri, 16 Jul 2021 21:22:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-7-16-java%E5%AE%9E%E7%8E%B0autowired%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%85%A5/</guid><description>&lt;p>继续使用上个文章的类容器&lt;/p>
&lt;p>创建一个注解&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Target&lt;/span>(ElementType.&lt;span style="color:#a6e22e">FIELD&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Retention&lt;/span>(RetentionPolicy.&lt;span style="color:#a6e22e">RUNTIME&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">@interface&lt;/span> Autowired {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>遍历所有字段包括私有的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">autowired&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (Map.&lt;span style="color:#a6e22e">Entry&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span>, Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> classObjectEntry : classes.&lt;span style="color:#a6e22e">entrySet&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (Field declaredField : classObjectEntry.&lt;span style="color:#a6e22e">getKey&lt;/span>().&lt;span style="color:#a6e22e">getDeclaredFields&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> declaredField.&lt;span style="color:#a6e22e">setAccessible&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (classes.&lt;span style="color:#a6e22e">get&lt;/span>(declaredField.&lt;span style="color:#a6e22e">getType&lt;/span>()) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {&lt;span style="color:#75715e">//容器内是否有这个类的对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//赋值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> declaredField.&lt;span style="color:#a6e22e">set&lt;/span>(classObjectEntry.&lt;span style="color:#a6e22e">getValue&lt;/span>(), classes.&lt;span style="color:#a6e22e">get&lt;/span>(declaredField.&lt;span style="color:#a6e22e">getType&lt;/span>()));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (IllegalAccessException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在加入到容器后就调用autowired&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">ClassContainer&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&amp;gt;&lt;/span> scanClasses &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArrayList&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>(List.&lt;span style="color:#a6e22e">of&lt;/span>(Test1.&lt;span style="color:#a6e22e">class&lt;/span>, Test2.&lt;span style="color:#a6e22e">class&lt;/span>));&lt;span style="color:#75715e">//注意这里Test2也被加入到了容器里&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scanClasses.&lt;span style="color:#a6e22e">forEach&lt;/span>(it &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classes.&lt;span style="color:#a6e22e">put&lt;/span>(it, it.&lt;span style="color:#a6e22e">getConstructor&lt;/span>().&lt;span style="color:#a6e22e">newInstance&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (InstantiationException &lt;span style="color:#f92672">|&lt;/span> IllegalAccessException &lt;span style="color:#f92672">|&lt;/span> NoSuchMethodException &lt;span style="color:#f92672">|&lt;/span> InvocationTargetException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> autowired();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> T &lt;span style="color:#a6e22e">create&lt;/span>(Class&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> klass, Object instance) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classes.&lt;span style="color:#a6e22e">put&lt;/span>(klass, instance);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> autowired();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (T) classes.&lt;span style="color:#a6e22e">get&lt;/span>(klass);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建Test3&lt;/p></description></item><item><title>Java 实现一个类容器</title><link>https://blog.enaium.cn/post/2021-7-16-java%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%AE%B9%E5%99%A8/</link><pubDate>Fri, 16 Jul 2021 20:42:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-7-16-java%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%AE%B9%E5%99%A8/</guid><description>&lt;p>新建2个类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Test1&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Test2&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">render&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Test2&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ClassContainer&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&lt;/span>Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span>, Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> classes &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">ClassContainer&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&amp;gt;&lt;/span> scanClasses &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArrayList&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>(List.&lt;span style="color:#a6e22e">of&lt;/span>(Test1.&lt;span style="color:#a6e22e">class&lt;/span>));&lt;span style="color:#75715e">//被扫描到的类 上个文章介绍了如何遍历类路径所有类&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scanClasses.&lt;span style="color:#a6e22e">forEach&lt;/span>(it &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classes.&lt;span style="color:#a6e22e">put&lt;/span>(it, it.&lt;span style="color:#a6e22e">getConstructor&lt;/span>().&lt;span style="color:#a6e22e">newInstance&lt;/span>());&lt;span style="color:#75715e">//创建对象 直接newInstance的方法被弃用 所以需要获取无参构造方法再创建对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (InstantiationException &lt;span style="color:#f92672">|&lt;/span> IllegalAccessException &lt;span style="color:#f92672">|&lt;/span> NoSuchMethodException &lt;span style="color:#f92672">|&lt;/span> InvocationTargetException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> T &lt;span style="color:#a6e22e">create&lt;/span>(Class&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> klass, Object instance) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classes.&lt;span style="color:#a6e22e">put&lt;/span>(klass, instance);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (T) classes.&lt;span style="color:#a6e22e">get&lt;/span>(klass);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> T &lt;span style="color:#a6e22e">create&lt;/span>(Class&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> klass) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (classes.&lt;span style="color:#a6e22e">get&lt;/span>(klass) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {&lt;span style="color:#75715e">//如果这类没对象的话就创建&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classes.&lt;span style="color:#a6e22e">put&lt;/span>(klass, klass.&lt;span style="color:#a6e22e">getConstructor&lt;/span>().&lt;span style="color:#a6e22e">newInstance&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (InstantiationException &lt;span style="color:#f92672">|&lt;/span> IllegalAccessException &lt;span style="color:#f92672">|&lt;/span> InvocationTargetException &lt;span style="color:#f92672">|&lt;/span> NoSuchMethodException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (T) classes.&lt;span style="color:#a6e22e">get&lt;/span>(klass);&lt;span style="color:#75715e">//返回对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&lt;/span>Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span>, Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">getClasses&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> classes;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>测试一下&lt;/p></description></item><item><title>Java遍历类路径所有类</title><link>https://blog.enaium.cn/post/2021-7-16-java%E9%81%8D%E5%8E%86%E7%B1%BB%E8%B7%AF%E5%BE%84%E6%89%80%E6%9C%89%E7%B1%BB/</link><pubDate>Fri, 16 Jul 2021 09:58:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-7-16-java%E9%81%8D%E5%8E%86%E7%B1%BB%E8%B7%AF%E5%BE%84%E6%89%80%E6%9C%89%E7%B1%BB/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">WalkClasspathAllClasses&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) &lt;span style="color:#66d9ef">throws&lt;/span> URISyntaxException, IOException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>URL&lt;span style="color:#f92672">&amp;gt;&lt;/span> urls &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArrayList&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//获取Classpath&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (WalkClasspathAllClasses.&lt;span style="color:#a6e22e">class&lt;/span>.&lt;span style="color:#a6e22e">getClassLoader&lt;/span>() &lt;span style="color:#66d9ef">instanceof&lt;/span> URLClassLoader) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Collections.&lt;span style="color:#a6e22e">addAll&lt;/span>(urls, ((URLClassLoader) WalkClasspathAllClasses.&lt;span style="color:#a6e22e">class&lt;/span>.&lt;span style="color:#a6e22e">getClassLoader&lt;/span>()).&lt;span style="color:#a6e22e">getURLs&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (String s : System.&lt;span style="color:#a6e22e">getProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;java.class.path&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">split&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;;&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> urls.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> File(s).&lt;span style="color:#a6e22e">toURI&lt;/span>().&lt;span style="color:#a6e22e">toURL&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//遍历所有类&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> walkAllClasses(urls).&lt;span style="color:#a6e22e">forEach&lt;/span>(System.&lt;span style="color:#a6e22e">out&lt;/span>::println);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Set&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">walkAllClasses&lt;/span>(List&lt;span style="color:#f92672">&amp;lt;&lt;/span>URL&lt;span style="color:#f92672">&amp;gt;&lt;/span> urls) &lt;span style="color:#66d9ef">throws&lt;/span> URISyntaxException, IOException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> classes &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HashSet&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (URL url : urls) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (url.&lt;span style="color:#a6e22e">toURI&lt;/span>().&lt;span style="color:#a6e22e">getScheme&lt;/span>().&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;file&amp;#34;&lt;/span>)) {&lt;span style="color:#75715e">//判断Scheme是不是file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(url.&lt;span style="color:#a6e22e">toURI&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>file.&lt;span style="color:#a6e22e">exists&lt;/span>()) &lt;span style="color:#66d9ef">continue&lt;/span>;&lt;span style="color:#75715e">//是存在&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (file.&lt;span style="color:#a6e22e">isDirectory&lt;/span>()) {&lt;span style="color:#75715e">//如果是目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Files.&lt;span style="color:#a6e22e">walkFileTree&lt;/span>(file.&lt;span style="color:#a6e22e">toPath&lt;/span>(), &lt;span style="color:#66d9ef">new&lt;/span> SimpleFileVisitor&lt;span style="color:#f92672">&amp;lt;&lt;/span>Path&lt;span style="color:#f92672">&amp;gt;&lt;/span>() {&lt;span style="color:#75715e">//遍历所有文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> FileVisitResult &lt;span style="color:#a6e22e">visitFile&lt;/span>(Path path, BasicFileAttributes attrs) &lt;span style="color:#66d9ef">throws&lt;/span> IOException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (path.&lt;span style="color:#a6e22e">toFile&lt;/span>().&lt;span style="color:#a6e22e">getName&lt;/span>().&lt;span style="color:#a6e22e">endsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;.class&amp;#34;&lt;/span>)) {&lt;span style="color:#75715e">//判断是否为class后缀&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//去除路径截取包名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String substring &lt;span style="color:#f92672">=&lt;/span> path.&lt;span style="color:#a6e22e">toFile&lt;/span>().&lt;span style="color:#a6e22e">getAbsolutePath&lt;/span>().&lt;span style="color:#a6e22e">substring&lt;/span>(file.&lt;span style="color:#a6e22e">getAbsolutePath&lt;/span>().&lt;span style="color:#a6e22e">length&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (substring.&lt;span style="color:#a6e22e">startsWith&lt;/span>(File.&lt;span style="color:#a6e22e">separator&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> substring &lt;span style="color:#f92672">=&lt;/span> substring.&lt;span style="color:#a6e22e">substring&lt;/span>(1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> substring &lt;span style="color:#f92672">=&lt;/span> substring.&lt;span style="color:#a6e22e">substring&lt;/span>(0, substring.&lt;span style="color:#a6e22e">length&lt;/span>() &lt;span style="color:#f92672">-&lt;/span> 6);&lt;span style="color:#75715e">//去掉后缀&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classes.&lt;span style="color:#a6e22e">add&lt;/span>(substring.&lt;span style="color:#a6e22e">replace&lt;/span>(File.&lt;span style="color:#a6e22e">separator&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>));&lt;span style="color:#75715e">//把路径替换为.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">visitFile&lt;/span>(path, attrs);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (file.&lt;span style="color:#a6e22e">getName&lt;/span>().&lt;span style="color:#a6e22e">endsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;.jar&amp;#34;&lt;/span>)) {&lt;span style="color:#75715e">//如果是jar包&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JarFile jarFile &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> JarFile(file);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Enumeration&lt;span style="color:#f92672">&amp;lt;&lt;/span>JarEntry&lt;span style="color:#f92672">&amp;gt;&lt;/span> entries &lt;span style="color:#f92672">=&lt;/span> jarFile.&lt;span style="color:#a6e22e">entries&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (entries.&lt;span style="color:#a6e22e">hasMoreElements&lt;/span>()) {&lt;span style="color:#75715e">//遍历所有文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JarEntry jarEntry &lt;span style="color:#f92672">=&lt;/span> entries.&lt;span style="color:#a6e22e">nextElement&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>jarEntry.&lt;span style="color:#a6e22e">getName&lt;/span>().&lt;span style="color:#a6e22e">endsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;.class&amp;#34;&lt;/span>)) &lt;span style="color:#66d9ef">continue&lt;/span>;&lt;span style="color:#75715e">//判断后缀是否为class&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String replace &lt;span style="color:#f92672">=&lt;/span> jarEntry.&lt;span style="color:#a6e22e">getName&lt;/span>().&lt;span style="color:#a6e22e">replace&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//把路径替换为.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classes.&lt;span style="color:#a6e22e">add&lt;/span>(replace.&lt;span style="color:#a6e22e">substring&lt;/span>(0, replace.&lt;span style="color:#a6e22e">length&lt;/span>() &lt;span style="color:#f92672">-&lt;/span> 6));&lt;span style="color:#75715e">//去掉后缀&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> classes;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Minecraft启动器开发#7正版登录</title><link>https://blog.enaium.cn/post/2021-5-16-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%237%E6%AD%A3%E7%89%88%E7%99%BB%E5%BD%95/</link><pubDate>Sun, 16 May 2021 21:43:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-5-16-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%237%E6%AD%A3%E7%89%88%E7%99%BB%E5%BD%95/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> String &lt;span style="color:#a6e22e">doPost&lt;/span>(URL url, String post) &lt;span style="color:#66d9ef">throws&lt;/span> IOException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> bytes &lt;span style="color:#f92672">=&lt;/span> post.&lt;span style="color:#a6e22e">getBytes&lt;/span>(StandardCharsets.&lt;span style="color:#a6e22e">UTF_8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpURLConnection con &lt;span style="color:#f92672">=&lt;/span> (HttpURLConnection) url.&lt;span style="color:#a6e22e">openConnection&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> con.&lt;span style="color:#a6e22e">setRequestMethod&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;POST&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> con.&lt;span style="color:#a6e22e">setDoOutput&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> con.&lt;span style="color:#a6e22e">setRequestProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Content-Type&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;application/json; charset=utf-8&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> con.&lt;span style="color:#a6e22e">setRequestProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Content-Length&amp;#34;&lt;/span>, String.&lt;span style="color:#a6e22e">valueOf&lt;/span>(bytes.&lt;span style="color:#a6e22e">length&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IOUtils.&lt;span style="color:#a6e22e">write&lt;/span>(bytes, con.&lt;span style="color:#a6e22e">getOutputStream&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> IOUtils.&lt;span style="color:#a6e22e">toString&lt;/span>(con.&lt;span style="color:#a6e22e">getInputStream&lt;/span>(), StandardCharsets.&lt;span style="color:#a6e22e">UTF_8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>发送post请求&lt;/p>
&lt;p>请求地址&lt;code>https://authserver.mojang.com/authenticate&lt;/code>&lt;/p>
&lt;p>类型为&lt;code>application/json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;agent&amp;#34;&lt;/span>: { &lt;span style="color:#75715e">// defaults to Minecraft
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Minecraft&amp;#34;&lt;/span>, &lt;span style="color:#75715e">// For Mojang&amp;#39;s other game Scrolls, &amp;#34;Scrolls&amp;#34; should be used
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e">// This number might be increased
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// by the vanilla client in the future
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;username&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;mojang account name&amp;#34;&lt;/span>, &lt;span style="color:#75715e">// Can be an email address or player name for
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// unmigrated accounts
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;password&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;mojang account password&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;clientToken&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;client identifier&amp;#34;&lt;/span>, &lt;span style="color:#75715e">// optional
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;requestUser&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span> &lt;span style="color:#75715e">// optional; default: false; true adds the user object to the response
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参数&lt;/p></description></item><item><title>Minecraft启动器开发#6下载Native</title><link>https://blog.enaium.cn/post/2021-5-16-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%236%E4%B8%8B%E8%BD%BDnative/</link><pubDate>Sun, 16 May 2021 13:49:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-5-16-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%236%E4%B8%8B%E8%BD%BDnative/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (downloads.&lt;span style="color:#a6e22e">has&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;classifiers&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> classifiers &lt;span style="color:#f92672">=&lt;/span> downloads.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;classifiers&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> nativeName &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;natives-linux&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> osName &lt;span style="color:#f92672">=&lt;/span> System.&lt;span style="color:#a6e22e">getProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;os.name&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">toLowerCase&lt;/span>(Locale.&lt;span style="color:#a6e22e">ROOT&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (osName.&lt;span style="color:#a6e22e">contains&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;win&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nativeName &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;natives-windows&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>classifiers.&lt;span style="color:#a6e22e">has&lt;/span>(nativeName)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nativeName &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;natives-windows-64&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (osName.&lt;span style="color:#a6e22e">contains&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;mac&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nativeName &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;natives-osx&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>classifiers.&lt;span style="color:#a6e22e">has&lt;/span>(nativeName)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nativeName &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;natives-macos&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>classifiers.&lt;span style="color:#a6e22e">has&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;nativeName&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(libraryDir, classifiers.&lt;span style="color:#a6e22e">get&lt;/span>(nativeName).&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>().&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;path&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> url &lt;span style="color:#f92672">=&lt;/span> classifiers.&lt;span style="color:#a6e22e">get&lt;/span>(nativeName).&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>().&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsString&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>path.&lt;span style="color:#a6e22e">exists&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FileUtils.&lt;span style="color:#a6e22e">writeByteArrayToFile&lt;/span>(path, IOUtils.&lt;span style="color:#a6e22e">toByteArray&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> URL(url)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下载库的时候下载Native，&lt;code>osx&lt;/code>在以后的版本会变成&lt;code>macos&lt;/code>需要再次判断，windows还需要判断系统架构&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>path.&lt;span style="color:#a6e22e">exists&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FileUtils.&lt;span style="color:#a6e22e">writeByteArrayToFile&lt;/span>(path, IOUtils.&lt;span style="color:#a6e22e">toByteArray&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> URL(url)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> jarFile &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> JarFile(path);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> entries &lt;span style="color:#f92672">=&lt;/span> jarFile.&lt;span style="color:#a6e22e">entries&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (entries.&lt;span style="color:#a6e22e">hasMoreElements&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> jarEntry &lt;span style="color:#f92672">=&lt;/span> entries.&lt;span style="color:#a6e22e">nextElement&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (jarEntry.&lt;span style="color:#a6e22e">isDirectory&lt;/span>() &lt;span style="color:#f92672">||&lt;/span> jarEntry.&lt;span style="color:#a6e22e">getName&lt;/span>().&lt;span style="color:#a6e22e">contains&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;META-INF&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> inputStream &lt;span style="color:#f92672">=&lt;/span> jarFile.&lt;span style="color:#a6e22e">getInputStream&lt;/span>(jarEntry);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FileUtils.&lt;span style="color:#a6e22e">writeByteArrayToFile&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> File(nativeDir, jarEntry.&lt;span style="color:#a6e22e">getName&lt;/span>()), IOUtils.&lt;span style="color:#a6e22e">toByteArray&lt;/span>(inputStream));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inputStream.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jarFile.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果文件存在就读取，然后解压&lt;/p></description></item><item><title>Minecraft启动器开发#5下载资源</title><link>https://blog.enaium.cn/post/2021-5-16-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%235%E4%B8%8B%E8%BD%BD%E8%B5%84%E6%BA%90/</link><pubDate>Sun, 16 May 2021 11:16:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-5-16-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%235%E4%B8%8B%E8%BD%BD%E8%B5%84%E6%BA%90/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> assetsDir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(gameDir, &lt;span style="color:#e6db74">&amp;#34;assets&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将资源目录改为&lt;code>.minecraft&lt;/code>的assets目录&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> indexDir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(assetsDir, &lt;span style="color:#e6db74">&amp;#34;indexes&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>indexDir.&lt;span style="color:#a6e22e">exists&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> indexDir.&lt;span style="color:#a6e22e">mkdir&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> objectDir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(assetsDir, &lt;span style="color:#e6db74">&amp;#34;objects&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>objectDir.&lt;span style="color:#a6e22e">exists&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> objectDir.&lt;span style="color:#a6e22e">mkdir&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建&lt;code>indexes&lt;/code>和&lt;code>objects&lt;/code>目录&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">AssetObject&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> String hash;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> size;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">AssetObject&lt;/span>(String hash, &lt;span style="color:#66d9ef">long&lt;/span> size) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">hash&lt;/span> &lt;span style="color:#f92672">=&lt;/span> hash;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">size&lt;/span> &lt;span style="color:#f92672">=&lt;/span> size;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getHash&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> hash;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#a6e22e">getSize&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> size;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建&lt;code>AssetObject&lt;/code>类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> indexContent &lt;span style="color:#f92672">=&lt;/span> IOUtils.&lt;span style="color:#a6e22e">toString&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> URL(gameJson.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;assetIndex&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>().&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsString&lt;/span>()), StandardCharsets.&lt;span style="color:#a6e22e">UTF_8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> indexObject &lt;span style="color:#f92672">=&lt;/span> gson.&lt;span style="color:#a6e22e">fromJson&lt;/span>(indexContent, JsonObject.&lt;span style="color:#a6e22e">class&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> (Map.&lt;span style="color:#a6e22e">Entry&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, JsonElement&lt;span style="color:#f92672">&amp;gt;&lt;/span> objects : indexObject.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;objects&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>().&lt;span style="color:#a6e22e">entrySet&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> assetObject &lt;span style="color:#f92672">=&lt;/span> gson.&lt;span style="color:#a6e22e">fromJson&lt;/span>(objects.&lt;span style="color:#a6e22e">getValue&lt;/span>(), AssetObject.&lt;span style="color:#a6e22e">class&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> objectIndexDir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(objectDir, assetObject.&lt;span style="color:#a6e22e">getHash&lt;/span>().&lt;span style="color:#a6e22e">substring&lt;/span>(0, 2));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>objectIndexDir.&lt;span style="color:#a6e22e">exists&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> objectIndexDir.&lt;span style="color:#a6e22e">mkdir&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> objectIndexFile &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(objectIndexDir, assetObject.&lt;span style="color:#a6e22e">getHash&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>objectIndexFile.&lt;span style="color:#a6e22e">exists&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FileUtils.&lt;span style="color:#a6e22e">writeByteArrayToFile&lt;/span>(objectIndexFile, IOUtils.&lt;span style="color:#a6e22e">toByteArray&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> URL(&lt;span style="color:#e6db74">&amp;#34;https://resources.download.minecraft.net/&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> assetObject.&lt;span style="color:#a6e22e">getHash&lt;/span>().&lt;span style="color:#a6e22e">substring&lt;/span>(0, 2) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> assetObject.&lt;span style="color:#a6e22e">getHash&lt;/span>())));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>遍历出所有资源，下载，路径hash前两位/hash全部，连接为&lt;code>https://resources.download.minecraft.net/&lt;/code>&lt;/p></description></item><item><title>Minecraft启动器开发#4下载库</title><link>https://blog.enaium.cn/post/2021-5-15-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%234%E4%B8%8B%E8%BD%BD%E5%BA%93/</link><pubDate>Sat, 15 May 2021 19:49:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-5-15-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%234%E4%B8%8B%E8%BD%BD%E5%BA%93/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> libraryDir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(gameDir,&lt;span style="color:#e6db74">&amp;#34;libraries&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置库的路径&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> (JsonElement jsonElement : gameJson.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;libraries&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsJsonArray&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> downloads &lt;span style="color:#f92672">=&lt;/span> jsonElement.&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>().&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;downloads&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (downloads.&lt;span style="color:#a6e22e">has&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;artifact&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> artifact &lt;span style="color:#f92672">=&lt;/span> downloads.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;artifact&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(libraryDir, artifact.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;path&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>path.&lt;span style="color:#a6e22e">exists&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FileUtils.&lt;span style="color:#a6e22e">writeByteArrayToFile&lt;/span>(path,IOUtils.&lt;span style="color:#a6e22e">toByteArray&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> URL(artifact.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsString&lt;/span>())));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>遍历出所有库 获取url下载到指定路径&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> libraryDir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(gameDir,&lt;span style="color:#e6db74">&amp;#34;libraries&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> (JsonElement jsonElement : gameJson.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;libraries&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsJsonArray&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> downloads &lt;span style="color:#f92672">=&lt;/span> jsonElement.&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>().&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;downloads&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (downloads.&lt;span style="color:#a6e22e">has&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;artifact&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> artifact &lt;span style="color:#f92672">=&lt;/span> downloads.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;artifact&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(libraryDir, artifact.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;path&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> libraries.&lt;span style="color:#a6e22e">append&lt;/span>(path).&lt;span style="color:#a6e22e">append&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>path.&lt;span style="color:#a6e22e">exists&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FileUtils.&lt;span style="color:#a6e22e">writeByteArrayToFile&lt;/span>(path,IOUtils.&lt;span style="color:#a6e22e">toByteArray&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> URL(artifact.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsString&lt;/span>())));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libraries.&lt;span style="color:#a6e22e">append&lt;/span>(gameJarFile);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加到classpath中用&lt;code>;&lt;/code>分号隔开，最后再把游戏的Jar文件添加进去&lt;/p></description></item><item><title>Minecraft启动器开发#3下载游戏</title><link>https://blog.enaium.cn/post/2021-5-15-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%233%E4%B8%8B%E8%BD%BD%E6%B8%B8%E6%88%8F/</link><pubDate>Sat, 15 May 2021 16:31:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-5-15-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%233%E4%B8%8B%E8%BD%BD%E6%B8%B8%E6%88%8F/</guid><description>&lt;p>&lt;code>gameVersion&lt;/code>改为&lt;code>titleVersion &lt;/code>&lt;/p>
&lt;p>&lt;code>var gameVersion = &amp;quot;1.8.9&amp;quot;;&lt;/code>声明变量，指定游戏版本&lt;/p>
&lt;p>引入&lt;code>commons-io&lt;/code>和&lt;code>gson&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>commons-io&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>commons-io&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.8.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.google.code.gson&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>gson&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.8.6&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>读取游戏列表访问&lt;code>https://launchermeta.mojang.com/mc/game/version_manifest_v2.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> gson &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Gson();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> gameListJson &lt;span style="color:#f92672">=&lt;/span> IOUtils.&lt;span style="color:#a6e22e">toString&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> URL(&lt;span style="color:#e6db74">&amp;#34;https://launchermeta.mojang.com/mc/game/version_manifest_v2.json&amp;#34;&lt;/span>), StandardCharsets.&lt;span style="color:#a6e22e">UTF_8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> gameList &lt;span style="color:#f92672">=&lt;/span> gson.&lt;span style="color:#a6e22e">fromJson&lt;/span>(gameListJson, JsonObject.&lt;span style="color:#a6e22e">class&lt;/span>).&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;versions&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsJsonArray&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> gameJsonURL &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (JsonElement jsonElement : gameList) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (jsonElement.&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>().&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsString&lt;/span>().&lt;span style="color:#a6e22e">equals&lt;/span>(gameVersion)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gameJsonURL &lt;span style="color:#f92672">=&lt;/span> jsonElement.&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>().&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsString&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (gameJsonURL.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RuntimeException(gameVersion &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; Not Found!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>获取&lt;code>versions&lt;/code>遍历出所以版本，之后获取指定版本的&lt;code>json&lt;/code>&lt;/p>
&lt;p>如果没找到版本就抛出异常&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> gameJson &lt;span style="color:#f92672">=&lt;/span> gson.&lt;span style="color:#a6e22e">fromJson&lt;/span>(IOUtils.&lt;span style="color:#a6e22e">toString&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> URL(gameJsonURL), StandardCharsets.&lt;span style="color:#a6e22e">UTF_8&lt;/span>), JsonObject.&lt;span style="color:#a6e22e">class&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> gameJarUrl &lt;span style="color:#f92672">=&lt;/span> gameJson.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;downloads&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>().&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;client&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>().&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsString&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>获取jar文件的url&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> versionsDir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(gameDir, &lt;span style="color:#e6db74">&amp;#34;versions&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>versionsDir.&lt;span style="color:#a6e22e">exists&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versionsDir.&lt;span style="color:#a6e22e">mkdir&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> versionDir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(versionsDir, gameVersion);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>versionDir.&lt;span style="color:#a6e22e">exists&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versionDir.&lt;span style="color:#a6e22e">mkdir&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> gameJarFile &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(versionDir,gameVersion &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.jar&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>获取本地的Jar路径&lt;/p></description></item><item><title>Minecraft启动器开发#2启动游戏</title><link>https://blog.enaium.cn/post/2021-5-15-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%232%E5%90%AF%E5%8A%A8%E6%B8%B8%E6%88%8F/</link><pubDate>Sat, 15 May 2021 13:13:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-5-15-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%232%E5%90%AF%E5%8A%A8%E6%B8%B8%E6%88%8F/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;mcc&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> version &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> java &lt;span style="color:#f92672">=&lt;/span> System.&lt;span style="color:#a6e22e">getProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;java.home&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> jvmArgs &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;-XX:+UnlockExperimentalVMOptions -XX:+UseG1GC -XX:G1NewSizePercent=20 -XX:G1ReservePercent=20 -XX:MaxGCPauseMillis=50 -XX:G1HeapRegionSize=16M -XX:-UseAdaptiveSizePolicy -XX:-OmitStackTraceInFastThrow -Xmn128m -Xmx1792m&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> natives &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;C:/Users/Enaium/AppData/Roaming/.minecraft/versions/1.8.9/natives&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> libraries &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/com/mojang/netty/1.6/netty-1.6.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/oshi-project/oshi-core/1.1/oshi-core-1.1.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/net/java/dev/jna/jna/3.4.0/jna-3.4.0.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/net/java/dev/jna/platform/3.4.0/platform-3.4.0.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/com/ibm/icu/icu4j-core-mojang/51.2/icu4j-core-mojang-51.2.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/com/paulscode/codecjorbis/20101023/codecjorbis-20101023.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/com/paulscode/codecwav/20101023/codecwav-20101023.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/com/paulscode/libraryjavasound/20101123/libraryjavasound-20101123.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/com/paulscode/librarylwjglopenal/20100824/librarylwjglopenal-20100824.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/com/paulscode/soundsystem/20120107/soundsystem-20120107.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/io/netty/netty-all/4.0.23.Final/netty-all-4.0.23.Final.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/com/google/guava/guava/17.0/guava-17.0.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/commons-io/commons-io/2.4/commons-io-2.4.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/commons-codec/commons-codec/1.9/commons-codec-1.9.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/net/java/jinput/jinput/2.0.5/jinput-2.0.5.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/net/java/jutils/jutils/1.0.0/jutils-1.0.0.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/com/google/code/gson/gson/2.2.4/gson-2.2.4.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/com/mojang/authlib/1.5.21/authlib-1.5.21.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/com/mojang/realms/1.7.59/realms-1.7.59.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/org/apache/commons/commons-compress/1.8.1/commons-compress-1.8.1.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/org/apache/httpcomponents/httpclient/4.3.3/httpclient-4.3.3.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/org/apache/httpcomponents/httpcore/4.3.2/httpcore-4.3.2.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/org/apache/logging/log4j/log4j-api/2.0-beta9/log4j-api-2.0-beta9.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/org/apache/logging/log4j/log4j-core/2.0-beta9/log4j-core-2.0-beta9.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/org/lwjgl/lwjgl/lwjgl/2.9.4-nightly-20150209/lwjgl-2.9.4-nightly-20150209.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/org/lwjgl/lwjgl/lwjgl_util/2.9.4-nightly-20150209/lwjgl_util-2.9.4-nightly-20150209.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/libraries/tv/twitch/twitch/6.5/twitch-6.5.jar;C:/Users/Enaium/AppData/Roaming/.minecraft/versions/1.8.9/1.8.9.jar&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> mainClass &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;net.minecraft.client.main.Main&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> username &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Enaium&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> gameVersion &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\&amp;#34; &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> version &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; \&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> gameDir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;C:/Users/Enaium/AppData/Roaming/.minecraft&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> assetsDir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;C:/Users/Enaium/AppData/Roaming/.minecraft/assets&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> assetIndex &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;1.8&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> uuid &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> accessToken &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> text &lt;span style="color:#f92672">=&lt;/span> java &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/bin/java.exe &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> jvmArgs &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; -Djava.library.path=&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> natives &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; -Dminecraft.launcher.brand=&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">+&lt;/span> name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; -Dminecraft.launcher.version=&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> version &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; -cp &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> libraries &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> mainClass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; --username &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> username &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; --version &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> gameVersion &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34; --gameDir &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> gameDir &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; --assetsDir &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> assetsDir &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; --assetIndex &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> assetIndex
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; --uuid &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> uuid &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; --accessToken &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> accessToken &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; --userProperties {} --userType mojang &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;--width 854 --height 480&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>把每一个参数都提取出来，放到变量里&lt;/p></description></item><item><title>Minecraft启动器开发#1分析启动脚本</title><link>https://blog.enaium.cn/post/2021-5-15-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%231%E5%88%86%E6%9E%90%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/</link><pubDate>Sat, 15 May 2021 11:11:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-5-15-minecraft%E5%90%AF%E5%8A%A8%E5%99%A8%E5%BC%80%E5%8F%91%231%E5%88%86%E6%9E%90%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/</guid><description>&lt;p>用HMCL生成启动脚本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> java &lt;span style="color:#f92672">=&lt;/span> System.&lt;span style="color:#a6e22e">getProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;java.home&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>获取运行的java路径&lt;/p>
&lt;p>&lt;code>-Dminecraft.client.jar=xxx&lt;/code>没用可以删掉&lt;/p>
&lt;p>&lt;code>-XX:xx&lt;/code>JVM参数 可能需要&lt;/p>
&lt;p>&lt;code>-Dfml.ignoreInvalidMinecraftCertificates=true -Dfml.ignorePatchDiscrepancies=true -XX:HeapDumpPath=MojangTricksIntelDriversForPerformance_javaw.exe_minecraft.exe.heapdump&lt;/code>&lt;/p>
&lt;p>这段可以直接删掉&lt;/p>
&lt;p>&lt;code>-Djava.library.path&lt;/code> navite 启动需要的native&lt;/p>
&lt;p>&lt;code>-Dminecraft.launcher.brand&lt;/code>启动器&lt;/p>
&lt;p>&lt;code>-Dminecraft.launcher.version&lt;/code>启动器版本&lt;/p>
&lt;p>&lt;code>-cp&lt;/code> classpath 启动需要的库&lt;/p>
&lt;p>&lt;code>net.minecraft.client.main.Main&lt;/code> 启动的主类&lt;/p>
&lt;p>&lt;code>--username&lt;/code>用户名(玩家名)&lt;/p>
&lt;p>&lt;code>--version&lt;/code>游戏左下角显示的版本&lt;/p>
&lt;p>&lt;code>--gameDir&lt;/code>游戏运行的目录save、log等文件会生成在这里&lt;/p>
&lt;p>&lt;code>--assetsDir&lt;/code>游戏资源路径&lt;/p>
&lt;p>&lt;code>--assetIndex&lt;/code>游戏资源的Index文件名&lt;/p>
&lt;p>&lt;code>--uuid&lt;/code>玩家的UUID&lt;/p>
&lt;p>&lt;code>--accessToken&lt;/code> Token会过期 每次登录都会重新生成&lt;/p>
&lt;p>&lt;code>--userProperties {}&lt;/code>玩家的资产 不用管&lt;/p>
&lt;p>&lt;code>--userType&lt;/code>玩家类型 mojang表示是mojang账户&lt;/p>
&lt;p>&lt;code>--width 854 --height 480&lt;/code>窗口的大小&lt;/p></description></item><item><title>[ASM教程]#6树API</title><link>https://blog.enaium.cn/post/2021-4-27-asm%E6%95%99%E7%A8%8B%236%E6%A0%91api/</link><pubDate>Tue, 27 Apr 2021 15:02:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-4-27-asm%E6%95%99%E7%A8%8B%236%E6%A0%91api/</guid><description>&lt;p>使用树API来生成一个类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ClassWriter classWriter &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ClassWriter(ClassWriter.&lt;span style="color:#a6e22e">COMPUTE_MAXS&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ClassNode classNode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ClassNode();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classNode.&lt;span style="color:#a6e22e">visit&lt;/span>(V1_8, ACC_PUBLIC, &lt;span style="color:#e6db74">&amp;#34;cn/enaium/learn/asm/learn6/Learn6Test&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;java/lang/Object&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MethodNode methodNode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> MethodNode(ACC_PUBLIC &lt;span style="color:#f92672">+&lt;/span> ACC_STATIC, &lt;span style="color:#e6db74">&amp;#34;render&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;()V&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>);&lt;span style="color:#75715e">//一个方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodNode.&lt;span style="color:#a6e22e">instructions&lt;/span>.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> FieldInsnNode(GETSTATIC, &lt;span style="color:#e6db74">&amp;#34;java/lang/System&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;out&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Ljava/io/PrintStream;&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodNode.&lt;span style="color:#a6e22e">instructions&lt;/span>.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> LdcInsnNode(&lt;span style="color:#e6db74">&amp;#34;Hello ASM!&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodNode.&lt;span style="color:#a6e22e">instructions&lt;/span>.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> MethodInsnNode(INVOKEVIRTUAL, &lt;span style="color:#e6db74">&amp;#34;java/io/PrintStream&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;println&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;(Ljava/lang/String;)V&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodNode.&lt;span style="color:#a6e22e">visitMaxs&lt;/span>(2, 1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodNode.&lt;span style="color:#a6e22e">instructions&lt;/span>.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> InsnNode(RETURN));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classNode.&lt;span style="color:#a6e22e">methods&lt;/span>.&lt;span style="color:#a6e22e">add&lt;/span>(methodNode);&lt;span style="color:#75715e">//添加方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classNode.&lt;span style="color:#a6e22e">accept&lt;/span>(classWriter);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String name &lt;span style="color:#f92672">=&lt;/span> Learn2.&lt;span style="color:#a6e22e">class&lt;/span>.&lt;span style="color:#a6e22e">getResource&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/cn/enaium/learn/asm/learn6/&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getPath&lt;/span>() &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Learn6Test.class&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FileOutputStream out &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> FileOutputStream(name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> out.&lt;span style="color:#a6e22e">write&lt;/span>(classWriter.&lt;span style="color:#a6e22e">toByteArray&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> out.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>字段或方法都在&lt;code>fields&lt;/code>和&lt;code>methods&lt;/code>里是一个列表，并且操作也是一个列表（双向链表），所以可以很容易的操作一个类。&lt;/p>
&lt;p>接着再分析类。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ClassReader classReader &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ClassReader(&lt;span style="color:#66d9ef">new&lt;/span> FileInputStream(name));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ClassNode readClassNode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ClassNode();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classReader.&lt;span style="color:#a6e22e">accept&lt;/span>(readClassNode,0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(readClassNode.&lt;span style="color:#a6e22e">name&lt;/span>);&lt;span style="color:#75715e">//类名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (MethodNode method : readClassNode.&lt;span style="color:#a6e22e">methods&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(method.&lt;span style="color:#a6e22e">name&lt;/span>);&lt;span style="color:#75715e">//方法名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ListIterator&lt;span style="color:#f92672">&amp;lt;&lt;/span>AbstractInsnNode&lt;span style="color:#f92672">&amp;gt;&lt;/span> iterator &lt;span style="color:#f92672">=&lt;/span> method.&lt;span style="color:#a6e22e">instructions&lt;/span>.&lt;span style="color:#a6e22e">iterator&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (iterator.&lt;span style="color:#a6e22e">hasNext&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AbstractInsnNode next &lt;span style="color:#f92672">=&lt;/span> iterator.&lt;span style="color:#a6e22e">next&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(next.&lt;span style="color:#a6e22e">getClass&lt;/span>());&lt;span style="color:#75715e">//操作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">catch&lt;/span> (IOException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以把方法的操作给遍历出来。&lt;/p></description></item><item><title>120行代码手写一个简单的MyBatis实现简单的CRUD</title><link>https://blog.enaium.cn/post/2021-4-21-120%E8%A1%8C%E4%BB%A3%E7%A0%81%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84mybatis%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84crud/</link><pubDate>Wed, 21 Apr 2021 20:57:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-4-21-120%E8%A1%8C%E4%BB%A3%E7%A0%81%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84mybatis%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84crud/</guid><description>&lt;p>不用XML只用注解&lt;/p>
&lt;p>首先需要创建6个注解&lt;/p>
&lt;p>SQL用于输入SQL语句&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Target&lt;/span>(ElementType.&lt;span style="color:#a6e22e">METHOD&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Retention&lt;/span>(RetentionPolicy.&lt;span style="color:#a6e22e">RUNTIME&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">@interface&lt;/span> SQL {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#a6e22e">value&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用来表示这个方法是Update&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Target&lt;/span>(ElementType.&lt;span style="color:#a6e22e">METHOD&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Retention&lt;/span>(RetentionPolicy.&lt;span style="color:#a6e22e">RUNTIME&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">@interface&lt;/span> Update {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用来表示这个方法是Select&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Target&lt;/span>(ElementType.&lt;span style="color:#a6e22e">METHOD&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Retention&lt;/span>(RetentionPolicy.&lt;span style="color:#a6e22e">RUNTIME&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">@interface&lt;/span> Select {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用来表示这个方法是Insert&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Target&lt;/span>(ElementType.&lt;span style="color:#a6e22e">METHOD&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Retention&lt;/span>(RetentionPolicy.&lt;span style="color:#a6e22e">RUNTIME&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">@interface&lt;/span> Insert {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用来表示这个方法是Delete&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Target&lt;/span>(ElementType.&lt;span style="color:#a6e22e">METHOD&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Retention&lt;/span>(RetentionPolicy.&lt;span style="color:#a6e22e">RUNTIME&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">@interface&lt;/span> Delete {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用来表示方法参数名&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Target&lt;/span>(ElementType.&lt;span style="color:#a6e22e">PARAMETER&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Retention&lt;/span>(RetentionPolicy.&lt;span style="color:#a6e22e">RUNTIME&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">@interface&lt;/span> Param {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String &lt;span style="color:#a6e22e">value&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>好了注解写完了&lt;/p>
&lt;p>开始写主类&lt;/p>
&lt;p>用map实现简单的配置，然后读取配置连接数据库，然后程序关闭的时候关闭连接。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Satis&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Statement statement;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Satis&lt;/span>(Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, String&lt;span style="color:#f92672">&amp;gt;&lt;/span> config) &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class.&lt;span style="color:#a6e22e">forName&lt;/span>(config.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;driver&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Connection connection &lt;span style="color:#f92672">=&lt;/span> DriverManager.&lt;span style="color:#a6e22e">getConnection&lt;/span>(config.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span>), config.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span>), config.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statement &lt;span style="color:#f92672">=&lt;/span> connection.&lt;span style="color:#a6e22e">createStatement&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Runtime.&lt;span style="color:#a6e22e">getRuntime&lt;/span>().&lt;span style="color:#a6e22e">addShutdownHook&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> Thread(() &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statement.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> connection.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (SQLException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建&lt;code>getMapper&lt;/code>方法。&lt;/p></description></item><item><title>详细介绍如何发布到Maven中央仓库</title><link>https://blog.enaium.cn/post/2021-4-15-%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E5%88%B0maven%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93/</link><pubDate>Thu, 15 Apr 2021 11:10:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-4-15-%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E5%88%B0maven%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93/</guid><description>&lt;h2 id="注册账户">注册账户&lt;/h2>
&lt;p>&lt;a href="https://issues.sonatype.org">https://issues.sonatype.org&lt;/a>&lt;/p>
&lt;h2 id="发布问题创建新的工程">发布问题(创建新的工程)&lt;/h2>
&lt;p>&lt;a href="https://issues.sonatype.org/secure/CreateIssue.jspa?issuetype=21&amp;amp;pid=10134">https://issues.sonatype.org/secure/CreateIssue.jspa?issuetype=21&amp;pid=10134&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://imgtu.com/i/cg6kfe">&lt;img src="https://z3.ax1x.com/2021/04/15/cg6kfe.png" alt="cg6kfe.png">&lt;/a>&lt;/p>
&lt;p>摘要:项目名称&lt;/p>
&lt;p>Group Id:组名 这里要用自己的域名的话一定要保证有域名的所有权,后面会让你添加dns记录来验证&lt;/p>
&lt;p>Project URL仓库地址
SCM URL git地址&lt;/p>
&lt;p>之后创建&lt;/p>
&lt;p>等待回复 会让你添加DNS记录&lt;/p>
&lt;p>&lt;a href="https://imgtu.com/i/cg6gn1">&lt;img src="https://z3.ax1x.com/2021/04/15/cg6gn1.png" alt="cg6gn1.png">&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://imgtu.com/i/cgcFH0">&lt;img src="https://z3.ax1x.com/2021/04/15/cgcFH0.png" alt="cgcFH0.png">&lt;/a>&lt;/p>
&lt;p>添加后回复,这个地址要使用这个工具才能访问,直接执行命令后面跟着地址就行&lt;/p>
&lt;p>&lt;a href="https://imgtu.com/i/cg6Tcd">&lt;img src="https://z3.ax1x.com/2021/04/15/cg6Tcd.png" alt="cg6Tcd.png">&lt;/a>&lt;/p>
&lt;p>等待回复之后就能上传了,他说上传之后回复&lt;/p>
&lt;p>&lt;a href="https://imgtu.com/i/cgcNgH">&lt;img src="https://z3.ax1x.com/2021/04/15/cgcNgH.png" alt="cgcNgH.png">&lt;/a>&lt;/p>
&lt;p>这里我使用Gradle&lt;/p>
&lt;p>加上这2个插件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>plugins &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id &lt;span style="color:#e6db74">&amp;#39;maven-publish&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id &lt;span style="color:#e6db74">&amp;#39;signing&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>doc 和 source&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>java &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> withJavadocJar&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> withSourcesJar&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="发布配置">发布配置&lt;/h2>
&lt;p>配置后先别刷新&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>publishing &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//配置仓库
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> repositories &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//本地仓库
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">def&lt;/span> ENV &lt;span style="color:#f92672">=&lt;/span> System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getenv&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>ENV&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">MAVEN_URL&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maven &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url ENV&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">MAVEN_URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//远程仓库
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> maven &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#e6db74">&amp;#34;https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credentials &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> username ossrhUsername
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password ossrhPassword
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> publications &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mavenJava&lt;span style="color:#f92672">(&lt;/span>MavenPublication&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> groupId project&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">group&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> artifactId project&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version project&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> from components&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//pom其他信息 这个必须加上不然等会发布验证不会通过
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> pom &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;accessor&amp;#39;&lt;/span>&lt;span style="color:#75715e">//项目名
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> description &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Bytecode framework for java, Invoke private field and method&amp;#39;&lt;/span>&lt;span style="color:#75715e">//描述
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;https://github.com/Enaium/accessor/&amp;#39;&lt;/span>&lt;span style="color:#75715e">//地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//协议
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> licenses &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> license &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;The Apache License, Version 2.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;http://www.apache.org/licenses/LICENSE-2.0.txt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//开发者信息
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> developers &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> developer &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;enaium&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Enaium&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Enaium@outlook.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//git地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> scm &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> connection &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;scm:git:https://github.com/Enaium/accessor.git&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> developerConnection &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;scm:git:https://github.com/Enaium/accessor.git&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;https://github.com/Enaium/accessor/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//签名 这个放到最后
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>signing &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sign publishing&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">publications&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">mavenJava&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在用户根目录的&lt;code>.gradle&lt;/code>里配置&lt;code>gradle.properties&lt;/code>&lt;/p></description></item><item><title>[ASM教程]#5字符串混淆</title><link>https://blog.enaium.cn/post/2021-3-19-asm%E6%95%99%E7%A8%8B%235%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B7%B7%E6%B7%86/</link><pubDate>Fri, 19 Mar 2021 20:05:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-3-19-asm%E6%95%99%E7%A8%8B%235%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B7%B7%E6%B7%86/</guid><description>&lt;p>测试类，需要混淆这里所有的字符串，上一期我们学习了如果插入一个常量，那么拦截插入常量的时候判断是不是字符串，如果是就混淆它。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Learn5Test&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> String name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Enaium&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#a6e22e">Learn5Test&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> render(name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">render&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;obfuscatory by &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">render&lt;/span>(String text) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重写方法访问。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> MethodVisitor &lt;span style="color:#a6e22e">visitMethod&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> access, String name, String desc, String signature, String&lt;span style="color:#f92672">[]&lt;/span> exceptions) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> MethodVisitor(api, &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">visitMethod&lt;/span>(access, name, desc, signature, exceptions)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重写常量访问。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">visitLdcInsn&lt;/span>(Object cst) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> MethodVisitor &lt;span style="color:#a6e22e">visitMethod&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> access, String name, String desc, String signature, String&lt;span style="color:#f92672">[]&lt;/span> exceptions) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> MethodVisitor(api, &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">visitMethod&lt;/span>(access, name, desc, signature, exceptions)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">visitLdcInsn&lt;/span>(Object cst) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (cst &lt;span style="color:#66d9ef">instanceof&lt;/span> String) {&lt;span style="color:#75715e">//判断是不是字符串类型，如果不是不重写。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> bytes &lt;span style="color:#f92672">=&lt;/span> ((String) cst).&lt;span style="color:#a6e22e">getBytes&lt;/span>();&lt;span style="color:#75715e">//先将字符串转换为字节组。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mv.&lt;span style="color:#a6e22e">visitTypeInsn&lt;/span>(NEW, &lt;span style="color:#e6db74">&amp;#34;java/lang/String&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//创建字符串对象。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mv.&lt;span style="color:#a6e22e">visitInsn&lt;/span>(DUP);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mv.&lt;span style="color:#a6e22e">visitIntInsn&lt;/span>(SIPUSH, bytes.&lt;span style="color:#a6e22e">length&lt;/span>);&lt;span style="color:#75715e">//将字符串转换的字节组插入。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mv.&lt;span style="color:#a6e22e">visitIntInsn&lt;/span>(NEWARRAY, T_BYTE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> bytes.&lt;span style="color:#a6e22e">length&lt;/span>; i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mv.&lt;span style="color:#a6e22e">visitInsn&lt;/span>(DUP);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mv.&lt;span style="color:#a6e22e">visitIntInsn&lt;/span>(SIPUSH, i);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mv.&lt;span style="color:#a6e22e">visitIntInsn&lt;/span>(SIPUSH, bytes&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mv.&lt;span style="color:#a6e22e">visitInsn&lt;/span>(AASTORE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mv.&lt;span style="color:#a6e22e">visitLdcInsn&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mv.&lt;span style="color:#a6e22e">visitMethodInsn&lt;/span>(INVOKESPECIAL, &lt;span style="color:#e6db74">&amp;#34;java/lang/String&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;&amp;lt;init&amp;gt;&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;([BLjava/lang/String;)V&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>);&lt;span style="color:#75715e">//调用String的构造方法，把字节组转换为字符串，使用UTF-8保证中文不乱码，因为字符串有一个解密的过程，所以反字符串混淆也很简单。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">visitLdcInsn&lt;/span>(cst);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[ASM教程]#4创建对象和数组</title><link>https://blog.enaium.cn/post/2021-3-3-asm%E6%95%99%E7%A8%8B%234%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%95%B0%E7%BB%84/</link><pubDate>Wed, 03 Mar 2021 14:13:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-3-3-asm%E6%95%99%E7%A8%8B%234%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%95%B0%E7%BB%84/</guid><description>&lt;p>这期我们要创建一个对象和数组。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>MethodVisitor methodVisitor &lt;span style="color:#f92672">=&lt;/span> classWriter.&lt;span style="color:#a6e22e">visitMethod&lt;/span>(ACC_PUBLIC, &lt;span style="color:#e6db74">&amp;#34;&amp;lt;init&amp;gt;&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;()V&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitTypeInsn&lt;/span>(NEW, &lt;span style="color:#e6db74">&amp;#34;java/lang/String&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//插入一个对象，操作码是NEW，类型是String。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitLdcInsn&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Enaium&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//插入一个LDC常量。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitMethodInsn&lt;/span>(INVOKESPECIAL, &lt;span style="color:#e6db74">&amp;#34;java/lang/String&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;&amp;lt;init&amp;gt;&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;(Ljava/lang/String;)V&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>);&lt;span style="color:#75715e">//插入方法调用，调用String的构造方法。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//用刚才的方法创建。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitTypeInsn&lt;/span>(NEW, &lt;span style="color:#e6db74">&amp;#34;cn/enaium/learn/asm/learn4/Bean&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitLdcInsn&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Enaium&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitMethodInsn&lt;/span>(INVOKESPECIAL, &lt;span style="color:#e6db74">&amp;#34;cn/enaium/learn/asm/learn4/Bean&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;&amp;lt;init&amp;gt;&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;(Ljava/lang/String;)V&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitIntInsn&lt;/span>(SIPUSH, 2);&lt;span style="color:#75715e">//先需要给一个数组长度。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitIntInsn&lt;/span>(NEWARRAY, T_BYTE);&lt;span style="color:#75715e">//插入一个数组，类型是byte。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitInsn&lt;/span>(DUP);&lt;span style="color:#75715e">//插入一个操作，将数据压入站。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitIntInsn&lt;/span>(SIPUSH, 0);&lt;span style="color:#75715e">//插入数组0的位置。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitIntInsn&lt;/span>(SIPUSH, 1);&lt;span style="color:#75715e">//插入一。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitInsn&lt;/span>(AASTORE);&lt;span style="color:#75715e">//保存数据。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//重复这四个操作，在数组1的位置插入二。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitInsn&lt;/span>(DUP);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitIntInsn&lt;/span>(SIPUSH, 1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitIntInsn&lt;/span>(SIPUSH, 2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitInsn&lt;/span>(AASTORE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>methodVisitor.&lt;span style="color:#a6e22e">visitEnd&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Bean&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Bean&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> String name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Bean&lt;/span>(String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getName&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[ASM教程]#3增加移除类成员</title><link>https://blog.enaium.cn/post/2021-3-2-asm%E6%95%99%E7%A8%8B%233%E5%A2%9E%E5%8A%A0%E7%A7%BB%E9%99%A4%E7%B1%BB%E6%88%90%E5%91%98/</link><pubDate>Tue, 02 Mar 2021 23:24:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-3-2-asm%E6%95%99%E7%A8%8B%233%E5%A2%9E%E5%8A%A0%E7%A7%BB%E9%99%A4%E7%B1%BB%E6%88%90%E5%91%98/</guid><description>&lt;p>可以委托一个ClassWriter。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MyClassVisitor&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> ClassVisitor {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">MyClassVisitor&lt;/span>(ClassWriter classWriter) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(ASM5, classWriter);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样就可以把读取到的类转换为二进制文件了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>ClassReader classReader &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ClassReader(Learn3Test.&lt;span style="color:#a6e22e">class&lt;/span>.&lt;span style="color:#a6e22e">getName&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ClassWriter classWriter &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ClassWriter(ClassWriter.&lt;span style="color:#a6e22e">COMPUTE_MAXS&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MyClassVisitor myClassVisitor &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> MyClassVisitor(classWriter);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>classReader.&lt;span style="color:#a6e22e">accept&lt;/span>(myClassVisitor, 0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>classWriter.&lt;span style="color:#a6e22e">toByteArray&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重写字段访问方法，如果字段的名字一致，就返回null。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> FieldVisitor &lt;span style="color:#a6e22e">visitField&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> access, String name, String desc, String signature, Object value) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (name.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;aBoolean&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">visitField&lt;/span>(access, name, desc, signature, value);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>移除方法也是一样。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> MethodVisitor &lt;span style="color:#a6e22e">visitMethod&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> access, String name, String desc, String signature, String&lt;span style="color:#f92672">[]&lt;/span> exceptions) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (name.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;render&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">visitMethod&lt;/span>(access, name, desc, signature, exceptions);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在结束的时候添加一个字段。&lt;/p></description></item><item><title>[ASM教程]#2生成类</title><link>https://blog.enaium.cn/post/2021-3-2-asm%E6%95%99%E7%A8%8B%232%E7%94%9F%E6%88%90%E7%B1%BB/</link><pubDate>Tue, 02 Mar 2021 15:31:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-3-2-asm%E6%95%99%E7%A8%8B%232%E7%94%9F%E6%88%90%E7%B1%BB/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Learn2&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) &lt;span style="color:#66d9ef">throws&lt;/span> NoSuchMethodException, InvocationTargetException, IllegalAccessException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ClassWriter classWriter &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ClassWriter(ClassWriter.&lt;span style="color:#a6e22e">COMPUTE_MAXS&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classWriter.&lt;span style="color:#a6e22e">visit&lt;/span>(V1_8, ACC_PUBLIC, &lt;span style="color:#e6db74">&amp;#34;cn/enaium/learn/asm/learn2/Learn2Test&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;java/lang/Object&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>);&lt;span style="color:#75715e">//类信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MethodVisitor methodVisitor &lt;span style="color:#f92672">=&lt;/span> classWriter.&lt;span style="color:#a6e22e">visitMethod&lt;/span>(ACC_PUBLIC &lt;span style="color:#f92672">+&lt;/span> ACC_STATIC, &lt;span style="color:#e6db74">&amp;#34;render&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;()V&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>);&lt;span style="color:#75715e">//插入方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodVisitor.&lt;span style="color:#a6e22e">visitFieldInsn&lt;/span>(GETSTATIC, &lt;span style="color:#e6db74">&amp;#34;java/lang/System&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;out&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Ljava/io/PrintStream;&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//插入字段&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodVisitor.&lt;span style="color:#a6e22e">visitLdcInsn&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello ASM!&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//插入LDC&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodVisitor.&lt;span style="color:#a6e22e">visitMethodInsn&lt;/span>(INVOKEVIRTUAL, &lt;span style="color:#e6db74">&amp;#34;java/io/PrintStream&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;println&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;(Ljava/lang/String;)V&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>);&lt;span style="color:#75715e">//插入方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodVisitor.&lt;span style="color:#a6e22e">visitMaxs&lt;/span>(2, 1);&lt;span style="color:#75715e">//设置栈和局部变量大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodVisitor.&lt;span style="color:#a6e22e">visitInsn&lt;/span>(RETURN);&lt;span style="color:#75715e">//插入返回&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodVisitor.&lt;span style="color:#a6e22e">visitEnd&lt;/span>();&lt;span style="color:#75715e">//结束&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classWriter.&lt;span style="color:#a6e22e">visitEnd&lt;/span>();&lt;span style="color:#75715e">//结束&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//生成类&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FileOutputStream out &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> FileOutputStream(Learn2.&lt;span style="color:#a6e22e">class&lt;/span>.&lt;span style="color:#a6e22e">getResource&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/cn/enaium/learn/asm/learn2/&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getPath&lt;/span>() &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Learn2Test.class&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> out.&lt;span style="color:#a6e22e">write&lt;/span>(classWriter.&lt;span style="color:#a6e22e">toByteArray&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> out.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[ASM教程]#1分析类</title><link>https://blog.enaium.cn/post/2021-3-2-asm%E6%95%99%E7%A8%8B%231%E5%88%86%E6%9E%90%E7%B1%BB/</link><pubDate>Tue, 02 Mar 2021 14:07:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-3-2-asm%E6%95%99%E7%A8%8B%231%E5%88%86%E6%9E%90%E7%B1%BB/</guid><description>&lt;p>ASM是一种通用Java字节码操作和分析框架，它可以用于修改现有的class文件或动态生成class文件。&lt;/p>
&lt;p>直接进入主题，分析这个类。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Learn1Test&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> aBoolean &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">render&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello ASM&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>先创建一个MyClassVisitor类，继承ClassVisitor。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MyClassVisitor&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> ClassVisitor {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">MyClassVisitor&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(ASM5);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">visit&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> version, &lt;span style="color:#66d9ef">int&lt;/span> access, String name, String signature, String superName, String&lt;span style="color:#f92672">[]&lt;/span> interfaces) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; extends &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> superName &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; {&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">visit&lt;/span>(version, access, name, signature, superName, interfaces);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> FieldVisitor &lt;span style="color:#a6e22e">visitField&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> access, String name, String desc, String signature, Object value) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(desc &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">visitField&lt;/span>(access, name, desc, signature, value);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> MethodVisitor &lt;span style="color:#a6e22e">visitMethod&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> access, String name, String desc, String signature, String&lt;span style="color:#f92672">[]&lt;/span> exceptions) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> desc);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">visitMethod&lt;/span>(access, name, desc, signature, exceptions);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">visitEnd&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">visitEnd&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用ClassReader读取这个类，然后调用accept来分析。&lt;/p></description></item><item><title>[LWJGL3 2D教程]#6VBO</title><link>https://blog.enaium.cn/post/2021-2-28-lwjgl3-2d%E6%95%99%E7%A8%8B%236vbo/</link><pubDate>Sun, 28 Feb 2021 21:33:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-2-28-lwjgl3-2d%E6%95%99%E7%A8%8B%236vbo/</guid><description>&lt;p>创建一个&lt;code>Model&lt;/code>类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Model&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> draw_count;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v_id;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> t_id;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Model&lt;/span>(&lt;span style="color:#66d9ef">float&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> vertices, &lt;span style="color:#66d9ef">float&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> tex_coords) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> draw_count &lt;span style="color:#f92672">=&lt;/span> vertices.&lt;span style="color:#a6e22e">length&lt;/span> &lt;span style="color:#f92672">/&lt;/span> 3;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v_id &lt;span style="color:#f92672">=&lt;/span> glGenBuffers();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glBindBuffer(GL_ARRAY_BUFFER, v_id);&lt;span style="color:#75715e">//绑定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glBufferData(GL_ARRAY_BUFFER, createFloatBuffer(vertices), GL_STATIC_DRAW);&lt;span style="color:#75715e">//静态绘制&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t_id &lt;span style="color:#f92672">=&lt;/span> glGenBuffers();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glBindBuffer(GL_ARRAY_BUFFER, t_id);&lt;span style="color:#75715e">//绑定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glBufferData(GL_ARRAY_BUFFER, createFloatBuffer(tex_coords), GL_STATIC_DRAW);&lt;span style="color:#75715e">//静态绘制&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glBindBuffer(GL_ARRAY_BUFFER, 0);&lt;span style="color:#75715e">//取消绑定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">render&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glEnableClientState(GL_VERTEX_ARRAY);&lt;span style="color:#75715e">//启用顶点数组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glEnableClientState(GL_TEXTURE_COORD_ARRAY);&lt;span style="color:#75715e">//启用坐标数组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glBindBuffer(GL_ARRAY_BUFFER, v_id);&lt;span style="color:#75715e">//绑定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glVertexPointer(3, GL_FLOAT, 0, 0);&lt;span style="color:#75715e">//顶点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glBindBuffer(GL_ARRAY_BUFFER, t_id);&lt;span style="color:#75715e">//绑定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glTexCoordPointer(2, GL_FLOAT, 0, 0);&lt;span style="color:#75715e">// 坐标&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glDrawArrays(GL_TRIANGLES, 0, draw_count);&lt;span style="color:#75715e">//绘制数组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glBindBuffer(GL_ARRAY_BUFFER, 0);&lt;span style="color:#75715e">//取消绑定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glDisableClientState(GL_VERTEX_ARRAY);&lt;span style="color:#75715e">//禁用顶点数组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glDisableClientState(GL_TEXTURE_COORD_ARRAY);&lt;span style="color:#75715e">//禁用坐标数组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//创建缓冲区&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> FloatBuffer &lt;span style="color:#a6e22e">createFloatBuffer&lt;/span>(&lt;span style="color:#66d9ef">float&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> data) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FloatBuffer buffer &lt;span style="color:#f92672">=&lt;/span> BufferUtils.&lt;span style="color:#a6e22e">createFloatBuffer&lt;/span>(data.&lt;span style="color:#a6e22e">length&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buffer.&lt;span style="color:#a6e22e">put&lt;/span>(data);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buffer.&lt;span style="color:#a6e22e">flip&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> buffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>Texture texture &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Texture(&lt;span style="color:#e6db74">&amp;#34;/hero.png&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//2个三角&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">float&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> vertices &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span>&lt;span style="color:#f92672">[]&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&lt;/span>0.&lt;span style="color:#a6e22e">5f&lt;/span>, 0.&lt;span style="color:#a6e22e">5f&lt;/span>, 0,&lt;span style="color:#75715e">//左上&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.&lt;span style="color:#a6e22e">5f&lt;/span>, 0.&lt;span style="color:#a6e22e">5f&lt;/span>, 0,&lt;span style="color:#75715e">//右上&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.&lt;span style="color:#a6e22e">5f&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>0.&lt;span style="color:#a6e22e">5f&lt;/span>, 0,&lt;span style="color:#75715e">//右下&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.&lt;span style="color:#a6e22e">5f&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>0.&lt;span style="color:#a6e22e">5f&lt;/span>, 0,&lt;span style="color:#75715e">//右下&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&lt;/span>0.&lt;span style="color:#a6e22e">5f&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>0.&lt;span style="color:#a6e22e">5f&lt;/span>, 0,&lt;span style="color:#75715e">//左下&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&lt;/span>0.&lt;span style="color:#a6e22e">5f&lt;/span>, 0.&lt;span style="color:#a6e22e">5f&lt;/span>, 0,&lt;span style="color:#75715e">//左上&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">float&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> textures &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span>&lt;span style="color:#f92672">[]&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0, 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1, 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1, 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1, 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0, 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0, 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Model model &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Model(vertices, textures);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>绘制&lt;/p></description></item><item><title>自写一个EventBus</title><link>https://blog.enaium.cn/post/2021-2-23-%E8%87%AA%E5%86%99%E4%B8%80%E4%B8%AAeventbus/</link><pubDate>Tue, 23 Feb 2021 22:09:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-2-23-%E8%87%AA%E5%86%99%E4%B8%80%E4%B8%AAeventbus/</guid><description>&lt;p>EventBus，什么是EventBus。&lt;/p>
&lt;p>EventBus是事件发布-订阅总线，简单来说监听一个事件，一个方法订阅这个事件，如果事件调用，那么订阅了这个事件的方法也会跟着调用，这就是EventBus。&lt;/p>
&lt;p>创建一个注解，用于订阅事件，名字可以随便起，当然也可以叫Subscribe，我这里叫Event。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Target&lt;/span>(ElementType.&lt;span style="color:#a6e22e">METHOD&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Retention&lt;/span>(RetentionPolicy.&lt;span style="color:#a6e22e">RUNTIME&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">@interface&lt;/span> Event {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建Listener监听器。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Listener&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建MethodBean类，来储存订阅方法，Object是订阅类的对象，Method就是被订阅的方法。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MethodBean&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Object object;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Method method;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">MethodBean&lt;/span>(Object object, Method method) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">object&lt;/span> &lt;span style="color:#f92672">=&lt;/span> object;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">method&lt;/span> &lt;span style="color:#f92672">=&lt;/span> method;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Object &lt;span style="color:#a6e22e">getObject&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> object;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Method &lt;span style="color:#a6e22e">getMethod&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> method;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建一个EventManager，来管理订阅的事件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EventManager&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建一个HashMap合集K是监听器，V是被调用的方法，因为一个监听器可能有多个方法，并且要保证线程安全，需要使用CopyOnWriteArrayList。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EventManager&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&lt;/span>Class&lt;span style="color:#f92672">&amp;lt;?&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Listener&lt;span style="color:#f92672">&amp;gt;&lt;/span>, CopyOnWriteArrayList&lt;span style="color:#f92672">&amp;lt;&lt;/span>MethodBean&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span> events &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建register和unregister方法来注册和取消注册订阅的对象。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EventManager&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">register&lt;/span>(Object o) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">unregister&lt;/span>(Object o) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注册。&lt;/p></description></item><item><title>[CF4M教程]#5扩展</title><link>https://blog.enaium.cn/post/2021-2-22-cf4m%E6%95%99%E7%A8%8B%235%E6%89%A9%E5%B1%95/</link><pubDate>Mon, 22 Feb 2021 23:30:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-2-22-cf4m%E6%95%99%E7%A8%8B%235%E6%89%A9%E5%B1%95/</guid><description>&lt;p>现在CF4M已经更新到了1.4.7版本，现在不需用调用stop了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">enum&lt;/span> Example {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> INSTANCE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CF4M.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">run&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>, Minecraft.&lt;span style="color:#a6e22e">getMinecraft&lt;/span>().&lt;span style="color:#a6e22e">mcDataDir&lt;/span>.&lt;span style="color:#a6e22e">toString&lt;/span>() &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/Example&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>只需用在Module中创建一个变量，加上Setting注解即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Module&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Sprint&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Sprint&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Setting&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;test1&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> EnableSetting test1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> EnableSetting(&lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>CF4M没有附带Setting，需要自定义一个Setting。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EnableSetting&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> enable;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">EnableSetting&lt;/span>(&lt;span style="color:#66d9ef">boolean&lt;/span> enable) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">enable&lt;/span> &lt;span style="color:#f92672">=&lt;/span> enable;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">getEnable&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> enable;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setEnable&lt;/span>(&lt;span style="color:#66d9ef">boolean&lt;/span> enable) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">enable&lt;/span> &lt;span style="color:#f92672">=&lt;/span> enable;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>自定义Event，继承Listener，要注意是CF4M的Listener，At这个参数是枚举型，分别是HEAD、TAIL和NONE，表示监听的位置，如果没有确定位置就用NONE。&lt;/p>
&lt;p>要调用Call才能使Event监听这个事件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Render2DEvent&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Listener {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Render2DEvent&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(At.&lt;span style="color:#a6e22e">HEAD&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>CF4M还给Module提供了扩展变量，创建一个类加上Extend注解，变量加上Value注解，Value的值表示这个变量的名字。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Extend&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Module&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Value&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;tag&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String Haha;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以使用SetValue来进行变量的复制，有三个参数，分别是Module、变量名字、和值，如果变量比较特殊可以加上泛型。&lt;/p></description></item><item><title>[LWJGL3 2D教程]#5绘制纹理</title><link>https://blog.enaium.cn/post/2021-2-22-lwjgl3-2d%E6%95%99%E7%A8%8B%235%E7%BB%98%E5%88%B6%E7%BA%B9%E7%90%86/</link><pubDate>Mon, 22 Feb 2021 15:05:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-2-22-lwjgl3-2d%E6%95%99%E7%A8%8B%235%E7%BB%98%E5%88%B6%E7%BA%B9%E7%90%86/</guid><description>&lt;p>先说原理&lt;/p>
&lt;p>读取一张图片，然后获取图片所有的像素，根据像素的rgba来绘制&lt;/p>
&lt;p>先创建一个&lt;code>Texture&lt;/code>类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Texture&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> id;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Texture&lt;/span> (String path) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BufferedImage image &lt;span style="color:#f92672">=&lt;/span> ImageIO.&lt;span style="color:#a6e22e">read&lt;/span>(Texture.&lt;span style="color:#a6e22e">class&lt;/span>.&lt;span style="color:#a6e22e">getResource&lt;/span>(path));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> pixels &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[&lt;/span>image.&lt;span style="color:#a6e22e">getWidth&lt;/span>() &lt;span style="color:#f92672">*&lt;/span> image.&lt;span style="color:#a6e22e">getHeight&lt;/span>()&lt;span style="color:#f92672">]&lt;/span>;&lt;span style="color:#75715e">//创建像素列表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image.&lt;span style="color:#a6e22e">getRGB&lt;/span>(0, 0, image.&lt;span style="color:#a6e22e">getWidth&lt;/span>(), image.&lt;span style="color:#a6e22e">getHeight&lt;/span>(), pixels, 0, image.&lt;span style="color:#a6e22e">getWidth&lt;/span>());&lt;span style="color:#75715e">//获取图片像素&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ByteBuffer buffer &lt;span style="color:#f92672">=&lt;/span> BufferUtils.&lt;span style="color:#a6e22e">createByteBuffer&lt;/span>(image.&lt;span style="color:#a6e22e">getWidth&lt;/span>() &lt;span style="color:#f92672">*&lt;/span> image.&lt;span style="color:#a6e22e">getHeight&lt;/span>() &lt;span style="color:#f92672">*&lt;/span> 4);&lt;span style="color:#75715e">//创建字节缓冲区，*4是包含alpha *3不包含&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//遍历图片像素转换为RGBA&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> y &lt;span style="color:#f92672">=&lt;/span> 0; y &lt;span style="color:#f92672">&amp;lt;&lt;/span> image.&lt;span style="color:#a6e22e">getHeight&lt;/span>(); y&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> x &lt;span style="color:#f92672">=&lt;/span> 0; x &lt;span style="color:#f92672">&amp;lt;&lt;/span> image.&lt;span style="color:#a6e22e">getWidth&lt;/span>(); x&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> pixel &lt;span style="color:#f92672">=&lt;/span> pixels&lt;span style="color:#f92672">[&lt;/span>y &lt;span style="color:#f92672">*&lt;/span> image.&lt;span style="color:#a6e22e">getWidth&lt;/span>() &lt;span style="color:#f92672">+&lt;/span> x&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Color color &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Color(pixel);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buffer.&lt;span style="color:#a6e22e">put&lt;/span>((&lt;span style="color:#66d9ef">byte&lt;/span>) color.&lt;span style="color:#a6e22e">getRed&lt;/span>());&lt;span style="color:#75715e">//像素点的Red&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buffer.&lt;span style="color:#a6e22e">put&lt;/span>((&lt;span style="color:#66d9ef">byte&lt;/span>) color.&lt;span style="color:#a6e22e">getGreen&lt;/span>());&lt;span style="color:#75715e">//像素点的Green&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buffer.&lt;span style="color:#a6e22e">put&lt;/span>((&lt;span style="color:#66d9ef">byte&lt;/span>) color.&lt;span style="color:#a6e22e">getBlue&lt;/span>());&lt;span style="color:#75715e">//像素点的Blue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buffer.&lt;span style="color:#a6e22e">put&lt;/span>((&lt;span style="color:#66d9ef">byte&lt;/span>) color.&lt;span style="color:#a6e22e">getAlpha&lt;/span>());&lt;span style="color:#75715e">//像素点的Alpha&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buffer.&lt;span style="color:#a6e22e">flip&lt;/span>(); &lt;span style="color:#75715e">//一定要翻转&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id &lt;span style="color:#f92672">=&lt;/span> glGenTextures();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glBindTexture(GL_TEXTURE_2D, id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//设置缩放过滤&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//发送数据到OpenGL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, image.&lt;span style="color:#a6e22e">getWidth&lt;/span>(), image.&lt;span style="color:#a6e22e">getHeight&lt;/span>(), 0, GL_RGBA, GL_UNSIGNED_BYTE, buffer);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (IOException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">bind&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glBindTexture(GL_TEXTURE_2D, id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来开始绘制。&lt;/p></description></item><item><title>[LWJGL3 2D教程]#4按键</title><link>https://blog.enaium.cn/post/2021-2-21-lwjgl3-2d%E6%95%99%E7%A8%8B%234%E6%8C%89%E9%94%AE/</link><pubDate>Sun, 21 Feb 2021 18:43:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-2-21-lwjgl3-2d%E6%95%99%E7%A8%8B%234%E6%8C%89%E9%94%AE/</guid><description>&lt;p>按键很简单，如果&lt;code>K&lt;/code>按下，就会输出“K press“&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>glfwWindowShouldClose(window)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glfwPollEvents();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (glfwGetKey(window, GLFW_KEY_K) &lt;span style="color:#f92672">==&lt;/span> GLFW_TRUE) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;K press&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果鼠标左键按下，就会输出“MouseLeft press“&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>glfwWindowShouldClose(window)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glfwPollEvents();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (glfwGetMouseButton(window, GLFW_MOUSE_BUTTON_LEFT) &lt;span style="color:#f92672">==&lt;/span> GLFW_TRUE) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;MouseLeft press&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[LWJGL3 2D教程]#3绘制一个矩形</title><link>https://blog.enaium.cn/post/2021-2-21-lwjgl3-2d%E6%95%99%E7%A8%8B%233%E7%BB%98%E5%88%B6%E4%B8%80%E4%B8%AA%E7%9F%A9%E5%BD%A2/</link><pubDate>Sun, 21 Feb 2021 17:50:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-2-21-lwjgl3-2d%E6%95%99%E7%A8%8B%233%E7%BB%98%E5%88%B6%E4%B8%80%E4%B8%AA%E7%9F%A9%E5%BD%A2/</guid><description>&lt;p>做一个当前上下文，创建一个&lt;code>createCapabilities&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>glfwInit()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalStateException(&lt;span style="color:#e6db74">&amp;#34;Unable to initialize GLFW&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glfwDefaultWindowHints();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">long&lt;/span> window &lt;span style="color:#f92672">=&lt;/span> glfwCreateWindow(640, 480, &lt;span style="color:#e6db74">&amp;#34;My LWJGL Program&amp;#34;&lt;/span>, 0, 0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (window &lt;span style="color:#f92672">==&lt;/span> NULL) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RuntimeException(&lt;span style="color:#e6db74">&amp;#34;Failed to create the GLFW window&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glfwShowWindow(window);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glfwMakeContextCurrent(window);&lt;span style="color:#75715e">//上下文&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GL.&lt;span style="color:#a6e22e">createCapabilities&lt;/span>();&lt;span style="color:#75715e">//createCapabilities&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>glfwWindowShouldClose(window)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glfwPollEvents();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>绘制一个矩形&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>glfwWindowShouldClose(window)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glfwPollEvents();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glClear(GL_COLOR_BUFFER_BIT);&lt;span style="color:#75715e">//清除缓冲区&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glBegin(GL_QUADS);&lt;span style="color:#75715e">//绘制的形状(矩形)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glColor4f(1, 0, 0, 0);&lt;span style="color:#75715e">//颜色&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glVertex2d(&lt;span style="color:#f92672">-&lt;/span>0.&lt;span style="color:#a6e22e">5f&lt;/span>, 0.&lt;span style="color:#a6e22e">5f&lt;/span>);&lt;span style="color:#75715e">//第一个点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glVertex2d(0.&lt;span style="color:#a6e22e">5f&lt;/span>, 0.&lt;span style="color:#a6e22e">5f&lt;/span>);&lt;span style="color:#75715e">//第二个点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glVertex2d(0.&lt;span style="color:#a6e22e">5f&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>0.&lt;span style="color:#a6e22e">5f&lt;/span>);&lt;span style="color:#75715e">//第三个点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glVertex2d(&lt;span style="color:#f92672">-&lt;/span>0.&lt;span style="color:#a6e22e">5f&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>0.&lt;span style="color:#a6e22e">5f&lt;/span>);&lt;span style="color:#75715e">//第四个点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glEnd();&lt;span style="color:#75715e">//结束&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glfwSwapBuffers(window);&lt;span style="color:#75715e">//交换缓冲区 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[LWJGL3 2D教程]#2创建一个窗口</title><link>https://blog.enaium.cn/post/2021-2-21-lwjgl3-2d%E6%95%99%E7%A8%8B%232%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AA%97%E5%8F%A3/</link><pubDate>Sun, 21 Feb 2021 16:25:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-2-21-lwjgl3-2d%E6%95%99%E7%A8%8B%232%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AA%97%E5%8F%A3/</guid><description>&lt;p>随便创建一个类，直接在main方法里执行就可以。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>先初始化，如果初始化失败，抛出异常。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>glfwInit()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalStateException(&lt;span style="color:#e6db74">&amp;#34;Unable to initialize GLFW&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置窗口默认状态。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>glfwInit()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalStateException(&lt;span style="color:#e6db74">&amp;#34;Unable to initialize GLFW&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glfwDefaultWindowHints();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建窗口，设置长、宽、标题，如果创建失败抛出异常。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>glfwInit()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalStateException(&lt;span style="color:#e6db74">&amp;#34;Unable to initialize GLFW&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glfwDefaultWindowHints();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">long&lt;/span> window &lt;span style="color:#f92672">=&lt;/span> glfwCreateWindow(640, 480, &lt;span style="color:#e6db74">&amp;#34;My LWJGL Program&amp;#34;&lt;/span>, NULL, NULL);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (window &lt;span style="color:#f92672">==&lt;/span> NULL) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RuntimeException(&lt;span style="color:#e6db74">&amp;#34;Failed to create the GLFW window&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> glfwShowWindow(window);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建了一个窗口，但是很快就关闭了，可以在创建窗口后，使用死循环来保证窗口不会消失，当检测到窗口关闭时，退出循环。&lt;/p></description></item><item><title>[LWJGL3 2D教程]#1配置开发环境</title><link>https://blog.enaium.cn/post/2021-2-21-lwjgl3-2d%E6%95%99%E7%A8%8B%231%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Sun, 21 Feb 2021 16:12:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-2-21-lwjgl3-2d%E6%95%99%E7%A8%8B%231%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>&lt;p>进入&lt;a href="https://www.lwjgl.org/customize">LWJGL下载&lt;/a>&lt;/p>
&lt;p>我这里选：Natives全选 使用Gradle Presets选择minimal OpenGL 版本3.2.3。&lt;/p>
&lt;p>然后下面出现gradle的模板&lt;/p>
&lt;p>新建一个Gradle项目，就叫lwjgl吧。&lt;/p>
&lt;p>我的 build.gradle&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>plugins &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id &lt;span style="color:#e6db74">&amp;#39;java&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>group &lt;span style="color:#e6db74">&amp;#39;cn.enaium.learn&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>version &lt;span style="color:#e6db74">&amp;#39;1.0-SNAPSHOT&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.gradle.internal.os.OperatingSystem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>project&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ext&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">lwjglVersion&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;3.2.3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">switch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>OperatingSystem&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">current&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> OperatingSystem&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">LINUX&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> osArch &lt;span style="color:#f92672">=&lt;/span> System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;os.arch&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> project&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ext&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">lwjglNatives&lt;/span> &lt;span style="color:#f92672">=&lt;/span> osArch&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">startsWith&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;arm&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">||&lt;/span> osArch&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">startsWith&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;aarch64&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#e6db74">&amp;#34;natives-linux-${osArch.contains(&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">64&lt;/span>&lt;span style="color:#e6db74">&amp;#34;) || osArch.startsWith(&amp;#34;&lt;/span>armv8&lt;span style="color:#e6db74">&amp;#34;) ? &amp;#34;&lt;/span>arm64&lt;span style="color:#e6db74">&amp;#34; : &amp;#34;&lt;/span>arm32&lt;span style="color:#e6db74">&amp;#34;}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;natives-linux&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> OperatingSystem&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">MAC_OS&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> project&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ext&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">lwjglNatives&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;natives-macos&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> OperatingSystem&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">WINDOWS&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> project&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ext&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">lwjglNatives&lt;/span> &lt;span style="color:#f92672">=&lt;/span> System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;os.arch&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">contains&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;64&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#e6db74">&amp;#34;natives-windows&amp;#34;&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;natives-windows-x86&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>repositories &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mavenCentral&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dependencies &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> implementation &lt;span style="color:#a6e22e">platform&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl-bom:$lwjglVersion&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> implementation &lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> implementation &lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl-assimp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> implementation &lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl-glfw&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> implementation &lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl-openal&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> implementation &lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl-opengl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> implementation &lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl-stb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> runtimeOnly &lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl::$lwjglNatives&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> runtimeOnly &lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl-assimp::$lwjglNatives&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> runtimeOnly &lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl-glfw::$lwjglNatives&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> runtimeOnly &lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl-openal::$lwjglNatives&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> runtimeOnly &lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl-opengl::$lwjglNatives&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> runtimeOnly &lt;span style="color:#e6db74">&amp;#34;org.lwjgl:lwjgl-stb::$lwjglNatives&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[CF4M教程]#4写一个简单的Config</title><link>https://blog.enaium.cn/post/2021-2-21-cf4m%E6%95%99%E7%A8%8B%234%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84config/</link><pubDate>Sun, 21 Feb 2021 14:43:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-2-21-cf4m%E6%95%99%E7%A8%8B%234%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84config/</guid><description>&lt;p>创建一个ModuleConfig类。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ModuleConfig&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>加上Config注解。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Config&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Modules&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ModuleConfig&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>加入2个方法，分别写上Load和Save注解，分别是启动和退出的时候调用。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Config&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Modules&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ModuleConfig&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Load&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">load&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Save&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">save&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这是加载的方法。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Load&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">load&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (ModuleProvider module : CF4M.&lt;span style="color:#a6e22e">MODULE&lt;/span>.&lt;span style="color:#a6e22e">getAll&lt;/span>()) {&lt;span style="color:#75715e">//遍历所有Module&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JsonArray jsonArray &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> JsonArray();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jsonArray &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Gson().&lt;span style="color:#a6e22e">fromJson&lt;/span>(read(CF4M.&lt;span style="color:#a6e22e">CONFIG&lt;/span>.&lt;span style="color:#a6e22e">getByInstance&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>).&lt;span style="color:#a6e22e">getPath&lt;/span>()), JsonArray.&lt;span style="color:#a6e22e">class&lt;/span>);&lt;span style="color:#75715e">//读取配置文件并存入JsonArray&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (IOException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (JsonElement jsonElement : jsonArray) {&lt;span style="color:#75715e">//遍历JsonArray&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JsonObject jsonObject &lt;span style="color:#f92672">=&lt;/span> jsonElement.&lt;span style="color:#a6e22e">getAsJsonObject&lt;/span>();&lt;span style="color:#75715e">//获取JsonObject&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (module.&lt;span style="color:#a6e22e">getName&lt;/span>().&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> Gson().&lt;span style="color:#a6e22e">fromJson&lt;/span>(jsonObject, JsonObject.&lt;span style="color:#a6e22e">class&lt;/span>).&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsString&lt;/span>())) {&lt;span style="color:#75715e">//判断当前Module的名字，是否和Json对象里的名字一样&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (jsonObject.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;enable&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsBoolean&lt;/span>()) {&lt;span style="color:#75715e">//如果一样，获取Module是否打开&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> module.&lt;span style="color:#a6e22e">enable&lt;/span>();&lt;span style="color:#75715e">//打开的话就打开这个Module&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> module.&lt;span style="color:#a6e22e">setKey&lt;/span>(jsonObject.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;key&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getAsInt&lt;/span>());&lt;span style="color:#75715e">//获取配置的Key并修改Module的快捷键&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个是保存的方法。&lt;/p></description></item><item><title>[CF4M教程]#3写一个简单的Command</title><link>https://blog.enaium.cn/post/2021-2-18-cf4m%E6%95%99%E7%A8%8B%233%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84command/</link><pubDate>Thu, 18 Feb 2021 14:41:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-2-18-cf4m%E6%95%99%E7%A8%8B%233%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84command/</guid><description>&lt;p>创建一个简单的Command，就叫“ToggleCommand”吧。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ToggleCommand&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加一个Command注解，只有一个参数，所以value不用写，String数组类型，就是使用这个Command的命令，可以使用“h”或者“help”来使用，当然，也可以添加更多的。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Command&lt;/span>({&lt;span style="color:#e6db74">&amp;#34;t&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;toggle&amp;#34;&lt;/span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ToggleCommand&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>只需要一个方法，加上Exec注解，命令有几个参数，方法写几个参数，就可以。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Command&lt;/span>({&lt;span style="color:#e6db74">&amp;#34;t&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;toggle&amp;#34;&lt;/span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ToggleCommand&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Exec&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">exec&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;module&amp;#34;&lt;/span>) String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Object module &lt;span style="color:#f92672">=&lt;/span> CF4M.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">getModule&lt;/span>(name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (module &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CF4M.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">configuration&lt;/span>.&lt;span style="color:#a6e22e">message&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;The module with the name &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; does not exist.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CF4M.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">enable&lt;/span>(module);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>那么这个“configuration.message”是什么呢？&lt;/p>
&lt;p>我们需要重写配置接口，来进行文本输出，默认是在控制台输出，注意要加上“Configuration”&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ExampleConfig&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> IConfiguration {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">message&lt;/span>(String message) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MinecraftClient.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">inGameHud&lt;/span>.&lt;span style="color:#a6e22e">getChatHud&lt;/span>().&lt;span style="color:#a6e22e">addMessage&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> LiteralText(message));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">prefix&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;-&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>还可以重写prefix来进行更改，Command的前缀，默认是“`”，就是键盘左上角哪个斜点，
我们把它改成“-”。&lt;/p></description></item><item><title>[CF4M教程]#1准备</title><link>https://blog.enaium.cn/post/2021-2-16-cf4m%E6%95%99%E7%A8%8B%231%E5%87%86%E5%A4%87/</link><pubDate>Tue, 16 Feb 2021 13:02:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-2-16-cf4m%E6%95%99%E7%A8%8B%231%E5%87%86%E5%A4%87/</guid><description>&lt;p>访问&lt;a href="https://cf4m.enaium.cn/">CF4M文档&lt;/a>&lt;/p>
&lt;p>CF4M(Client Minecraft for Minecraft)是Minecraft的客户端框架可以它可以便捷的写Module,Setting,Command,Config.等等&lt;/p>
&lt;h2 id="导入">导入&lt;/h2>
&lt;p>添加maven仓库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>allprojects &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	repositories &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		maven &lt;span style="color:#f92672">{&lt;/span> url &lt;span style="color:#e6db74">&amp;#39;https://maven.enaium.cn&amp;#39;&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用最新的CF4M 写这个文档的时候最新版是 1.8.1&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>dependencies &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	implementation &lt;span style="color:#e6db74">&amp;#39;cn.enaium.cf4m:cf4m:1.8.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="fabric-导入">Fabric 导入&lt;/h3>
&lt;p>如果您用的是&lt;code>Fabric&lt;/code>请导入下面的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-groovy" data-lang="groovy">&lt;span style="display:flex;">&lt;span>dependencies &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	modImplementation &lt;span style="color:#e6db74">&amp;#39;cn.enaium.cf4m:cf4m-fabric:1.8.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>还需要您在&lt;code>fabric.mod.json&lt;/code>文件里添加&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;depends&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;cf4m&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;gt;=1.8.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当然还需用在&lt;code>mods&lt;/code>文件夹放入&lt;a href="https://github.com/cf4m/cf4m-fabric/releases">这个mod&lt;/a>&lt;/p>
&lt;h2 id="使用">使用&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	CF4M.&lt;span style="color:#a6e22e">run&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//参数1:当前的主类,参数2:客户端的目录(游戏目录/客户端名)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// CF4M.run(this, Minecraft.getMinecraft().mcDataDir.toString() + &amp;#34;/&amp;#34; + name);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">stop&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CF4M.&lt;span style="color:#a6e22e">stop&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在游戏的启动和停止的时候调用&lt;code>run&lt;/code>&lt;/p>
&lt;p>之后写的&lt;code>Module&lt;/code> &lt;code>Command&lt;/code> &lt;code>Config&lt;/code> 等等都要和主类在同一包下&lt;/p>
&lt;p>需要注意的是,如果您使用的是&lt;code>Mixin&lt;/code>注入的方式也要这样做. &lt;code>mixins&lt;/code>的包也不要和主类在同一个包下.&lt;/p>
&lt;p>✔正确示范&lt;/p>
&lt;pre tabindex="0">&lt;code>cn.enaium.example
----client.主类
--------modules
--------commands
--------configs
--------...
----mixins
&lt;/code>&lt;/pre>&lt;p>❌错误示范&lt;/p></description></item><item><title>[CF4M教程]#2写一个简单的Module</title><link>https://blog.enaium.cn/post/2021-2-16-cf4m%E6%95%99%E7%A8%8B%232%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84module/</link><pubDate>Tue, 16 Feb 2021 13:02:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-2-16-cf4m%E6%95%99%E7%A8%8B%232%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84module/</guid><description>&lt;p>创建一个&lt;code>Sprint&lt;/code>类.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Module&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Sprint&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Sprint&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>加上了一个&lt;code>@Module&lt;/code>注解.&lt;/p>
&lt;p>默认参数&lt;code>value&lt;/code> 就是Module的名字.&lt;/p>
&lt;h2 id="打开或关闭">打开或关闭&lt;/h2>
&lt;p>在加上2个方法 分别加上&lt;code>@Enable&lt;/code>和&lt;code>@Disbale&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Module&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Sprint&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Sprint&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Enable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onEnable&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;onEnable&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Disable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onDisable&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;onDisable&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在这个Module打开或者关闭的时候,分别调用&lt;code>onEnable&lt;/code>和&lt;code>onDisable&lt;/code>. 当然方法名可以随别写.&lt;/p>
&lt;h2 id="事件">事件&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Module&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Sprint&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Sprint&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Event&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onUpdate&lt;/span>(UpdateEvent updateEvent) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Minecraft.&lt;span style="color:#a6e22e">getMinecraft&lt;/span>().&lt;span style="color:#a6e22e">thePlayer&lt;/span>.&lt;span style="color:#a6e22e">setSprinting&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>);&lt;span style="color:#75715e">//设置疾跑状态为true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Enable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onEnable&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;onEnable&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Disable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onDisable&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;onDisable&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在已经打开这个Module的前提下,如果触发了这个事件,那么就会执行这个方法.&lt;/p>
&lt;h2 id="快捷键分类默认启用">快捷键,分类,默认启用&lt;/h2>
&lt;p>&lt;code>@Module&lt;/code>注解有4个值,其中3个值都有默认值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>String &lt;span style="color:#a6e22e">value&lt;/span>();&lt;span style="color:#75715e">//Module名无默认值,必须填写&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">enable&lt;/span>() &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;&lt;span style="color:#75715e">//如果需要默认启用的话那么就设置为true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">key&lt;/span>() &lt;span style="color:#66d9ef">default&lt;/span> 0;&lt;span style="color:#75715e">//快捷键&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Category &lt;span style="color:#a6e22e">category&lt;/span>() &lt;span style="color:#66d9ef">default&lt;/span> Category.&lt;span style="color:#a6e22e">NONE&lt;/span>;&lt;span style="color:#75715e">//分类&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置快捷键,需要注意的是,如果如果只有一个参数可以省略掉&lt;code>value&lt;/code>,因为某些参数有默认值,如果不指定哪一变量的值是什么的话,分不清哪个是哪个,就像在其他语言中有默认值的函数参数只能放在最后一样.&lt;/p></description></item><item><title>[BlocklyNukkit入门]#10高级工作台合成</title><link>https://blog.enaium.cn/post/2021-1-19-blocklynukkit%E5%85%A5%E9%97%A8%2310%E9%AB%98%E7%BA%A7%E5%B7%A5%E4%BD%9C%E5%8F%B0%E5%90%88%E6%88%90/</link><pubDate>Tue, 19 Jan 2021 18:34:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-1-19-blocklynukkit%E5%85%A5%E9%97%A8%2310%E9%AB%98%E7%BA%A7%E5%B7%A5%E4%BD%9C%E5%8F%B0%E5%90%88%E6%88%90/</guid><description>&lt;p>创建一个物品&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">item&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">buildItem&lt;/span>(&lt;span style="color:#ae81ff">280&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">item&lt;/span>.&lt;span style="color:#a6e22e">setCustomName&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;棍&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">setItemLore&lt;/span>(&lt;span style="color:#a6e22e">item&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;第一行;第二行;第三行;第四行&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加高级工作台合成，背包里有材料才会显示&lt;/p>
&lt;p>参数1类别，参数2描述，参数3材料，参数4合成的东西，参数5用时，参数6概率最大为1&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">addBNCraft&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;锻造&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;合成棍&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">Java&lt;/span>.&lt;span style="color:#a6e22e">to&lt;/span>([&lt;span style="color:#a6e22e">item&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">buildItem&lt;/span>(&lt;span style="color:#ae81ff">264&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>), &lt;span style="color:#a6e22e">item&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">buildItem&lt;/span>(&lt;span style="color:#ae81ff">41&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>)], &lt;span style="color:#e6db74">&amp;#34;cn.nukkit.item.Item[]&amp;#34;&lt;/span>), &lt;span style="color:#a6e22e">Java&lt;/span>.&lt;span style="color:#a6e22e">to&lt;/span>([&lt;span style="color:#a6e22e">item&lt;/span>], &lt;span style="color:#e6db74">&amp;#34;cn.nukkit.item.Item[]&amp;#34;&lt;/span>), &lt;span style="color:#ae81ff">160&lt;/span>, &lt;span style="color:#ae81ff">1.0&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开高级工作台合成&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">manager&lt;/span>.&lt;span style="color:#a6e22e">newCommand&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;dz&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;锻造&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">sender&lt;/span>, &lt;span style="color:#a6e22e">args&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">openBNCraftForPlayer&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;锻造&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">sender&lt;/span>.&lt;span style="color:#a6e22e">getPlayer&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[BlocklyNukkit入门]#9实体</title><link>https://blog.enaium.cn/post/2021-1-15-blocklynukkit%E5%85%A5%E9%97%A8%239%E5%AE%9E%E4%BD%93/</link><pubDate>Fri, 15 Jan 2021 15:03:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2021-1-15-blocklynukkit%E5%85%A5%E9%97%A8%239%E5%AE%9E%E4%BD%93/</guid><description>&lt;p>当玩家使用铁锭时,把掉落物传送到玩家的位置.&lt;/p>
&lt;p>事件&lt;code>PlayerInteractEvent&lt;/code> 玩家交互,比如使用等等.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">PlayerInteractEvent&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">player&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">e&lt;/span>.&lt;span style="color:#a6e22e">getPlayer&lt;/span>()&lt;span style="color:#75715e">//获取事件的玩家
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">item&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">getItemInHand&lt;/span>(&lt;span style="color:#a6e22e">player&lt;/span>)&lt;span style="color:#75715e">//获取玩家手中的物品
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">dropItems&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">getDropItems&lt;/span>(&lt;span style="color:#a6e22e">player&lt;/span>.&lt;span style="color:#a6e22e">getPosition&lt;/span>())&lt;span style="color:#75715e">//获取玩家所在世界的掉落物
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">item&lt;/span>.&lt;span style="color:#a6e22e">getId&lt;/span>() &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">265&lt;/span>) {&lt;span style="color:#75715e">//获取物品ID是否为铁锭
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">index&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">index&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">dropItems&lt;/span>.&lt;span style="color:#a6e22e">length&lt;/span>; &lt;span style="color:#a6e22e">index&lt;/span>&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">element&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">dropItems&lt;/span>[&lt;span style="color:#a6e22e">index&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">element&lt;/span>.&lt;span style="color:#a6e22e">setPosition&lt;/span>(&lt;span style="color:#a6e22e">player&lt;/span>.&lt;span style="color:#a6e22e">getPosition&lt;/span>())&lt;span style="color:#75715e">//设置物品位置到玩家的位置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[BlocklyNukkit入门]#8高级窗口</title><link>https://blog.enaium.cn/post/2020-10-31-blocklynukkit%E5%85%A5%E9%97%A8%238%E9%AB%98%E7%BA%A7%E7%AA%97%E5%8F%A3/</link><pubDate>Sat, 31 Oct 2020 23:10:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-10-31-blocklynukkit%E5%85%A5%E9%97%A8%238%E9%AB%98%E7%BA%A7%E7%AA%97%E5%8F%A3/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">manager&lt;/span>.&lt;span style="color:#a6e22e">newCommand&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">sender&lt;/span>, &lt;span style="color:#a6e22e">args&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span> &lt;span style="color:#f92672">=&lt;/span> window.&lt;span style="color:#a6e22e">getCustomWindowBuilder&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Title&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//创建一个高级窗口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">buildLabel&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Label&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//创建一个标签,参数1标题
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">buildInput&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Input&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Input&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//创建一个输入框,参数1标题,参数2提示
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">buildToggle&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Toggle&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//创建一个开关,参数1标题
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">buildDropdown&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Dropdown&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A;B;C;D;E;F;G&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//创建一个下拉框,参数1标题,参数2元素列表,用分号隔开
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">buildSlider&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Slider&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">0.0&lt;/span>, &lt;span style="color:#ae81ff">100.0&lt;/span>, &lt;span style="color:#ae81ff">1.0&lt;/span>);&lt;span style="color:#75715e">//创建一个滑块条,参数1标题,参数2最小的值,参数3最大的值,参数4刻度
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">buildStepSlider&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;StepSlider&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;A;B;C;D&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//创建一个 步骤滑块条,参数1标题,参数2元素列表,用分号隔开
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">showToPlayer&lt;/span>(&lt;span style="color:#a6e22e">sender&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Call&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">Call&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">logger&lt;/span>.&lt;span style="color:#a6e22e">info&lt;/span>(window.&lt;span style="color:#75715e">/* 获取元素,参数2元素位置,从0开始,参数3元素类型 */&lt;/span>&lt;span style="color:#a6e22e">getEventCustomVar&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;input&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">logger&lt;/span>.&lt;span style="color:#a6e22e">info&lt;/span>(window.&lt;span style="color:#a6e22e">getEventCustomVar&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;dropdown&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">logger&lt;/span>.&lt;span style="color:#a6e22e">info&lt;/span>(window.&lt;span style="color:#a6e22e">getEventCustomVar&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;slider&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">logger&lt;/span>.&lt;span style="color:#a6e22e">info&lt;/span>(window.&lt;span style="color:#a6e22e">getEventCustomVar&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;stepSlider&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">logger&lt;/span>.&lt;span style="color:#a6e22e">info&lt;/span>(window.&lt;span style="color:#a6e22e">getEventCustomVar&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;toggle&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[BlocklyNukkit入门]#7选择窗口</title><link>https://blog.enaium.cn/post/2020-10-31-blocklynukkit%E5%85%A5%E9%97%A8%237%E9%80%89%E6%8B%A9%E7%AA%97%E5%8F%A3/</link><pubDate>Sat, 31 Oct 2020 23:07:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-10-31-blocklynukkit%E5%85%A5%E9%97%A8%237%E9%80%89%E6%8B%A9%E7%AA%97%E5%8F%A3/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">manager&lt;/span>.&lt;span style="color:#a6e22e">newCommand&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">sender&lt;/span>, &lt;span style="color:#a6e22e">args&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span> &lt;span style="color:#f92672">=&lt;/span> window.&lt;span style="color:#a6e22e">getModalWindowBuilder&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Test&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Select&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//创建选择窗口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">setButton1&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;A&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//设置按钮1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">setButton2&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;B&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//设置按钮2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">showToPlayer&lt;/span>(&lt;span style="color:#a6e22e">sender&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Call&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//显示给玩家
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">Call&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">e&lt;/span>.&lt;span style="color:#a6e22e">getPlayer&lt;/span>().&lt;span style="color:#a6e22e">sendMessage&lt;/span>(window.&lt;span style="color:#a6e22e">getEventResponseModal&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>));&lt;span style="color:#75715e">//给玩家发送选择的按钮的消息
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[BlocklyNukkit入门]#6简单窗口</title><link>https://blog.enaium.cn/post/2020-10-31-blocklynukkit%E5%85%A5%E9%97%A8%236%E7%AE%80%E5%8D%95%E7%AA%97%E5%8F%A3/</link><pubDate>Sat, 31 Oct 2020 23:05:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-10-31-blocklynukkit%E5%85%A5%E9%97%A8%236%E7%AE%80%E5%8D%95%E7%AA%97%E5%8F%A3/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">manager&lt;/span>.&lt;span style="color:#a6e22e">newCommand&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;pa&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;pa&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">sender&lt;/span>, &lt;span style="color:#a6e22e">args&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">pa&lt;/span> &lt;span style="color:#f92672">=&lt;/span> window.&lt;span style="color:#a6e22e">getSimpleWindowBuilder&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Pa&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;选择一个玩家&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//创建一个简单的窗口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//遍历全服玩家
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">onlines&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Java&lt;/span>.&lt;span style="color:#a6e22e">type&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;cn.nukkit.Server&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getOnlinePlayers&lt;/span>().&lt;span style="color:#a6e22e">values&lt;/span>().&lt;span style="color:#a6e22e">toArray&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">index&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">index&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">onlines&lt;/span>.&lt;span style="color:#a6e22e">length&lt;/span>; &lt;span style="color:#a6e22e">index&lt;/span>&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">element&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">onlines&lt;/span>[&lt;span style="color:#a6e22e">index&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pa&lt;/span>.&lt;span style="color:#a6e22e">buildButton&lt;/span>(&lt;span style="color:#a6e22e">element&lt;/span>.&lt;span style="color:#a6e22e">getName&lt;/span>(), &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//添加按钮 参数1标题 参数2图片 没有留空
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pa&lt;/span>.&lt;span style="color:#a6e22e">showToPlayer&lt;/span>(&lt;span style="color:#a6e22e">sender&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Call&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//参数1显示的玩家 参数2函数名
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>});&lt;span style="color:#75715e">//创建命令
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">Call&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>)&lt;span style="color:#75715e">//显示给玩家的函数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">server&lt;/span>.&lt;span style="color:#a6e22e">getPlayer&lt;/span>(window.&lt;span style="color:#a6e22e">getEventResponseText&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>)&lt;span style="color:#75715e">/* 获取按下的按钮名 */&lt;/span>)&lt;span style="color:#75715e">/* 获取玩家 */&lt;/span>.&lt;span style="color:#a6e22e">sendMessage&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Pa!&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//给玩家发送消息
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[BlocklyNukkit入门]#5自定义物品</title><link>https://blog.enaium.cn/post/2020-10-19-blocklynukkit%E5%85%A5%E9%97%A8%235%E8%87%AA%E5%AE%9A%E4%B9%89%E7%89%A9%E5%93%81/</link><pubDate>Mon, 19 Oct 2020 19:51:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-10-19-blocklynukkit%E5%85%A5%E9%97%A8%235%E8%87%AA%E5%AE%9A%E4%B9%89%E7%89%A9%E5%93%81/</guid><description>&lt;h2 id="自定义物品">自定义物品&lt;/h2>
&lt;h3 id="创建一个木棍">创建一个木棍&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">item&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">buildItem&lt;/span>(&lt;span style="color:#ae81ff">280&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置名字&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">item&lt;/span>.&lt;span style="color:#a6e22e">setCustomName&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;棍&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置信息,用分号隔开换行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">setItemLore&lt;/span>(&lt;span style="color:#a6e22e">item&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;第一行;第二行;第三行;第四行&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加有序合成">添加有序合成&lt;/h3>
&lt;p>添加有序合成,设置G为橡木原木的键,G就代表原木.
参数1用字符串数组类型,3个字符串代表合成台的3行,每一行有3个物品,用键来代表,空格代表没物品.
参数2是合成后的物品.
参数3是追加结果物品，物品数组类型，比如合成蛋糕会返给3个桶.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">manager&lt;/span>.&lt;span style="color:#a6e22e">putEasy&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;G&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">buildItemFromBlock&lt;/span>(&lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">buildBlock&lt;/span>(&lt;span style="color:#ae81ff">17&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">addShapedCraft&lt;/span>(&lt;span style="color:#a6e22e">Java&lt;/span>.&lt;span style="color:#a6e22e">to&lt;/span>([&lt;span style="color:#e6db74">&amp;#34;G &amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;G &amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;G &amp;#34;&lt;/span>], &lt;span style="color:#e6db74">&amp;#34;java.lang.String[]&amp;#34;&lt;/span>), &lt;span style="color:#a6e22e">item&lt;/span>, &lt;span style="color:#a6e22e">Java&lt;/span>.&lt;span style="color:#a6e22e">to&lt;/span>([], &lt;span style="color:#e6db74">&amp;#34;cn.nukkit.item.Item[]&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="创建第二个木棍">创建第二个木棍&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">superItem&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">buildItem&lt;/span>(&lt;span style="color:#ae81ff">369&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">superItem&lt;/span>.&lt;span style="color:#a6e22e">setCustomName&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Super棍&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">setItemLore&lt;/span>(&lt;span style="color:#a6e22e">superItem&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;第五行;第六行;第七行;第八行;第九行&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加无序合成">添加无序合成&lt;/h3>
&lt;p>参数1就是需要合成的配方，参数2就是合成后的物品&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">addShapelessCraft&lt;/span>(&lt;span style="color:#a6e22e">Java&lt;/span>.&lt;span style="color:#a6e22e">to&lt;/span>([&lt;span style="color:#a6e22e">item&lt;/span>, &lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">buildItemFromBlock&lt;/span>(&lt;span style="color:#a6e22e">blockitem&lt;/span>.&lt;span style="color:#a6e22e">buildBlock&lt;/span>(&lt;span style="color:#ae81ff">41&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>))], &lt;span style="color:#e6db74">&amp;#34;cn.nukkit.item.Item[]&amp;#34;&lt;/span>), &lt;span style="color:#a6e22e">superItem&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[BlocklyNukkit入门]#4创建命令</title><link>https://blog.enaium.cn/post/2020-10-18-blocklynukkit%E5%85%A5%E9%97%A8%234%E5%88%9B%E5%BB%BA%E5%91%BD%E4%BB%A4/</link><pubDate>Sun, 18 Oct 2020 22:26:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-10-18-blocklynukkit%E5%85%A5%E9%97%A8%234%E5%88%9B%E5%BB%BA%E5%91%BD%E4%BB%A4/</guid><description>&lt;h2 id="喊话">喊话&lt;/h2>
&lt;p>创建一个命令&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">manager&lt;/span>.&lt;span style="color:#a6e22e">newCommand&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;shout&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;喊话&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">sender&lt;/span>, &lt;span style="color:#a6e22e">args&lt;/span>) { });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Python可以吧function改为方法名 比如&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>manager&lt;span style="color:#f92672">.&lt;/span>createCommand(&lt;span style="color:#e6db74">&amp;#34;shout&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">u&lt;/span>&lt;span style="color:#e6db74">&amp;#34;喊话&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;myCallBack&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">myCallBack&lt;/span>(sender, args):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pass&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>遍历全服玩家&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">alllist&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Java&lt;/span>.&lt;span style="color:#a6e22e">type&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;cn.nukkit.Server&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getOnlinePlayers&lt;/span>().&lt;span style="color:#a6e22e">values&lt;/span>().&lt;span style="color:#a6e22e">toArray&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>向全服玩家发送消息&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">alllist&lt;/span>.&lt;span style="color:#a6e22e">length&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">alllist&lt;/span>[&lt;span style="color:#a6e22e">i&lt;/span>].&lt;span style="color:#a6e22e">sendMessage&lt;/span>(&lt;span style="color:#a6e22e">args&lt;/span>[&lt;span style="color:#ae81ff">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[BlocklyNukkit入门]#3玩家进服欢迎</title><link>https://blog.enaium.cn/post/2020-10-3-blocklynukkit%E5%85%A5%E9%97%A8%233%E7%8E%A9%E5%AE%B6%E8%BF%9B%E6%9C%8D%E6%AC%A2%E8%BF%8E/</link><pubDate>Sat, 03 Oct 2020 21:09:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-10-3-blocklynukkit%E5%85%A5%E9%97%A8%233%E7%8E%A9%E5%AE%B6%E8%BF%9B%E6%9C%8D%E6%AC%A2%E8%BF%8E/</guid><description>&lt;h2 id="进服欢迎">进服欢迎&lt;/h2>
&lt;p>我们可以在bn的&lt;a href="http://www.blocklynukkit.info/1735257">文档&lt;/a>里查到&lt;code>PlayerJoinEvent&lt;/code>玩家进入服务器的事件 这样我们就可以很“方便”的编写插件了&lt;/p>
&lt;h3 id="javascript">JavaScript&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">PlayerJoinEvent&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">e&lt;/span>.&lt;span style="color:#a6e22e">getPlayer&lt;/span>().&lt;span style="color:#a6e22e">sendMessage&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;欢迎&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">e&lt;/span>.&lt;span style="color:#a6e22e">getPlayer&lt;/span>().&lt;span style="color:#a6e22e">getName&lt;/span>() &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;进入服务器！JavaScript&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="python">Python&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">PlayerJoinEvent&lt;/span>(e):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e&lt;span style="color:#f92672">.&lt;/span>getPlayer()&lt;span style="color:#f92672">.&lt;/span>sendMessage(&lt;span style="color:#e6db74">u&lt;/span>&lt;span style="color:#e6db74">&amp;#34;欢迎&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> e&lt;span style="color:#f92672">.&lt;/span>getPlayer()&lt;span style="color:#f92672">.&lt;/span>getName() &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">u&lt;/span>&lt;span style="color:#e6db74">&amp;#34;进入服务器！Python&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="lua">Lua&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">PlayerJoinEvent&lt;/span>(e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e:getPlayer():sendMessage(&lt;span style="color:#e6db74">&amp;#34;欢迎&amp;#34;&lt;/span> &lt;span style="color:#f92672">..&lt;/span> e:getPlayer():getName() &lt;span style="color:#f92672">..&lt;/span> &lt;span style="color:#e6db74">&amp;#34;进入服务器！Lua&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[BlocklyNukkit入门]#1配置开发环境</title><link>https://blog.enaium.cn/post/2020-10-3-blocklynukkit%E5%85%A5%E9%97%A8%231%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Sat, 03 Oct 2020 20:32:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-10-3-blocklynukkit%E5%85%A5%E9%97%A8%231%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>&lt;h2 id="配置nukkit">配置Nukkit&lt;/h2>
&lt;p>这里用&lt;a href="https://powernukkit.org/">PowerNukkit&lt;/a>举例&lt;/p>
&lt;p>下载好之后用&lt;code>java -jar nukkit.jar&lt;/code>运行客户端 语言选自选&lt;/p>
&lt;p>如果没正版把&lt;code>server.properties&lt;/code>里的&lt;code>xbox-auth=on&lt;/code>改成&lt;code>xbox-auth=off&lt;/code>&lt;/p>
&lt;h2 id="配置blocklynukkit">配置BlocklyNukkit&lt;/h2>
&lt;p>下载&lt;a href="https://www.mcbbs.net/thread-987302-1-1.html">BlocklyNukkit&lt;/a>放到&lt;code>./plugins&lt;/code>文件夹里面&lt;/p>
&lt;p>完成&lt;/p></description></item><item><title>[BlocklyNukkit入门]#2HelloWorld</title><link>https://blog.enaium.cn/post/2020-10-3-blocklynukkit%E5%85%A5%E9%97%A8%232helloworld/</link><pubDate>Sat, 03 Oct 2020 20:32:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-10-3-blocklynukkit%E5%85%A5%E9%97%A8%232helloworld/</guid><description>&lt;h2 id="编写插件">编写插件&lt;/h2>
&lt;p>&lt;code>BlocklyNukkit&lt;/code>以下简称&lt;code>bn&lt;/code>&lt;/p>
&lt;p>bn支持&lt;code>JavaScript&lt;/code>、&lt;code>Python&lt;/code>和&lt;code>Lua&lt;/code>等脚本语言 也有&lt;a href="https://tools.blocklynukkit.com/">图形编辑器&lt;/a>&lt;/p>
&lt;h3 id="javascript">JavaScript&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">logger&lt;/span>.&lt;span style="color:#a6e22e">info&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello JavaScript!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="python">Python&lt;/h3>
&lt;p>注意！ 如果有汉字等特殊字符要加上&lt;code># -*- encoding: utf-8 -*-&lt;/code>注释&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>print &lt;span style="color:#e6db74">u&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Hello Python!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="lua">Lua&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>logger:info(&lt;span style="color:#e6db74">&amp;#34;Hello Lua!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用插件">使用插件&lt;/h2>
&lt;p>放入文件夹&lt;code>./plugin/BlocklyNukkit&lt;/code>里面&lt;/p></description></item><item><title>[30天自制操作系统]第一天错误解决</title><link>https://blog.enaium.cn/post/2020-9-25-30%E5%A4%A9%E8%87%AA%E5%88%B6%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%80%E5%A4%A9%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/</link><pubDate>Fri, 25 Sep 2020 17:14:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-9-25-30%E5%A4%A9%E8%87%AA%E5%88%B6%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%80%E5%A4%A9%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/</guid><description>&lt;p>书里的&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-nas" data-lang="nas">; hello-os
; TAB=4

; 标准FAT12格式软盘专用的代码 Stand FAT12 format floppy code

		DB		0xeb, 0x4e, 0x90
		DB		&amp;#34;HELLOIPL&amp;#34;		; 启动扇区名称（8字节）
		DW		512				; 每个扇区（sector）大小（必须512字节）
		DB		1				; 簇（cluster）大小（必须为1个扇区）
		DW		1				; FAT起始位置（一般为第一个扇区）
		DB		2				; FAT个数（必须为2）
		DW		224				; 根目录大小（一般为224项）
		DW		2880			; 该磁盘大小（必须为2880扇区1440*1024/512）
		DB		0xf0			; 磁盘类型（必须为0xf0）
		DW		9				; FAT的长度（必须是9扇区）
		DW		18				; 一个磁道（track）有几个扇区（必须为18）
		DW		2				; 磁头数（必须是2）
		DD		0				; 不使用分区，必须是0
		DD		2880			; 重写一次磁盘大小
		DB		0,0,0x29		; 意义不明（固定）
		DD		0xffffffff		; （可能是）卷标号码
		DB		&amp;#34;HELLO-OS &amp;#34;	; 磁盘的名称（必须为11字节，不足填空格）
		DB		&amp;#34;FAT12 &amp;#34;		; 磁盘格式名称（必须是8字节，不足填空格）
		RESB	18				; 先空出18字节

; 程序主体

		DB		0xb8, 0x00, 0x00, 0x8e, 0xd0, 0xbc, 0x00, 0x7c
		DB		0x8e, 0xd8, 0x8e, 0xc0, 0xbe, 0x74, 0x7c, 0x8a
		DB		0x04, 0x83, 0xc6, 0x01, 0x3c, 0x00, 0x74, 0x09
		DB		0xb4, 0x0e, 0xbb, 0x0f, 0x00, 0xcd, 0x10, 0xeb
		DB		0xee, 0xf4, 0xeb, 0xfd

; 信息显示部分

		DB		0x0a, 0x0a		; 换行两次
		DB		&amp;#34;hello, world&amp;#34;
		DB		0x0a			; 换行
		DB		0

		RESB	RESB 0x1fe-$		; 填写0x00直到0x001fe

		DB		0x55, 0xaa

; 启动扇区以外部分输出

		DB		0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00
		RESB	4600
		DB		0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00
		RESB	1469432
&lt;/code>&lt;/pre>&lt;p>作者用的是nask 那么用nasm的话会出现 问题 &lt;code>.\hello.nas:41: error: attempt to reserve non-constant quantity of BSS space&lt;/code>&lt;/p></description></item><item><title>[Jekyll入门]#4条件、循环</title><link>https://blog.enaium.cn/post/2020-9-24-jekyll%E5%85%A5%E9%97%A8%234%E6%9D%A1%E4%BB%B6%E5%BE%AA%E7%8E%AF/</link><pubDate>Thu, 24 Sep 2020 19:58:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-9-24-jekyll%E5%85%A5%E9%97%A8%234%E6%9D%A1%E4%BB%B6%E5%BE%AA%E7%8E%AF/</guid><description>&lt;h2 id="条件">条件&lt;/h2>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/jekyll/4-1.png" alt="4-1">&lt;/p>
&lt;h2 id="循环">循环&lt;/h2>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/jekyll/4-2.png" alt="4-2">&lt;/p></description></item><item><title>[Jekyll入门]#3布局</title><link>https://blog.enaium.cn/post/2020-9-23-jekyll%E5%85%A5%E9%97%A8%233%E5%B8%83%E5%B1%80/</link><pubDate>Wed, 23 Sep 2020 19:14:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-9-23-jekyll%E5%85%A5%E9%97%A8%233%E5%B8%83%E5%B1%80/</guid><description>&lt;h2 id="布局">布局&lt;/h2>
&lt;h3 id="自定义">自定义&lt;/h3>
&lt;ol>
&lt;li>创建&lt;code>_layouts&lt;/code>目录&lt;/li>
&lt;li>创建布局&lt;code>post.html&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="布局使用布局">布局使用布局&lt;/h3>
&lt;p>在布局中也能使用其他布局&lt;/p>
&lt;h3 id="默认布局">默认布局&lt;/h3>
&lt;p>所有布局都会使用一个&lt;code>default&lt;/code>的布局&lt;/p></description></item><item><title>[Jekyll入门]#2配置、帖子、页面</title><link>https://blog.enaium.cn/post/2020-9-22-jekyll%E5%85%A5%E9%97%A8%232%E9%85%8D%E7%BD%AE%E5%B8%96%E5%AD%90%E9%A1%B5%E9%9D%A2/</link><pubDate>Tue, 22 Sep 2020 22:16:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-9-22-jekyll%E5%85%A5%E9%97%A8%232%E9%85%8D%E7%BD%AE%E5%B8%96%E5%AD%90%E9%A1%B5%E9%9D%A2/</guid><description>&lt;h2 id="配置">配置&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">title&lt;/span>: &lt;span style="color:#ae81ff">Myblog&lt;/span> &lt;span style="color:#75715e">#标题&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">email&lt;/span>: &lt;span style="color:#ae81ff">Myblog@example.com&lt;/span> &lt;span style="color:#75715e">#邮箱&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">description&lt;/span>: &lt;span style="color:#ae81ff">&amp;gt;-&lt;/span> &lt;span style="color:#75715e">#说明&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">This is my blog.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">baseurl&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#75715e">#仓库名 比如 myblog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">url&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#75715e">#域名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">twitter_username&lt;/span>: &lt;span style="color:#ae81ff">Myblog&lt;/span> &lt;span style="color:#75715e">#推特&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">github_username&lt;/span>: &lt;span style="color:#ae81ff">Myblog&lt;/span> &lt;span style="color:#75715e">#github&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Build settings&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">theme&lt;/span>: &lt;span style="color:#ae81ff">minima&lt;/span> &lt;span style="color:#75715e">#主题&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">plugins&lt;/span>: &lt;span style="color:#75715e">#插件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">jekyll-feed&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="帖子">帖子&lt;/h2>
&lt;h3 id="文件名">文件名&lt;/h3>
&lt;p>日期-文件名(标题) 用-代表空格&lt;/p>
&lt;h3 id="头部信息">头部信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>---
layout: post #布局
title: &amp;#34;My first post!&amp;#34; #标题
date: 2020-09-22 22:19 #时间
categroy: jekyll update #分类
---
&lt;/code>&lt;/pre>&lt;h2 id="页面">页面&lt;/h2>
&lt;h3 id="文件名-1">文件名&lt;/h3>
&lt;p>文件名和链接名一致&lt;/p>
&lt;h3 id="头部信息-1">头部信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>---
layout: page #布局
title: Donation #标题
permalink: /donation/ #永久链接
---
&lt;/code>&lt;/pre></description></item><item><title>[Jekyll入门]#1配置开发环境</title><link>https://blog.enaium.cn/post/2020-9-22-jekyll%E5%85%A5%E9%97%A8%231%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Tue, 22 Sep 2020 19:42:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-9-22-jekyll%E5%85%A5%E9%97%A8%231%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>&lt;h2 id="安装ruby">安装Ruby&lt;/h2>
&lt;p>&lt;a href="https://rubyinstaller.org/downloads/">RubyInstaller&lt;/a>&lt;/p>
&lt;h2 id="安装jekyll">安装Jekyll&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>jekyll new myblog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd myblog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jekyll serve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="预览">预览&lt;/h2>
&lt;p>http://127.0.0.1:4000/&lt;/p></description></item><item><title>Java插件化开发</title><link>https://blog.enaium.cn/post/2020-5-4-java%E6%8F%92%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/</link><pubDate>Mon, 04 May 2020 09:17:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-5-4-java%E6%8F%92%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/</guid><description>&lt;p>在java程序开发过程中. 可能需要加载插件的功能. 所以要动态加载Jar文件来实现插件的加载.&lt;/p>
&lt;p>我这边用了Kotlin&lt;/p>
&lt;h2 id="一-创建接口">一. 创建接口&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">PluginInitializer&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fun&lt;/span> &lt;span style="color:#a6e22e">onInitialize&lt;/span>()&lt;span style="color:#75715e">//插件初始化
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="二-加载插件">二. 加载插件&lt;/h2>
&lt;p>加载的插件可能会抛出什么异常所以要用try&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">val&lt;/span> file = File(&lt;span style="color:#e6db74">&amp;#34;plugins&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">val&lt;/span> plugins: ArrayList&amp;lt;PluginInitializer&amp;gt; = ArrayList()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">init&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">file&lt;/span>.listFiles().isNotEmpty()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (f &lt;span style="color:#66d9ef">in&lt;/span> &lt;span style="color:#66d9ef">file&lt;/span>.listFiles()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (f.name.endsWith(&lt;span style="color:#e6db74">&amp;#34;.jar&amp;#34;&lt;/span>) {&lt;span style="color:#75715e">//判断文件后缀是否为.jar
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">val&lt;/span> u = URLClassLoader(arrayOf&amp;lt;URL&amp;gt;(f.toURL()), &lt;span style="color:#a6e22e">Thread&lt;/span>.currentThread().contextClassLoader)&lt;span style="color:#75715e">//加载Jar
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> plugins.add(u.loadClass(&lt;span style="color:#e6db74">&amp;#34;cn.enaium.plugin.Test&amp;#34;&lt;/span>).newInstance() &lt;span style="color:#66d9ef">as&lt;/span> PluginInitializer)&lt;span style="color:#75715e">//加载主类
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (plugins.isNotEmpty()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (p &lt;span style="color:#66d9ef">in&lt;/span> plugins) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p.onInitialize()&lt;span style="color:#75715e">//初始化插件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (e: Exception) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="三-写插件">三. 写插件&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Test&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> PluginInitializer {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onInitialize&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;HELLO WORLD!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>导入Jar然后放入插件目录就可以加载了.&lt;/p></description></item><item><title>使用 SpringBoot+Vue 实现留言版</title><link>https://blog.enaium.cn/post/2020-4-20-%E4%BD%BF%E7%94%A8-springboot+vue-%E5%AE%9E%E7%8E%B0%E7%95%99%E8%A8%80%E7%89%88/</link><pubDate>Mon, 20 Apr 2020 17:29:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-4-20-%E4%BD%BF%E7%94%A8-springboot+vue-%E5%AE%9E%E7%8E%B0%E7%95%99%E8%A8%80%E7%89%88/</guid><description>&lt;h1 id="完成源码httpsgithubcomenaiumspringboot-vue-messageboard">&lt;a href="https://github.com/Enaium/SpringBoot-Vue-MessageBoard">完成源码&lt;/a>&lt;/h1>
&lt;h2 id="一新建vue项目和springboot项目">一.新建Vue项目和SpringBoot项目&lt;/h2>
&lt;h3 id="新建vue项目">新建Vue项目&lt;/h3>
&lt;blockquote>
&lt;ol>
&lt;li>新建文件夹&lt;code>SpringBoot-Vue-MessageBoard&lt;/code>&lt;/li>
&lt;li>创建Vue项目使用&lt;code>vue ui&lt;/code>命令(需要vue 3.0&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>选择刚才的目录&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-1.png" alt="2020-4-20-1">
名字为&lt;code>Vue&lt;/code>创建后V还是小写 创建后可以改为大写&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-2.png" alt="2020-4-20-2">
取消git初始化&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-3.png" alt="2020-4-20-3">
手动配置&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-4.png" alt="2020-4-20-4">
取消&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-5.png" alt="2020-4-20-5">
打开&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-6.png" alt="2020-4-20-6">
创建项目，不保存预设&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-7.png" alt="2020-4-20-7">&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;h3 id="新建springboot项目">新建SpringBoot项目&lt;/h3>
&lt;blockquote>
&lt;ol>
&lt;li>用IDEA打开&lt;code>SpringBoot-Vue-MessageBoard&lt;/code>这个目录&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-8.png" alt="2020-4-20-8">
&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-9.png" alt="2020-4-20-9">&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>创建SpringBoot项目&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>右键&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-10.png" alt="2020-4-20-10">
选择&lt;code>Spring Initializr&lt;/code>&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-11.png" alt="2020-4-20-11">
&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-12.png" alt="2020-4-20-12">
选择这四个&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-13.png" alt="2020-4-20-13">
名字改为&lt;code>SpringBoot&lt;/code>&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-14.png" alt="2020-4-20-14">&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;h2 id="二-后端">二. 后端&lt;/h2>
&lt;h3 id="配置applicationproperties">配置&lt;code>application.properties&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Mysql&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">spring.datasource.url&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">jdbc:mysql://localhost:3306/enaium?useUnicode=true&amp;amp;characterEncoding=UTF-8&amp;amp;serverTimezone=Asia/Shanghai&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">spring.datasource.username&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">spring.datasource.password&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">spring.datasource.driver-class-name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">com.mysql.cj.jdbc.Driver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">spring.jpa.show-sql&lt;/span>&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">spring.jpa.properties.hibernate.format_sql&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Server&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">server.port&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">8181&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="写实体类">写实体类&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> cn.enaium.message.entity;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> lombok.AllArgsConstructor;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> lombok.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> lombok.NoArgsConstructor;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> javax.persistence.Entity;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> javax.persistence.Id;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * Project: message
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * -----------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * Copyright © 2020 | Enaium | All rights reserved.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Entity&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@NoArgsConstructor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@AllArgsConstructor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Message&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Long id;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String author;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String message;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String time;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="实体类jpa">实体类Jpa&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> cn.enaium.message.repository;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.message.entity.Message;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.data.jpa.repository.JpaRepository;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * Project: message
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * -----------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * Copyright © 2020 | Enaium | All rights reserved.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">MessageRepository&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> JpaRepository&lt;span style="color:#f92672">&amp;lt;&lt;/span>Message, Long&lt;span style="color:#f92672">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="controller">Controller&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> cn.enaium.message.controller;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.message.entity.Message;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.message.repository.MessageRepository;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.beans.factory.annotation.Autowired;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.web.bind.annotation.GetMapping;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.web.bind.annotation.RequestMapping;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.web.bind.annotation.RequestParam;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.web.bind.annotation.RestController;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.text.SimpleDateFormat;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.util.Date;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.util.List;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * Project: message
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * -----------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * Copyright © 2020 | Enaium | All rights reserved.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@RestController&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Controller&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> MessageRepository messageRepository;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@RequestMapping&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/getMessages&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Message&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">getMessages&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> messageRepository.&lt;span style="color:#a6e22e">findAll&lt;/span>();&lt;span style="color:#75715e">//遍历所有留言&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@GetMapping&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/postMessage&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String &lt;span style="color:#a6e22e">postMessage&lt;/span>(&lt;span style="color:#a6e22e">@RequestParam&lt;/span> String author, &lt;span style="color:#a6e22e">@RequestParam&lt;/span> String message) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(author.&lt;span style="color:#a6e22e">replaceAll&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>) &lt;span style="color:#f92672">||&lt;/span> message.&lt;span style="color:#a6e22e">replaceAll&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;filed&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#75715e">//判断名字和留言是否为空&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> messageRepository.&lt;span style="color:#a6e22e">save&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> Message((&lt;span style="color:#66d9ef">long&lt;/span>) (messageRepository.&lt;span style="color:#a6e22e">findAll&lt;/span>().&lt;span style="color:#a6e22e">size&lt;/span>() &lt;span style="color:#f92672">+&lt;/span> 1),author,message,&lt;span style="color:#66d9ef">new&lt;/span> SimpleDateFormat(&lt;span style="color:#e6db74">&amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">format&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> Date())));&lt;span style="color:#75715e">//保存留言到数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;success&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="解决跨源请求问题">解决跨源请求问题&lt;/h3>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/springboot/2020-4-20-15.png" alt="2020-4-20-15">&lt;/p></description></item><item><title>[全民写端第二季]#2移植</title><link>https://blog.enaium.cn/post/2020-3-28-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%E7%AC%AC%E4%BA%8C%E5%AD%A3%232%E7%A7%BB%E6%A4%8D/</link><pubDate>Sat, 28 Mar 2020 18:43:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-3-28-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%E7%AC%AC%E4%BA%8C%E5%AD%A3%232%E7%A7%BB%E6%A4%8D/</guid><description>&lt;p>一. 把第一季的源码复制过来&lt;/p>
&lt;p>二. 注入&lt;/p>
&lt;ol>
&lt;li>注入run 和 top
&lt;img src="https://blog.enaium.cn/assets/minecraftclient2/2-1.png" alt="img">&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Mixin&lt;/span>(Minecraft.&lt;span style="color:#a6e22e">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MinecraftMixin&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Inject&lt;/span>(at &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">@At&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;RETURN&amp;#34;&lt;/span>), method &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;startGame&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">startGame&lt;/span>(CallbackInfo info) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FoxBase.&lt;span style="color:#a6e22e">instance&lt;/span>.&lt;span style="color:#a6e22e">run&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Inject&lt;/span>(at &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">@At&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;HEAD&amp;#34;&lt;/span>), method &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;shutdownMinecraftApplet&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">stop&lt;/span>(CallbackInfo info) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FoxBase.&lt;span style="color:#a6e22e">instance&lt;/span>.&lt;span style="color:#a6e22e">stop&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>注入&lt;code>EventUpdate&lt;/code> &lt;code>EventKeyboard&lt;/code> &lt;code>EventRender2D&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient2/2-2.png" alt="img">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Mixin&lt;/span>(Minecraft.&lt;span style="color:#a6e22e">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MinecraftMixin&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Inject&lt;/span>(at &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">@At&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;RETURN&amp;#34;&lt;/span>), method &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;dispatchKeypresses&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">dispatchKeypresses&lt;/span>(CallbackInfo info) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (Keyboard.&lt;span style="color:#a6e22e">getEventKeyState&lt;/span>() &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> Minecraft().&lt;span style="color:#a6e22e">getMinecraft&lt;/span>().&lt;span style="color:#a6e22e">currentScreen&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> EventKeyboard(Keyboard.&lt;span style="color:#a6e22e">getEventKey&lt;/span>() &lt;span style="color:#f92672">==&lt;/span> 0 &lt;span style="color:#f92672">?&lt;/span> Keyboard.&lt;span style="color:#a6e22e">getEventCharacter&lt;/span>() &lt;span style="color:#f92672">+&lt;/span> 256 : Keyboard,getEventKey()).&lt;span style="color:#a6e22e">call&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient2/2-3.png" alt="img">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Mixin&lt;/span>(EntityPlayerSP.&lt;span style="color:#a6e22e">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EntityPlayerSPMixin&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Inject&lt;/span>(at &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">@At&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;HEAD&amp;#34;&lt;/span>), method &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;onUpdate&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onUpdate&lt;/span>(CallbackInfo info) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> EventUpdate(Event.&lt;span style="color:#a6e22e">Type&lt;/span>.&lt;span style="color:#a6e22e">PRE&lt;/span>).&lt;span style="color:#a6e22e">call&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient2/2-4.png" alt="img">&lt;/p></description></item><item><title>[全民写端第二季]#1配置开发环境</title><link>https://blog.enaium.cn/post/2020-3-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%E7%AC%AC%E4%BA%8C%E5%AD%A3%231%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Wed, 25 Mar 2020 19:27:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-3-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%E7%AC%AC%E4%BA%8C%E5%AD%A3%231%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>&lt;ol>
&lt;li>下载&lt;a href="https://github.com/Enaium/FoxBase/tree/1.8.9-Forge-Example">FoxBase&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>如果你想修改名字可以在&lt;code>gradle.build&lt;/code>文件修改&lt;code>archivesBaseName&lt;/code>&lt;/p>
&lt;ol start="2">
&lt;li>从项目的根目录运行以下命令:
&lt;code>./gradlew setupDevWorkspace idea genIntellijRuns build&lt;/code>&lt;/li>
&lt;li>打开 IntelliJ IDEA.
&lt;img src="https://blog.enaium.cn/assets/minecraftclient2/1-1.png" alt="img">&lt;/li>
&lt;li>Open &lt;code>Open =&amp;gt; Select FoxBase folder&lt;/code>
&lt;img src="https://blog.enaium.cn/assets/minecraftclient2/1-2.png" alt="img">&lt;/li>
&lt;li>Click &lt;code>Import gradle project&lt;/code>
&lt;img src="https://blog.enaium.cn/assets/minecraftclient2/1-3.png" alt="img">&lt;/li>
&lt;li>添加VM options &lt;code>-Dfml.coreMods.load=cn.enaium.foxbase.injection.MixinLoader&lt;/code>
&lt;img src="https://blog.enaium.cn/assets/minecraftclient2/1-4.png" alt="img">&lt;/li>
&lt;/ol>
&lt;p>完成！&lt;/p></description></item><item><title>[全民写端]#12绘制ClickGUI</title><link>https://blog.enaium.cn/post/2020-3-14-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%2312-%E7%BB%98%E5%88%B6clickgui/</link><pubDate>Sat, 14 Mar 2020 17:52:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-3-14-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%2312-%E7%BB%98%E5%88%B6clickgui/</guid><description>&lt;p>一. 先复制进去&lt;code>FontUtils&lt;/code>&lt;/p>
&lt;h2 id="fontutils">FontUtils&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> cn.enaium.coreium.utils;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.client.Minecraft;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.client.gui.FontRenderer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.util.StringUtils;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">FontUtils&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> FontRenderer fontRenderer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setupFontUtils&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontRenderer &lt;span style="color:#f92672">=&lt;/span> Minecraft.&lt;span style="color:#a6e22e">getMinecraft&lt;/span>().&lt;span style="color:#a6e22e">fontRendererObj&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getStringWidth&lt;/span>(String text) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> fontRenderer.&lt;span style="color:#a6e22e">getStringWidth&lt;/span>(StringUtils.&lt;span style="color:#a6e22e">stripControlCodes&lt;/span>(text));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getFontHeight&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> fontRenderer.&lt;span style="color:#a6e22e">FONT_HEIGHT&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">drawString&lt;/span>(String text, &lt;span style="color:#66d9ef">int&lt;/span> x, &lt;span style="color:#66d9ef">int&lt;/span> y, &lt;span style="color:#66d9ef">int&lt;/span> color) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontRenderer.&lt;span style="color:#a6e22e">drawString&lt;/span>(text, x, y, color);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">drawStringWithShadow&lt;/span>(String text, &lt;span style="color:#66d9ef">double&lt;/span> x, &lt;span style="color:#66d9ef">double&lt;/span> y, &lt;span style="color:#66d9ef">int&lt;/span> color) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontRenderer.&lt;span style="color:#a6e22e">drawStringWithShadow&lt;/span>(text, (&lt;span style="color:#66d9ef">float&lt;/span>)x, (&lt;span style="color:#66d9ef">float&lt;/span>)y, color);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">drawCenteredString&lt;/span>(String text, &lt;span style="color:#66d9ef">int&lt;/span> x, &lt;span style="color:#66d9ef">int&lt;/span> y, &lt;span style="color:#66d9ef">int&lt;/span> color) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FontUtils.&lt;span style="color:#a6e22e">drawString&lt;/span>(text, x &lt;span style="color:#f92672">-&lt;/span> fontRenderer.&lt;span style="color:#a6e22e">getStringWidth&lt;/span>(text) &lt;span style="color:#f92672">/&lt;/span> 2, y, color);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">drawCenteredStringWithShadow&lt;/span>(String text, &lt;span style="color:#66d9ef">double&lt;/span> x, &lt;span style="color:#66d9ef">double&lt;/span> y, &lt;span style="color:#66d9ef">int&lt;/span> color) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FontUtils.&lt;span style="color:#a6e22e">drawStringWithShadow&lt;/span>(text, x &lt;span style="color:#f92672">-&lt;/span> (&lt;span style="color:#66d9ef">double&lt;/span>)(fontRenderer.&lt;span style="color:#a6e22e">getStringWidth&lt;/span>(text) &lt;span style="color:#f92672">/&lt;/span> 2), y, color);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">drawTotalCenteredString&lt;/span>(String text, &lt;span style="color:#66d9ef">int&lt;/span> x, &lt;span style="color:#66d9ef">int&lt;/span> y, &lt;span style="color:#66d9ef">int&lt;/span> color) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FontUtils.&lt;span style="color:#a6e22e">drawString&lt;/span>(text, x &lt;span style="color:#f92672">-&lt;/span> fontRenderer.&lt;span style="color:#a6e22e">getStringWidth&lt;/span>(text) &lt;span style="color:#f92672">/&lt;/span> 2, y &lt;span style="color:#f92672">-&lt;/span> fontRenderer.&lt;span style="color:#a6e22e">FONT_HEIGHT&lt;/span> &lt;span style="color:#f92672">/&lt;/span> 2, color);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">drawTotalCenteredStringWithShadow&lt;/span>(String text, &lt;span style="color:#66d9ef">double&lt;/span> x, &lt;span style="color:#66d9ef">double&lt;/span> y, &lt;span style="color:#66d9ef">int&lt;/span> color) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FontUtils.&lt;span style="color:#a6e22e">drawStringWithShadow&lt;/span>(text, x &lt;span style="color:#f92672">-&lt;/span> (&lt;span style="color:#66d9ef">double&lt;/span>)(fontRenderer.&lt;span style="color:#a6e22e">getStringWidth&lt;/span>(text) &lt;span style="color:#f92672">/&lt;/span> 2), y &lt;span style="color:#f92672">-&lt;/span> (&lt;span style="color:#66d9ef">double&lt;/span>)((&lt;span style="color:#66d9ef">float&lt;/span>)fontRenderer.&lt;span style="color:#a6e22e">FONT_HEIGHT&lt;/span> &lt;span style="color:#f92672">/&lt;/span> 2.&lt;span style="color:#a6e22e">0f&lt;/span>), color);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>二. 开始绘制&lt;/p></description></item><item><title>[全民写端]#11绘制主菜单</title><link>https://blog.enaium.cn/post/2020-3-3-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%2311%E7%BB%98%E5%88%B6%E4%B8%BB%E8%8F%9C%E5%8D%95/</link><pubDate>Tue, 03 Mar 2020 11:01:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-3-3-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%2311%E7%BB%98%E5%88%B6%E4%B8%BB%E8%8F%9C%E5%8D%95/</guid><description>&lt;p>一. 搜索&lt;code>GuiMainMenu&lt;/code>这个类&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/11-1.png" alt="11-1">&lt;/p>
&lt;p>二. 删除&lt;code>drawScreen&lt;/code>方法内所有&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/11-2.png" alt="11-2">&lt;/p>
&lt;p>三. 删除无用方法(显示为灰色的方法)&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/11-3.png" alt="11-3">&lt;/p>
&lt;p>四. 在&lt;code>drawScreen&lt;/code>方法绘制&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">drawScreen&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> mouseX, &lt;span style="color:#66d9ef">int&lt;/span> mouseY, &lt;span style="color:#66d9ef">float&lt;/span> partialTicks)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//获取屏幕长和高&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ScaledResolution s &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ScaledResolution(mc);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//绑定纹理(材质)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mc.&lt;span style="color:#a6e22e">getTextureManager&lt;/span>().&lt;span style="color:#a6e22e">bindTexture&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> ResourceLocation(&lt;span style="color:#e6db74">&amp;#34;coreium/background.jpg&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//绘制纹理(材质)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Gui.&lt;span style="color:#a6e22e">drawModalRectWithCustomSizedTexture&lt;/span>(0, 0, 0, 0, s.&lt;span style="color:#a6e22e">getScaledWidth&lt;/span>(), s.&lt;span style="color:#a6e22e">getScaledHeight&lt;/span>(), s.&lt;span style="color:#a6e22e">getScaledWidth&lt;/span>(), s.&lt;span style="color:#a6e22e">getScaledHeight&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//绘制标题&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontRendererObj.&lt;span style="color:#a6e22e">drawString&lt;/span>(Coreium.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span>, s.&lt;span style="color:#a6e22e">getScaledWidth&lt;/span>() &lt;span style="color:#f92672">/&lt;/span> 2 &lt;span style="color:#f92672">-&lt;/span> fontRendererObj.&lt;span style="color:#a6e22e">getStringWidth&lt;/span>(Coreium.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span>) &lt;span style="color:#f92672">/&lt;/span> 2, 30, &lt;span style="color:#66d9ef">new&lt;/span> Color(30, 0, 255).&lt;span style="color:#a6e22e">getRGB&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">drawScreen&lt;/span>(mouseX, mouseY, partialTicks);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>五. 放入纹理(材质)
&lt;img src="https://blog.enaium.cn/assets/minecraftclient/background.jpg" alt="background">&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>在&lt;code>assets.minecraft&lt;/code>新建一个&lt;code>coreium&lt;/code>包&lt;/li>
&lt;li>放入背景&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>完成
&lt;img src="https://blog.enaium.cn/assets/minecraftclient/11-4.png" alt="11-4">&lt;/p></description></item><item><title>用Gitee搭建私有Maven仓库</title><link>https://blog.enaium.cn/post/2020-3-1-%E7%94%A8gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89maven%E4%BB%93%E5%BA%93/</link><pubDate>Sun, 01 Mar 2020 19:53:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-3-1-%E7%94%A8gitee%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89maven%E4%BB%93%E5%BA%93/</guid><description>&lt;p>一. 新建仓库&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/others/2020-3-1-1.png" alt="2020-3-1-1">&lt;/p>
&lt;p>二. 上传index&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">html&lt;/span> &lt;span style="color:#a6e22e">lang&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;en&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">charset&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">content&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">title&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Enaium&amp;#39;s maven repository
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>三. 开通Gitee Pages&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/others/2020-3-1-2.png" alt="2020-3-1-2">&lt;/p>
&lt;p>四. 上传文件&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/others/2020-3-1-3.png" alt="2020-3-1-3">&lt;/p>
&lt;p>五. 部署&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/others/2020-3-1-4.png" alt="2020-3-1-4">&lt;/p>
&lt;p>⚠上传的文件部署后才能从Gitee Pages中下载到&lt;/p></description></item><item><title>[全民写端]#10绘制ToggleModules</title><link>https://blog.enaium.cn/post/2020-2-29%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%2310%E7%BB%98%E5%88%B6togglemodules/</link><pubDate>Sat, 29 Feb 2020 18:25:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-29%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%2310%E7%BB%98%E5%88%B6togglemodules/</guid><description>&lt;p>一.添加&lt;code>EventRender2D&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EventRender2D&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Event {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">EventRender2D&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(Type.&lt;span style="color:#a6e22e">PRE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>二.钩子&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>搜索&lt;code>GuiIngame&lt;/code>这个类打开&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/10-1.png" alt="10-1">&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>找到&lt;code>renderGameOverlay&lt;/code>这个类&lt;/li>
&lt;li>在&lt;code>if (this.mc.playerController.isSpectator()){[...]}else{[...]}&lt;/code>后面添加&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>GlStateManager.&lt;span style="color:#a6e22e">pushMatrix&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">new&lt;/span> EventRender2D().&lt;span style="color:#a6e22e">call&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GlStateManager.&lt;span style="color:#a6e22e">popMatrix&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>三. 绘制HUD&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>新建HUD类&lt;/li>
&lt;li>在onRender方法里面写绘制&lt;/li>
&lt;li>添加到loadMods&lt;code>this.addModule(new HUD());&lt;/code>&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> cn.enaium.coreium.module.render;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.coreium.event.EventTarget;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.coreium.event.events.EventRender2D;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.coreium.module.Category;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.coreium.module.Module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.lwjgl.input.Keyboard;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">HUD&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Module {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">HUD&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;HUD&amp;#34;&lt;/span>, Keyboard.&lt;span style="color:#a6e22e">KEY_P&lt;/span>, Category.&lt;span style="color:#a6e22e">RENDER&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@EventTarget&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onRender&lt;/span>(EventRender2D e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//字体&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FontRenderer fr &lt;span style="color:#f92672">=&lt;/span> mc.&lt;span style="color:#a6e22e">fontRendererObj&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//获取屏幕长和高&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ScaledResolution sr &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ScaledResolution(mc);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ArrayList&lt;span style="color:#f92672">&amp;lt;&lt;/span>Module&lt;span style="color:#f92672">&amp;gt;&lt;/span> modules &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArrayList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (Module m : Coreium.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">moduleManager&lt;/span>.&lt;span style="color:#a6e22e">getModules&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//过滤没打开的Module&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (m.&lt;span style="color:#a6e22e">isToggle&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modules.&lt;span style="color:#a6e22e">add&lt;/span>(m);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//根据Module名长度从长到短排序&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modules.&lt;span style="color:#a6e22e">sort&lt;/span>((o1, o2) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> fr.&lt;span style="color:#a6e22e">getStringWidth&lt;/span>(o2.&lt;span style="color:#a6e22e">getName&lt;/span>()) &lt;span style="color:#f92672">-&lt;/span> fr.&lt;span style="color:#a6e22e">getStringWidth&lt;/span>(o1.&lt;span style="color:#a6e22e">getName&lt;/span>()));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//第一个显示的位置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> index &lt;span style="color:#f92672">=&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (Module m : modules) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//获取当前要绘制的字体长度&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> mWidth &lt;span style="color:#f92672">=&lt;/span> fr.&lt;span style="color:#a6e22e">getStringWidth&lt;/span>(m.&lt;span style="color:#a6e22e">getName&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//绘制字体&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fr.&lt;span style="color:#a6e22e">drawStringWithShadow&lt;/span>(m.&lt;span style="color:#a6e22e">getName&lt;/span>(), sr.&lt;span style="color:#a6e22e">getScaledWidth&lt;/span>() &lt;span style="color:#f92672">-&lt;/span> mWidth &lt;span style="color:#f92672">-&lt;/span> 2, index, &lt;span style="color:#66d9ef">new&lt;/span> Color(0, 16, 255).&lt;span style="color:#a6e22e">getRGB&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//每绘制一个Module下一个Module的高度增加12&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index &lt;span style="color:#f92672">+=&lt;/span> 12;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>完成
&lt;img src="https://blog.enaium.cn/assets/minecraftclient/10-2.png" alt="10-2">&lt;/p></description></item><item><title>[全民写端]#9添加配置</title><link>https://blog.enaium.cn/post/2020-2-28-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%239%E6%B7%BB%E5%8A%A0%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 28 Feb 2020 12:21:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-28-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%239%E6%B7%BB%E5%8A%A0%E9%85%8D%E7%BD%AE/</guid><description>&lt;p>一. 添加Config&lt;/p>
&lt;blockquote>
&lt;p>下载&lt;a href="https://blog.enaium.cn/assets/minecraftclient/config.zip">Config&lt;/a>解压到你想要的目录&lt;/p>
&lt;/blockquote>
&lt;p>二.添加到Start&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ConfigManager configManager;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">start&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configManager &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ConfigManager();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Display.&lt;span style="color:#a6e22e">setTitle&lt;/span>(Coreium.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configManager.&lt;span style="color:#a6e22e">loadConfig&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">stop&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configManager.&lt;span style="color:#a6e22e">saveConfig&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[全民写端]#8简化代码</title><link>https://blog.enaium.cn/post/2020-2-26-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%238%E7%AE%80%E5%8C%96%E4%BB%A3%E7%A0%81/</link><pubDate>Wed, 26 Feb 2020 16:46:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-26-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%238%E7%AE%80%E5%8C%96%E4%BB%A3%E7%A0%81/</guid><description>&lt;p>一. 简化端名和版本&lt;/p>
&lt;p>在INSTANCE写&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Coreium&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String version &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;B1&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>就可以直接使用&lt;code>Coreium.INSTANCE.name&lt;/code>来获取&lt;/p>
&lt;p>二. 简化Module&lt;/p>
&lt;p>在Module类中加入&lt;code>protected Minecraft mc = Minecraft.getMinecraft();&lt;/code>
&lt;code>mc.thePlayer.setSprinting(true);&lt;/code>直接使用&lt;/p>
&lt;p>三. 简化addSetting&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">addSetting&lt;/span>(Setting setting) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Coreium.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">settingManager&lt;/span>.&lt;span style="color:#a6e22e">addSetting&lt;/span>(setting);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>[全民写端]#7添加Command</title><link>https://blog.enaium.cn/post/2020-2-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%237%E6%B7%BB%E5%8A%A0command/</link><pubDate>Tue, 25 Feb 2020 18:34:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%237%E6%B7%BB%E5%8A%A0command/</guid><description>&lt;p>一. 添加Command&lt;/p>
&lt;blockquote>
&lt;p>下载&lt;a href="https://blog.enaium.cn/assets/minecraftclient/command.zip">Command&lt;/a>解压到你想要的目录&lt;/p>
&lt;/blockquote>
&lt;p>二. 添加到Start&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> CommandManager commandManager;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">start&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> commandManager &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CommandManager();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Display.&lt;span style="color:#a6e22e">setTitle&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Coreium&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> moduleManager.&lt;span style="color:#a6e22e">loadMods&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> commandManager.&lt;span style="color:#a6e22e">loadCommands&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>三. 在ModuleManager中添加getModule方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Module &lt;span style="color:#a6e22e">getModule&lt;/span>(String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (Module m : modules) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (m.&lt;span style="color:#a6e22e">getName&lt;/span>().&lt;span style="color:#a6e22e">equalsIgnoreCase&lt;/span>(name))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>四. 新建一个PlayerUtils类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> cn.enaium.coreium.utils;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> com.mojang.realmsclient.gui.ChatFormatting;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.client.Minecraft;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">PlayerUtils&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">tellPlayer&lt;/span>(String text) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Minecraft.&lt;span style="color:#a6e22e">getMinecraft&lt;/span>().&lt;span style="color:#a6e22e">ingameGUI&lt;/span>.&lt;span style="color:#a6e22e">getChatGUI&lt;/span>().&lt;span style="color:#a6e22e">printChatMessage&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> ChatComponentText(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ChatFormatting.&lt;span style="color:#a6e22e">WHITE&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> ChatFormatting.&lt;span style="color:#a6e22e">RED&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Coreium&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> ChatFormatting.&lt;span style="color:#a6e22e">WHITE&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;] &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> text));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>五. 修复Command中的错误&lt;/p></description></item><item><title>[全民写端]#6添加Setting</title><link>https://blog.enaium.cn/post/2020-2-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%236%E6%B7%BB%E5%8A%A0setting/</link><pubDate>Tue, 25 Feb 2020 18:00:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%236%E6%B7%BB%E5%8A%A0setting/</guid><description>&lt;p>一. 写Setting类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> cn.enaium.coreium.setting;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.coreium.module.Module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.util.ArrayList;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Setting&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Module module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> toggle;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">double&lt;/span> currentValueDouble, minValueDouble, maxValueDouble;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> currentValueInt, minValueInt, maxValueInt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> currentValueFloat, minValueFloat, maxValueFloat;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> ArrayList&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> modes;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String currentMode;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Category category;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">enum&lt;/span> Category {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BOOLEAN,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> VALUE_INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> VALUE_DOUBLE,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> VALUE_FLOAT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MODE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Setting&lt;/span>(Module module, String name, &lt;span style="color:#66d9ef">boolean&lt;/span> toggle) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">module&lt;/span> &lt;span style="color:#f92672">=&lt;/span> module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toggle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> toggle;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Category.&lt;span style="color:#a6e22e">BOOLEAN&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Setting&lt;/span>(Module module, String name, &lt;span style="color:#66d9ef">int&lt;/span> currentValueInt, &lt;span style="color:#66d9ef">int&lt;/span> minValueInt, &lt;span style="color:#66d9ef">int&lt;/span> maxValueInt) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">module&lt;/span> &lt;span style="color:#f92672">=&lt;/span> module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">currentValueInt&lt;/span> &lt;span style="color:#f92672">=&lt;/span> currentValueInt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">minValueInt&lt;/span> &lt;span style="color:#f92672">=&lt;/span> minValueInt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">maxValueInt&lt;/span> &lt;span style="color:#f92672">=&lt;/span> maxValueInt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Category.&lt;span style="color:#a6e22e">VALUE_INT&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Setting&lt;/span>(Module module, String name, &lt;span style="color:#66d9ef">double&lt;/span> currentValueDouble, &lt;span style="color:#66d9ef">double&lt;/span> minValueDouble, &lt;span style="color:#66d9ef">double&lt;/span> maxValueDouble) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">module&lt;/span> &lt;span style="color:#f92672">=&lt;/span> module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">currentValueDouble&lt;/span> &lt;span style="color:#f92672">=&lt;/span> currentValueDouble;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">minValueDouble&lt;/span> &lt;span style="color:#f92672">=&lt;/span> minValueDouble;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">maxValueDouble&lt;/span> &lt;span style="color:#f92672">=&lt;/span> maxValueDouble;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Category.&lt;span style="color:#a6e22e">VALUE_DOUBLE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Setting&lt;/span>(Module module, String name, &lt;span style="color:#66d9ef">float&lt;/span> currentValueFloat, &lt;span style="color:#66d9ef">float&lt;/span> minValueFloat, &lt;span style="color:#66d9ef">float&lt;/span> maxValueFloat) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">module&lt;/span> &lt;span style="color:#f92672">=&lt;/span> module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">currentValueFloat&lt;/span> &lt;span style="color:#f92672">=&lt;/span> currentValueFloat;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">minValueFloat&lt;/span> &lt;span style="color:#f92672">=&lt;/span> minValueFloat;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">maxValueFloat&lt;/span> &lt;span style="color:#f92672">=&lt;/span> maxValueFloat;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Category.&lt;span style="color:#a6e22e">VALUE_FLOAT&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Setting&lt;/span>(Module m, String n, String currentMode, ArrayList&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> modes) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">module&lt;/span> &lt;span style="color:#f92672">=&lt;/span> m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> n;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">currentMode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> currentMode;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">modes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> modes;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Category.&lt;span style="color:#a6e22e">MODE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Module &lt;span style="color:#a6e22e">getModule&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setModule&lt;/span>(Module module) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">module&lt;/span> &lt;span style="color:#f92672">=&lt;/span> module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getName&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setName&lt;/span>(String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isToggle&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> toggle;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setToggle&lt;/span>(&lt;span style="color:#66d9ef">boolean&lt;/span> toggle) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toggle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> toggle;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">double&lt;/span> &lt;span style="color:#a6e22e">getCurrentValueDouble&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> currentValueDouble;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setCurrentValueDouble&lt;/span>(&lt;span style="color:#66d9ef">double&lt;/span> currentValueDouble) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">currentValueDouble&lt;/span> &lt;span style="color:#f92672">=&lt;/span> currentValueDouble;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">double&lt;/span> &lt;span style="color:#a6e22e">getMinValueDouble&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> minValueDouble;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setMinValueDouble&lt;/span>(&lt;span style="color:#66d9ef">double&lt;/span> minValueDouble) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">minValueDouble&lt;/span> &lt;span style="color:#f92672">=&lt;/span> minValueDouble;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">double&lt;/span> &lt;span style="color:#a6e22e">getMaxValueDouble&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> maxValueDouble;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setMaxValueDouble&lt;/span>(&lt;span style="color:#66d9ef">double&lt;/span> maxValueDouble) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">maxValueDouble&lt;/span> &lt;span style="color:#f92672">=&lt;/span> maxValueDouble;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getCurrentValueInt&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> currentValueInt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setCurrentValueInt&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> currentValueInt) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">currentValueInt&lt;/span> &lt;span style="color:#f92672">=&lt;/span> currentValueInt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getMinValueInt&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> minValueInt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setMinValueInt&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> minValueInt) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">minValueInt&lt;/span> &lt;span style="color:#f92672">=&lt;/span> minValueInt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getMaxValueInt&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> maxValueInt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setMaxValueInt&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> maxValueInt) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">maxValueInt&lt;/span> &lt;span style="color:#f92672">=&lt;/span> maxValueInt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> &lt;span style="color:#a6e22e">getCurrentValueFloat&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> currentValueFloat;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setCurrentValueFloat&lt;/span>(&lt;span style="color:#66d9ef">float&lt;/span> currentValueFloat) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">currentValueFloat&lt;/span> &lt;span style="color:#f92672">=&lt;/span> currentValueFloat;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> &lt;span style="color:#a6e22e">getMinValueFloat&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> minValueFloat;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setMinValueFloat&lt;/span>(&lt;span style="color:#66d9ef">float&lt;/span> minValueFloat) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">minValueFloat&lt;/span> &lt;span style="color:#f92672">=&lt;/span> minValueFloat;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> &lt;span style="color:#a6e22e">getMaxValueFloat&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> maxValueFloat;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setMaxValueFloat&lt;/span>(&lt;span style="color:#66d9ef">float&lt;/span> maxValueFloat) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">maxValueFloat&lt;/span> &lt;span style="color:#f92672">=&lt;/span> maxValueFloat;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ArrayList&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">getModes&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> modes;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setModes&lt;/span>(ArrayList&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> modes) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">modes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> modes;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getCurrentMode&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> currentMode;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setCurrentMode&lt;/span>(String currentMode) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">currentMode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> currentMode;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isBoolean&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(Category.&lt;span style="color:#a6e22e">BOOLEAN&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isValueInt&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(Category.&lt;span style="color:#a6e22e">VALUE_INT&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isValueDouble&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(Category.&lt;span style="color:#a6e22e">VALUE_DOUBLE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isValueFloat&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(Category.&lt;span style="color:#a6e22e">VALUE_FLOAT&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isMode&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(Category.&lt;span style="color:#a6e22e">MODE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>二. 写SettingManager&lt;/p></description></item><item><title>[全民写端]#5自动疾跑</title><link>https://blog.enaium.cn/post/2020-2-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%235%E8%87%AA%E5%8A%A8%E7%96%BE%E8%B7%91/</link><pubDate>Tue, 25 Feb 2020 13:40:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%235%E8%87%AA%E5%8A%A8%E7%96%BE%E8%B7%91/</guid><description>&lt;p>一. 新建Sprint类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> cn.enaium.coreium.module.movement;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.coreium.event.EventTarget;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.coreium.event.events.EventUpdate;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.coreium.module.Category;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.coreium.module.Module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.client.Minecraft;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.lwjgl.input.Keyboard;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Sprint&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Module {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Sprint&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Sprint&amp;#34;&lt;/span>, Keyboard.&lt;span style="color:#a6e22e">KEY_V&lt;/span>, Category.&lt;span style="color:#a6e22e">MOVEMENT&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@EventTarget&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onUpdate&lt;/span>(EventUpdate e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Minecraft.&lt;span style="color:#a6e22e">getMinecraft&lt;/span>().&lt;span style="color:#a6e22e">thePlayer&lt;/span>.&lt;span style="color:#a6e22e">setSprinting&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>二. 添加到&lt;code>loadModules&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">loadMods&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">addModule&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> Sprint());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>三. 运行&lt;/p>
&lt;p>按V打开&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/5-1.png" alt="5-1">&lt;/p></description></item><item><title>[全民写端]#4添加Event和Module</title><link>https://blog.enaium.cn/post/2020-2-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%234%E6%B7%BB%E5%8A%A0event%E5%92%8Cmodule/</link><pubDate>Tue, 25 Feb 2020 13:03:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%234%E6%B7%BB%E5%8A%A0event%E5%92%8Cmodule/</guid><description>&lt;p>一. 添加Event&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>下载&lt;a href="https://blog.enaium.cn/assets/minecraftclient/event.zip">Event&lt;/a>解压到你想要的目录&lt;/li>
&lt;li>修改Event&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/4-1.png" alt="4-1">&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;p>二. 钩子&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>在&lt;code>EntityPlayerSP&lt;/code>类里面找到&lt;code>onUpdate&lt;/code>方法 在第一行写 &lt;code>new EventUpdate().call();&lt;/code>&lt;/li>
&lt;li>在&lt;code>Minecraft&lt;/code>类里找到&lt;code>runTick&lt;/code>方法 找到&lt;code>Keyboard.next()&lt;/code>循环 在&lt;code>if (k == 62 &amp;amp;&amp;amp; this.entityRenderer != null)&lt;/code>下面写 &lt;code>new EventKeyboard(k).call();&lt;/code>&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onUpdate&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> EventUpdate().&lt;span style="color:#a6e22e">call&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (k &lt;span style="color:#f92672">==&lt;/span> 62 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">entityRenderer&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">entityRenderer&lt;/span>.&lt;span style="color:#a6e22e">switchUseShader&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> EventKeyboard(k).&lt;span style="color:#a6e22e">call&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">currentScreen&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>三. 写Category枚举&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> cn.enaium.coreium.module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">enum&lt;/span> Category {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> COMBAT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RENDER,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MOVEMENT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PLAYER,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OTHER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>四. 写Module类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> cn.enaium.coreium.module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> cn.enaium.coreium.Coreium;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Module&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> toggle;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> keyCode;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Category category;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Module&lt;/span>(String name, &lt;span style="color:#66d9ef">int&lt;/span> keyCode, Category category) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toggle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">keyCode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> keyCode;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> category;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isToggle&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> toggle;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setToggle&lt;/span>(&lt;span style="color:#66d9ef">boolean&lt;/span> toggle) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toggle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> toggle;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getName&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setName&lt;/span>(String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getKeyCode&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> keyCode;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setKeyCode&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> keyCode) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">keyCode&lt;/span> &lt;span style="color:#f92672">=&lt;/span> keyCode;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Category &lt;span style="color:#a6e22e">getCategory&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> category;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setCategory&lt;/span>(Category category) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> category;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">toggle&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toggle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toggle&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toggle&lt;/span>) onEnable(); &lt;span style="color:#66d9ef">else&lt;/span> onDisable();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onEnable&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Coreium.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">eventManager&lt;/span>.&lt;span style="color:#a6e22e">register&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onDisable&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Coreium.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">eventManager&lt;/span>.&lt;span style="color:#a6e22e">unregister&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>五. 写ModuleManager类&lt;/p></description></item><item><title>[全民写端]#3添加OptiFine</title><link>https://blog.enaium.cn/post/2020-2-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%233%E6%B7%BB%E5%8A%A0optifine/</link><pubDate>Tue, 25 Feb 2020 12:16:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%233%E6%B7%BB%E5%8A%A0optifine/</guid><description>&lt;p>一. 下载&lt;a href="https://optifinesource.co.uk/">Optifine&lt;/a>本站&lt;a href="https://blog.enaium.cn/assets/minecraftclient/OptiFine.zip">下载&lt;/a>&lt;/p>
&lt;p>二. 删除src\minecraft所有内容 将Optifine解压进去(保留你写的包)&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/2-1.png" alt="3-1">&lt;/p>
&lt;p>三. 根据#2的方法修改Minecraft类调用Start 和 Stop&lt;/p>
&lt;p>四. 导入&lt;a href="https://blog.enaium.cn/assets/minecraftclient/vecmath-1.5.2.jar">vecmath&lt;/a>包&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/3-2.png" alt="3-2">&lt;/p>
&lt;p>五. 修改类名&lt;code>net.minecraft.client.renderer&lt;/code>包下的&lt;code>EntityRenderer$1&lt;/code> &lt;code>EntityRenderer$2&lt;/code> 改为&lt;code>EntityRenderer1&lt;/code> &lt;code>EntityRenderer2&lt;/code>&lt;/p>
&lt;p>六. 启动&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/3-3.png" alt="3-3">&lt;/p></description></item><item><title>[全民写端]#2设置启动和停止</title><link>https://blog.enaium.cn/post/2020-2-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%232%E8%AE%BE%E7%BD%AE%E5%90%AF%E5%8A%A8%E5%92%8C%E5%81%9C%E6%AD%A2/</link><pubDate>Tue, 25 Feb 2020 10:42:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-25-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%232%E8%AE%BE%E7%BD%AE%E5%90%AF%E5%8A%A8%E5%92%8C%E5%81%9C%E6%AD%A2/</guid><description>&lt;p>一. 写启动和停止&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>在你想要的地方新建一个类&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>改为enum
写一个枚举 INSTANCE;
写两个方法分别是 start 和 stop&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">enum&lt;/span> Coreium {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> INSTANCE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">start&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">stop&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;ol start="2">
&lt;li>在启动和退出游戏的时候调用这2个类&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>搜索&lt;code>Minecraft&lt;/code>
&lt;img src="https://blog.enaium.cn/assets/minecraftclient/2-1.png" alt="2-1">
找到&lt;code>startGame&lt;/code>在这个方法在最后面写&lt;code>Coreium.INSTANCE.start();&lt;/code>
找到&lt;code>shutdownMinecraftApplet&lt;/code>在&lt;code>logger.info(&amp;quot;Stopping!&amp;quot;);&lt;/code>后面写&lt;code>Coreium.INSTANCE.stop();&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">renderGlobal&lt;/span>.&lt;span style="color:#a6e22e">makeEntityOutlineShader&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Coreium.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">start&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">registerMetadataSerializers&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">shutdownMinecraftApplet&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">shutdownStream&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logger.&lt;span style="color:#a6e22e">info&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Stopping!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Coreium.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">stop&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>二. 修改游戏标题&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>在&lt;code>Minecraft&lt;/code>类中我们搜索&lt;code>Display.Title&lt;/code>会找到&lt;code>Display.setTitle(&amp;quot;Minecraft 1.8.8&amp;quot;);&lt;/code>这个就是修改标题&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>我们现在知道了修改标题的方法&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>在start里面写&lt;code>Display.setTitle(&amp;quot;Coreium&amp;quot;);&lt;/code>就是吧标题改为&lt;code>Coreium&lt;/code>&lt;/li>
&lt;li>运行&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/2-2.png" alt="2-2">&lt;/p>
&lt;/blockquote>
&lt;/blockquote></description></item><item><title>[全民写端]#1配置开发环境</title><link>https://blog.enaium.cn/post/2020-2-24-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%231%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Mon, 24 Feb 2020 18:36:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-24-%E5%85%A8%E6%B0%91%E5%86%99%E7%AB%AF%231%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>&lt;p>需要 JAVA8+ 和 IDEA&lt;/p>
&lt;p>一. 下载&lt;a href="http://www.modcoderpack.com/">MCP&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-1.png" alt="1-1">&lt;/p>
&lt;p>二. 解压到你想要的路径,文件名你想起什么名字就起什么名字&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-2.png" alt="1-2">&lt;/p>
&lt;p>三. 打开文件夹运行&lt;code>decompile.bat&lt;/code>,Linux 或者Mac OS 运行&lt;code>decompile.sh&lt;/code>(这一步必有正版启动器,而且默认目录%APPDATA%.minecraft\versions 必须要有MC1.8.8版本,运行前还要运行过1.8.8MC.)&lt;/p>
&lt;p>反编译完成
&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-3.png" alt="1-3">&lt;/p>
&lt;p>四. 导入IDEA&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-4.png" alt="1-4">&lt;/li>
&lt;li>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-5.png" alt="1-5">&lt;/li>
&lt;li>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-6.png" alt="1-6">&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-7.png" alt="1-7">&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Finish&lt;/li>
&lt;li>填写你的导入的目录&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-8.png" alt="1-8">
这个目录将你以后的所有写端项目的目录,删除后除了重新设置目录你将无法读取到lib,(以后新建项目不会提示填写目录).&lt;/p>
&lt;/blockquote>
&lt;ol start="10">
&lt;li>提示的1.6什么什么的错误信息不用管点OK就行了&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>五. 设置项目&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-9.png" alt="1-9">&lt;/li>
&lt;li>全部点×&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-10.png" alt="1-10">&lt;/p>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-11.png" alt="1-11">&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-12.png" alt="1-12">&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;p>六. 运行&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>打开Start&lt;/li>
&lt;li>选右上角的Setup SDK选中1.8
&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-16.png" alt="1-16">&lt;/li>
&lt;li>运行
&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-17.png" alt="1-17">&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>七. 启动设置&lt;/p>
&lt;blockquote>
&lt;blockquote>
&lt;p>运行后出现错误需要设置启动
&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-18.png" alt="1-18">
&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-19.png" alt="1-19">&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;p>&lt;code>-Djava.library.path=versions\1.8.8\1.8.8-natives&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraftclient/1-20.png" alt="1-20">&lt;/p></description></item><item><title>Minecraft Fabric 进阶教程 #2 绘制界面</title><link>https://blog.enaium.cn/post/2020-2-24-minecraft-fabric-%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B-%232-%E7%BB%98%E5%88%B6%E7%95%8C%E9%9D%A2/</link><pubDate>Mon, 24 Feb 2020 16:27:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-24-minecraft-fabric-%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B-%232-%E7%BB%98%E5%88%B6%E7%95%8C%E9%9D%A2/</guid><description>&lt;p>绘制界面不需用注入Mixin&lt;/p>
&lt;h2 id="新建一个类">新建一个类&lt;/h2>
&lt;p>&lt;code>ExampleGui.java&lt;/code>&lt;/p>
&lt;p>继承&lt;code>Screen&lt;/code>构造器&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">ExampleGui&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> LiteralText(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="绘制">绘制&lt;/h2>
&lt;p>这是绘制一个背景&lt;/p>
&lt;p>绘制背景这种全部覆盖时要在super上面不然按钮或者其他东西会被背景盖住&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">render&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> mouseX, &lt;span style="color:#66d9ef">int&lt;/span> mouseY, &lt;span style="color:#66d9ef">float&lt;/span> delta) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> renderBackground();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">render&lt;/span>(mouseX, mouseY, delta);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们也可以添加一个按钮&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">init&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">init&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">addButton&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> ButtonWidget(20,20,100,20,&lt;span style="color:#e6db74">&amp;#34;Done&amp;#34;&lt;/span>,(action)&lt;span style="color:#f92672">-&amp;gt;&lt;/span>{ 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开界面&lt;/p>
&lt;p>将上集绘制的按钮的action改为打开这个界面&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Inject&lt;/span>(at &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">@At&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;HEAD&amp;#34;&lt;/span>), method &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;init()V&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">init&lt;/span>(CallbackInfo info) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">addButton&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> ButtonWidget(20,20,200,20,&lt;span style="color:#e6db74">&amp;#34;233&amp;#34;&lt;/span>,(action)&lt;span style="color:#f92672">-&amp;gt;&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		MinecraftClient.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">openScreen&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> ExampleGui());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开界面后我们发现只能用ESC来关闭界面&lt;/p>
&lt;p>接下来我们要写返回上一界面的功能&lt;/p>
&lt;p>在构造器里传入上个界面Screen&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> Screen screen;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">ExampleGui&lt;/span>(Screen screen) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> LiteralText(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">screen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> screen;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开界面 &lt;code>MinecraftClient.getInstance().openScreen(new ExampleGui(this));&lt;/code>&lt;/p>
&lt;p>将按钮的action写为&lt;code>MinecraftClient.getInstance().openScreen(screen);&lt;/code>&lt;/p>
&lt;p>运行&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric/s2-1.png" alt="2-1">&lt;/p></description></item><item><title>Minecraft Fabric 进阶教程 #1 绘制按钮</title><link>https://blog.enaium.cn/post/2020-2-24-minecraft-fabric-%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B-%231-%E7%BB%98%E5%88%B6%E6%8C%89%E9%92%AE/</link><pubDate>Mon, 24 Feb 2020 13:56:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-24-minecraft-fabric-%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B-%231-%E7%BB%98%E5%88%B6%E6%8C%89%E9%92%AE/</guid><description>&lt;h2 id="在mixin包里新建一个类">在Mixin包里新建一个类&lt;/h2>
&lt;p>注入到&lt;code>TitleScreen.class&lt;/code>里&lt;/p>
&lt;p>注入到这个类的init的方法的头部也就是最上面所以at是&lt;code>HEAD&lt;/code>&lt;/p>
&lt;p>因为init方法没有参数所以方法就是&lt;code>init()V&lt;/code>&lt;/p>
&lt;p>因为注入都有一个回调信息所以要有一个回调参数&lt;code>CallbackInfo&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Mixin&lt;/span>(TitleScreen.&lt;span style="color:#a6e22e">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">TitleMixin&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">@Inject&lt;/span>(at &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">@At&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;HEAD&amp;#34;&lt;/span>), method &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;init()V&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">init&lt;/span>(CallbackInfo info) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用IDEA反编译&lt;code>TitleScreen.class&lt;/code>init方法可以看到&lt;code>this.addButton&lt;/code>这个就是添加按钮&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric/s1-1.png" alt="1-1">&lt;/p>
&lt;p>所以我们要在Mixin里面写添加按钮&lt;/p>
&lt;p>需要继承Screen类&lt;/p>
&lt;p>按照提示生成构造器就行了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#a6e22e">TitleMixin&lt;/span>(Text title) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">super&lt;/span>(title);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="现在添加按钮">现在添加按钮&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Inject&lt;/span>(at &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">@At&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;HEAD&amp;#34;&lt;/span>), method &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;init()V&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">init&lt;/span>(CallbackInfo info) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">addButton&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> ButtonWidget(20,20,200,20,&lt;span style="color:#e6db74">&amp;#34;233&amp;#34;&lt;/span>,(action)&lt;span style="color:#f92672">-&amp;gt;&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;By Enaium&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在x20 y20处绘制一个长200高20(高必须为20)的按钮标题为“233”点击触发action输出&lt;code>By Enaium&lt;/code>&lt;/p>
&lt;p>添加到mixin.json&lt;/p>
&lt;p>我们运行一下看看&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric/s1-2.png" alt="1-2">&lt;/p>
&lt;p>成功&lt;/p></description></item><item><title>星露谷MOD开发教程 #1 配置开发环境</title><link>https://blog.enaium.cn/post/2020-2-9-%E6%98%9F%E9%9C%B2%E8%B0%B7-mod-%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B-%231-%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Sun, 09 Feb 2020 19:00:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-9-%E6%98%9F%E9%9C%B2%E8%B0%B7-mod-%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B-%231-%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>&lt;h2 id="要求">要求&lt;/h2>
&lt;ul>
&lt;li>安装了&lt;a href="smapi.io/">SMAPI&lt;/a>&lt;/li>
&lt;li>IDE (推荐使用Visual Studio或者Rider)&lt;/li>
&lt;/ul>
&lt;h2 id="准备">准备&lt;/h2>
&lt;ol>
&lt;li>创建一个类库项目&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/stardewvalley/2020-2-9-1.png" alt="">&lt;/p>
&lt;ol start="2">
&lt;li>引用&lt;a href="https://www.nuget.org/packages/Pathoschild.Stardew.ModBuildConfig">Pathoschild.Stardew.ModBuildConfig&lt;/a>Nuget包&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/stardewvalley/2020-2-9-2.png" alt="">&lt;/p>
&lt;ol start="3">
&lt;li>创建一个类&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/stardewvalley/2020-2-9-3.png" alt="">&lt;/p>
&lt;ol start="4">
&lt;li>新建&lt;code>manifest.json&lt;/code>文件&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/stardewvalley/2020-2-9-4.png" alt="">&lt;/p>
&lt;p>格式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;lt;your project name&amp;gt;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Author&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;lt;your name&amp;gt;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1.0.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Description&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;lt;One or two sentences about the mod&amp;gt;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;UniqueID&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;lt;your name&amp;gt;.&amp;lt;your project name&amp;gt;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;EntryDll&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;lt;your project name&amp;gt;.dll&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;MinimumApiVersion&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2.10.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;UpdateKeys&amp;#34;&lt;/span>: []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="开始">开始&lt;/h2>
&lt;p>继承父类&lt;code>Mod&lt;/code>&lt;/p>
&lt;p>添加一个事件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> StardewModdingAPI;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> StardewModdingAPI.Events;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> NewMod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">NewMod&lt;/span> : Mod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Entry(IModHelper helper)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> helper.Events.Input.ButtonPressed += onButtonPressed;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> onButtonPressed(&lt;span style="color:#66d9ef">object&lt;/span> sender, ButtonPressedEventArgs e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//如果世界没有完成返回&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(!Context.IsWorldReady)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//输出玩家按下的某个键&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Monitor.Log(e.Button.ToString(),LogLevel.Debug);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样一个mod就完成了&lt;/p></description></item><item><title>使用WPF设计工具-MaterialDesignInXamlToolkit</title><link>https://blog.enaium.cn/post/2020-2-3-%E4%BD%BF%E7%94%A8wpf%E8%AE%BE%E8%AE%A1%E5%B7%A5%E5%85%B7-materialdesigninxamltoolkit/</link><pubDate>Mon, 03 Feb 2020 10:18:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-2-3-%E4%BD%BF%E7%94%A8wpf%E8%AE%BE%E8%AE%A1%E5%B7%A5%E5%85%B7-materialdesigninxamltoolkit/</guid><description>&lt;p>&lt;a href="https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit">MaterialDesignInXamlToolkit&lt;/a>&lt;/p>
&lt;h2 id="安装nuget包materialdesignthemes">安装Nuget包&lt;code>MaterialDesignThemes&lt;/code>&lt;/h2>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/csharp/2020-2-3-1.png" alt="Nuget">&lt;/p>
&lt;h2 id="添加到appxaml">添加到&lt;code>App.xaml&lt;/code>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">ResourceDictionary&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">ResourceDictionary.MergedDictionaries&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">ResourceDictionary&lt;/span> &lt;span style="color:#a6e22e">Source&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">ResourceDictionary&lt;/span> &lt;span style="color:#a6e22e">Source&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">ResourceDictionary&lt;/span> &lt;span style="color:#a6e22e">Source&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">ResourceDictionary&lt;/span> &lt;span style="color:#a6e22e">Source&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">ResourceDictionary.MergedDictionaries&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">ResourceDictionary&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://blog.enaium.cn/assets/csharp/2020-2-3-2.png" alt="img 2">&lt;/p>
&lt;h2 id="加入window中">加入&lt;code>Window&lt;/code>中&lt;/h2>
&lt;p>&lt;code>xmlns:materialDesign=&amp;quot;http://materialdesigninxaml.net/winfx/xaml/themes&amp;quot;&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/csharp/2020-2-3-3.png" alt="img 3">&lt;/p>
&lt;p>完成&lt;/p></description></item><item><title>Minecraft Fabric Client 教程 #5 添加Event、Sprint和ToggleCommand</title><link>https://blog.enaium.cn/post/2020-1-20-minecraft-fabric-client-%E6%95%99%E7%A8%8B-%235-%E6%B7%BB%E5%8A%A0eventsprint%E5%92%8Ctogglecommand/</link><pubDate>Mon, 20 Jan 2020 13:27:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-1-20-minecraft-fabric-client-%E6%95%99%E7%A8%8B-%235-%E6%B7%BB%E5%8A%A0eventsprint%E5%92%8Ctogglecommand/</guid><description>&lt;h2 id="添加event">添加Event&lt;/h2>
&lt;p>下载&lt;a href="https://blog.enaium.cn/assets/fabricclient/event.zip">&lt;img src="https://blog.enaium.cn/assets/icon/zip.png" alt="event.zip">&lt;/a>&lt;/p>
&lt;p>放在&lt;code>cn.enaium.excel&lt;/code>里&lt;/p>
&lt;p>然后在&lt;code>Excel.java&lt;/code>里面添加&lt;code>EventManager&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">enum&lt;/span> Excel {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> EventManager eventManager;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onEnable&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eventManager &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> EventManager();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> commandManager &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CommandManager();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> moduleManager &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ModuleManager();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> moduleManager.&lt;span style="color:#a6e22e">loadModules&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>Module.java&lt;/code>里面添加&lt;code>Event&lt;/code>、&lt;code>onEnable()&lt;/code>、&lt;code>onDisable()&lt;/code>、&lt;code>Toggle()&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Module&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">Toggle&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toggled&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toggled&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toggled&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> onEnable();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> onDisable();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onEnable&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Excel.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">eventManager&lt;/span>.&lt;span style="color:#a6e22e">register&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onDisable&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Excel.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>.&lt;span style="color:#a6e22e">eventManager&lt;/span>.&lt;span style="color:#a6e22e">unregister&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="注入mixin">注入Mixin&lt;/h3>
&lt;p>在 &lt;code>ClientPlayerEntityMixin.java&lt;/code> 里面添加以下内容&lt;/p></description></item><item><title>解决Gradle不能构建问题</title><link>https://blog.enaium.cn/post/2020-1-12-%E8%A7%A3%E5%86%B3gradle%E4%B8%8D%E8%83%BD%E6%9E%84%E5%BB%BA%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 12 Jan 2020 15:26:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-1-12-%E8%A7%A3%E5%86%B3gradle%E4%B8%8D%E8%83%BD%E6%9E%84%E5%BB%BA%E9%97%AE%E9%A2%98/</guid><description>&lt;p>绝大数的gradle项目用的都是私服并且换上镜像也没用因为私服的东西镜像没有&lt;/p>
&lt;p>而且非私服的速度也不是很慢&lt;/p>
&lt;p>我这里找到了一个解决办法就是用国际浏览手机自带的国际上网功能&lt;/p>
&lt;p>购买国际上网的国内流量也不贵也就是5元3G左右&lt;/p>
&lt;p>购买流量后开启它然后打开手机热点给电脑供网 USB/热点 供网&lt;/p>
&lt;p>开始构建&lt;/p>
&lt;p>虽然不是很快但是总比以前的不能构建强很多&lt;/p></description></item><item><title>Minecraft Fabric Client 教程 #4 添加Modules</title><link>https://blog.enaium.cn/post/2020-1-9-minecraft-fabric-client-%E6%95%99%E7%A8%8B-%234-%E6%B7%BB%E5%8A%A0modules/</link><pubDate>Thu, 09 Jan 2020 10:58:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-1-9-minecraft-fabric-client-%E6%95%99%E7%A8%8B-%234-%E6%B7%BB%E5%8A%A0modules/</guid><description>&lt;p>在&lt;code>cn.enaium.excel&lt;/code>下新建一个包&lt;code>module&lt;/code>&lt;/p>
&lt;p>在&lt;code>module&lt;/code>包里新建&lt;code>Module&lt;/code>、&lt;code>ModuleManager&lt;/code>这2个类 然后再新建一个&lt;code>Category&lt;/code>枚举&lt;/p>
&lt;p>&lt;code>Module&lt;/code>内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> cn.enaium.excel.module;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @Author Enaium
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @Date 2020/1/9 11:03
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Module&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Category category;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> toggled;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Module&lt;/span>(String name,Category category) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> category;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toggled&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getName&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setName&lt;/span>(String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Category &lt;span style="color:#a6e22e">getCategory&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> category;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setCategory&lt;/span>(Category category) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">category&lt;/span> &lt;span style="color:#f92672">=&lt;/span> category;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isToggled&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> toggled;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setToggled&lt;/span>(&lt;span style="color:#66d9ef">boolean&lt;/span> toggled) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toggled&lt;/span> &lt;span style="color:#f92672">=&lt;/span> toggled;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>ModuleManager&lt;/code> 内容&lt;/p></description></item><item><title>解决IDEA Push rejected问题</title><link>https://blog.enaium.cn/post/2020-1-6-%E8%A7%A3%E5%86%B3idea-push-rejected%E9%97%AE%E9%A2%98/</link><pubDate>Mon, 06 Jan 2020 11:25:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-1-6-%E8%A7%A3%E5%86%B3idea-push-rejected%E9%97%AE%E9%A2%98/</guid><description>&lt;p>&lt;img src="https://blog.enaium.cn/assets/others/2020-1-6-2.png" alt="a">&lt;/p>
&lt;p>右击目录选择&lt;code>Git Bash Here&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/others/2020-1-6-4.png" alt="a">&lt;/p>
&lt;p>依次输入以下命令&lt;/p>
&lt;pre tabindex="0">&lt;code>git pull
git pull origin master
git pull origin master --allow-unrelated-histories
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://blog.enaium.cn/assets/others/2020-1-6-1.png" alt="a">&lt;/p>
&lt;p>再次推送&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/others/2020-1-6-3.png" alt="a">&lt;/p></description></item><item><title>Minecraft Fabric Client 教程 #3 添加自定义Command</title><link>https://blog.enaium.cn/post/2020-1-4-minecraft-fabric-client-%E6%95%99%E7%A8%8B-%233-%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89command/</link><pubDate>Sun, 05 Jan 2020 12:52:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-1-4-minecraft-fabric-client-%E6%95%99%E7%A8%8B-%233-%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89command/</guid><description>&lt;h2 id="添加chatutils">添加ChatUtils&lt;/h2>
&lt;p>先在&lt;code>cn.enaium.excel&lt;/code>里新建一个包&lt;code>utils&lt;/code>&lt;/p>
&lt;p>然后创建一个&lt;code>ChatUtils.java&lt;/code>类&lt;/p>
&lt;p>内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> cn.enaium.excel.utils;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.client.MinecraftClient;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.client.gui.hud.ChatHud;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.text.LiteralText;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> net.minecraft.text.Text;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @Author Enaium
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @Date 2020/1/5 12:54
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ChatUtils&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">component&lt;/span>(Text component)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ChatHud chatHud &lt;span style="color:#f92672">=&lt;/span> MinecraftClient.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">inGameHud&lt;/span>.&lt;span style="color:#a6e22e">getChatHud&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LiteralText prefix &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> LiteralText(&lt;span style="color:#e6db74">&amp;#34;\u00a7c[\u00a76Excel\u00a7c]\u00a7r &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chatHud.&lt;span style="color:#a6e22e">addMessage&lt;/span>(prefix.&lt;span style="color:#a6e22e">append&lt;/span>(component));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">message&lt;/span>(String message)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> component(&lt;span style="color:#66d9ef">new&lt;/span> LiteralText(message));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="添加自定义command">添加自定义command&lt;/h2>
&lt;p>先在&lt;code>cn.enaium.excel&lt;/code>里新建一个包&lt;code>command&lt;/code>&lt;/p>
&lt;p>下载&lt;a href="https://blog.enaium.cn/assets/fabricclient/command.zip">&lt;img src="https://blog.enaium.cn/assets/icon/zip.png" alt="command.zip">&lt;/a>&lt;/p>
&lt;p>将压缩包里面的内容全部放进去&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabricclient/2020-1-5-1.png" alt="a">&lt;/p>
&lt;p>然后再&lt;code>Excel.java&lt;/code>里添加&lt;code>command&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> CommandManager commandManager;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onEnable&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> commandManager &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CommandManager();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> commandManager.&lt;span style="color:#a6e22e">loadCommands&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注入mixin">注入Mixin&lt;/h2>
&lt;p>在mixin包里面新建一个&lt;code>ClientPlayerEntityMixin.java&lt;/code>类&lt;/p></description></item><item><title>Minecraft Fabric Client 教程 #2 修改文件和目录名添加run和stop</title><link>https://blog.enaium.cn/post/2020-1-4-minecraft-fabric-client-%E6%95%99%E7%A8%8B-%232-%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95%E5%90%8D%E6%B7%BB%E5%8A%A0run%E5%92%8Cstop/</link><pubDate>Sat, 04 Jan 2020 23:08:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-1-4-minecraft-fabric-client-%E6%95%99%E7%A8%8B-%232-%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95%E5%90%8D%E6%B7%BB%E5%8A%A0run%E5%92%8Cstop/</guid><description>&lt;h2 id="修改-包名json文件添加run-stop">修改 包名、json文件、添加run stop&lt;/h2>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabricclient/2020-1-4-1.png" alt="a">&lt;/p>
&lt;p>首先先修改包名&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabricclient/2020-1-4-2.png" alt="a">&lt;/p>
&lt;p>将&lt;code>ExampleMod.java&lt;/code>改为&lt;code>ExcelInitializer.java&lt;/code>&lt;/p>
&lt;p>修改json文件&lt;code>modid.mixins.json&lt;/code>和&lt;code>fabric.mod.json&lt;/code>&lt;/p>
&lt;p>将&lt;code>modid.mixins.json&lt;/code>改为&lt;code>excel.mixins.json&lt;/code>&lt;/p>
&lt;p>&lt;code>excel.mixins.json&lt;/code>内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;required&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;package&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;cn.enaium.excel.mixin&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;compatibilityLevel&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;JAVA_8&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;mixins&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;client&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ExampleMixin&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;MinecraftClientMixin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;injectors&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;defaultRequire&amp;#34;&lt;/span>: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>package&lt;/code>mixin的包名&lt;/p>
&lt;p>&lt;code>client&lt;/code> mixin的类名&lt;/p>
&lt;p>&lt;code>compatibilityLevel&lt;/code> java版本&lt;/p>
&lt;p>&lt;code>fabric.mod.json&lt;/code>内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;schemaVersion&amp;#34;&lt;/span>: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;excel&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Excel&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;description&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;!&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;authors&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Enaium!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;contact&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;homepage&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://fabricmc.net/&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;sources&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://github.com/FabricMC/fabric-example-mod&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;license&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;CC0-1.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;icon&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;assets/excel/icon.png&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;environment&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;entrypoints&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;main&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;cn.enaium.excel.ExcelInitializer&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;mixins&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;excel.mixins.json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;depends&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fabricloader&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;gt;=0.7.2&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fabric&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;minecraft&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1.15.x&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;suggests&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;flamingo&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>id&lt;/code>就是modid
&lt;code>name&lt;/code>mod名字
&lt;code>description&lt;/code>说明
&lt;code>authors&lt;/code>作者
&lt;code>mixins&lt;/code>mixinjson的文件名
&lt;code>license&lt;/code>如果有开源开源协议
&lt;code>main&lt;/code>ModInitializer的文件名&lt;/p></description></item><item><title>Minecraft Fabric Client 教程 #1 配置开发环境</title><link>https://blog.enaium.cn/post/2020-1-4-minecraft-fabric-client-%E6%95%99%E7%A8%8B-%231-%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Sat, 04 Jan 2020 22:08:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-1-4-minecraft-fabric-client-%E6%95%99%E7%A8%8B-%231-%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>&lt;p>需要 JAVA8+ 和 IDE&lt;/p>
&lt;p>首先下载github 上的项目 &lt;a href="https://github.com/FabricMC/fabric-example-mod/">fabric-example-mod&lt;/a> 有以下方法:&lt;/p>
&lt;ul>
&lt;li>用IDE 克隆 库&lt;/li>
&lt;li>直接导入IDE&lt;/li>
&lt;li>运行bat &lt;code>./gradlew idea&lt;/code>然后导入IDE&lt;/li>
&lt;/ul>
&lt;p>推荐使用IDEA&lt;/p></description></item><item><title>Minecraft 搭建一个Paper服务器</title><link>https://blog.enaium.cn/post/2020-1-2-minecraft-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AApaper%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Thu, 02 Jan 2020 18:44:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2020-1-2-minecraft-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AApaper%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>&lt;h2 id="下载核心">下载核心&lt;/h2>
&lt;p>&lt;a href="https://papermc.io/downloads">Downloads – PaperMC&lt;/a>&lt;/p>
&lt;p>我这里是1.15.1的版本&lt;/p>
&lt;p>选最新版本就行了&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraft/2020-1-2-1.png" alt="a">&lt;/p>
&lt;h2 id="运行">运行&lt;/h2>
&lt;p>下载好后放到一个文件夹然后放到一个文件夹然后再新建一个bat文件&lt;code>Launcher.bat&lt;/code>里面写&lt;/p>
&lt;p>&lt;code>java -Xms512M -Xmx1024M -jar paper.jar&lt;/code>&lt;/p>
&lt;p>然后发现下载好后瞬间退出了是因为要同意一些eula&lt;/p>
&lt;p>打开&lt;code>eula.exe&lt;/code>将&lt;code>eula=false&lt;/code>改成&lt;code>就好了&lt;/code>&lt;/p>
&lt;p>然后再次运行&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/minecraft/2020-1-2-2.png" alt="a">&lt;/p>
&lt;p>这样一个服务器就开好了&lt;/p></description></item><item><title>Linux下制作Windows启动U盘</title><link>https://blog.enaium.cn/post/2019-12-28-linux%E4%B8%8B%E5%88%B6%E4%BD%9Cwindows%E5%90%AF%E5%8A%A8u%E7%9B%98/</link><pubDate>Sat, 28 Dec 2019 21:24:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2019-12-28-linux%E4%B8%8B%E5%88%B6%E4%BD%9Cwindows%E5%90%AF%E5%8A%A8u%E7%9B%98/</guid><description>&lt;h2 id="安装woeusb">安装WoeUsb&lt;/h2>
&lt;p>&lt;code>sudo apt-get install woeusb&lt;/code>&lt;/p>
&lt;p>或者&lt;/p>
&lt;p>&lt;a href="https://github.com/slacka/WoeUSB">WosUsb&lt;/a>&lt;/p>
&lt;h2 id="找一个u盘">找一个U盘&lt;/h2>
&lt;p>格式化为NTFS格式&lt;/p>
&lt;h2 id="制作">制作&lt;/h2>
&lt;p>&lt;code>sudo woeusb -d /media/e/Enaium/镜像/windows64/win101909.iso /dev/sdb --target-filesystem NTFS&lt;/code>&lt;/p>
&lt;p>注意路径！&lt;/p>
&lt;p>接下来等就好了&lt;/p>
&lt;p>&lt;img src="https://blog.enaium.cn/assets/linux/2019-12-28-1.png" alt="img">&lt;/p></description></item><item><title>Minecraft Fabric 教程 #9 添加盔甲</title><link>https://blog.enaium.cn/post/2019-12-16-minecraft-fabric-%E6%95%99%E7%A8%8B-%239-%E6%B7%BB%E5%8A%A0%E7%9B%94%E7%94%B2/</link><pubDate>Mon, 16 Dec 2019 17:36:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2019-12-16-minecraft-fabric-%E6%95%99%E7%A8%8B-%239-%E6%B7%BB%E5%8A%A0%E7%9B%94%E7%94%B2/</guid><description>&lt;p>创建一个盔甲类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EndArmorMaterials&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> ArmorMaterial {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>复制一下内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> BASE_DURABILITY &lt;span style="color:#f92672">=&lt;/span> {13, 15, 16, 11};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> String name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> durabilityMultiplier;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> protectionAmounts;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> enchantability;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> SoundEvent equipSound;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> toughness;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Lazy&lt;span style="color:#f92672">&amp;lt;&lt;/span>Ingredient&lt;span style="color:#f92672">&amp;gt;&lt;/span> repairIngredientSupplier;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">EndArmorMaterials&lt;/span>(String name, &lt;span style="color:#66d9ef">int&lt;/span> durabilityMultiplier, &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> armorValueArr, &lt;span style="color:#66d9ef">int&lt;/span> enchantability, SoundEvent soundEvent, &lt;span style="color:#66d9ef">float&lt;/span> toughness, Supplier&lt;span style="color:#f92672">&amp;lt;&lt;/span>Ingredient&lt;span style="color:#f92672">&amp;gt;&lt;/span> repairIngredient) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">durabilityMultiplier&lt;/span> &lt;span style="color:#f92672">=&lt;/span> durabilityMultiplier;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">protectionAmounts&lt;/span> &lt;span style="color:#f92672">=&lt;/span> armorValueArr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">enchantability&lt;/span> &lt;span style="color:#f92672">=&lt;/span> enchantability;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">equipSound&lt;/span> &lt;span style="color:#f92672">=&lt;/span> soundEvent;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toughness&lt;/span> &lt;span style="color:#f92672">=&lt;/span> toughness;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">repairIngredientSupplier&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Lazy(repairIngredient);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getDurability&lt;/span>(EquipmentSlot equipmentSlot_1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> BASE_DURABILITY&lt;span style="color:#f92672">[&lt;/span>equipmentSlot_1.&lt;span style="color:#a6e22e">getEntitySlotId&lt;/span>()&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">durabilityMultiplier&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getProtectionAmount&lt;/span>(EquipmentSlot equipmentSlot_1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">protectionAmounts&lt;/span>&lt;span style="color:#f92672">[&lt;/span>equipmentSlot_1.&lt;span style="color:#a6e22e">getEntitySlotId&lt;/span>()&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getEnchantability&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">enchantability&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> SoundEvent &lt;span style="color:#a6e22e">getEquipSound&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">equipSound&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Ingredient &lt;span style="color:#a6e22e">getRepairIngredient&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">repairIngredientSupplier&lt;/span>.&lt;span style="color:#a6e22e">get&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Environment&lt;/span>(EnvType.&lt;span style="color:#a6e22e">CLIENT&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getName&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> &lt;span style="color:#a6e22e">getToughness&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">toughness&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后把class 改成 enum&lt;/p></description></item><item><title>Minecraft Fabric 教程 #8 添加附魔书</title><link>https://blog.enaium.cn/post/2019-12-16-minecraft-fabric-%E6%95%99%E7%A8%8B-%238-%E6%B7%BB%E5%8A%A0%E9%99%84%E9%AD%94%E4%B9%A6/</link><pubDate>Mon, 16 Dec 2019 13:45:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2019-12-16-minecraft-fabric-%E6%95%99%E7%A8%8B-%238-%E6%B7%BB%E5%8A%A0%E9%99%84%E9%AD%94%E4%B9%A6/</guid><description>&lt;p>创建一个附魔书类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">FireBoomEnchantment&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Enchantment {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在类中添一下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getMinimumPower&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> level) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 15;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getMaximumLevel&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onTargetDamaged&lt;/span>(LivingEntity user, Entity target, &lt;span style="color:#66d9ef">int&lt;/span> level) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(target &lt;span style="color:#66d9ef">instanceof&lt;/span> LivingEntity) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> World world &lt;span style="color:#f92672">=&lt;/span> user.&lt;span style="color:#a6e22e">world&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> bl &lt;span style="color:#f92672">=&lt;/span> world.&lt;span style="color:#a6e22e">getGameRules&lt;/span>().&lt;span style="color:#a6e22e">getBoolean&lt;/span>(GameRules.&lt;span style="color:#a6e22e">MOB_GRIEFING&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> world.&lt;span style="color:#a6e22e">createExplosion&lt;/span>(target, target.&lt;span style="color:#a6e22e">prevX&lt;/span>, target.&lt;span style="color:#a6e22e">prevY&lt;/span>, target.&lt;span style="color:#a6e22e">prevZ&lt;/span>, 1.&lt;span style="color:#a6e22e">0f&lt;/span>, bl, bl &lt;span style="color:#f92672">?&lt;/span> Explosion.&lt;span style="color:#a6e22e">DestructionType&lt;/span>.&lt;span style="color:#a6e22e">DESTROY&lt;/span> : Explosion.&lt;span style="color:#a6e22e">DestructionType&lt;/span>.&lt;span style="color:#a6e22e">NONE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> world.&lt;span style="color:#a6e22e">spawnEntity&lt;/span>(target);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这就创建了一个FireBoom附魔书&lt;/p>
&lt;p>onTargetDamaged //当目标被攻击&lt;/p>
&lt;p>在mc FireballEntity类有一个 方法就是当火球碰撞了就创建一个火焰爆炸的效果&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onCollision&lt;/span>(HitResult hitResult) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>.&lt;span style="color:#a6e22e">onCollision&lt;/span>(hitResult);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">world&lt;/span>.&lt;span style="color:#a6e22e">isClient&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (hitResult.&lt;span style="color:#a6e22e">getType&lt;/span>() &lt;span style="color:#f92672">==&lt;/span> HitResult.&lt;span style="color:#a6e22e">Type&lt;/span>.&lt;span style="color:#a6e22e">ENTITY&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Entity entity &lt;span style="color:#f92672">=&lt;/span> ((EntityHitResult)hitResult).&lt;span style="color:#a6e22e">getEntity&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> entity.&lt;span style="color:#a6e22e">damage&lt;/span>(DamageSource.&lt;span style="color:#a6e22e">explosiveProjectile&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>, &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">owner&lt;/span>), 6.&lt;span style="color:#a6e22e">0F&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">dealDamage&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">owner&lt;/span>, entity);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> bl &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">world&lt;/span>.&lt;span style="color:#a6e22e">getGameRules&lt;/span>().&lt;span style="color:#a6e22e">getBoolean&lt;/span>(GameRules.&lt;span style="color:#a6e22e">MOB_GRIEFING&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">world&lt;/span>.&lt;span style="color:#a6e22e">createExplosion&lt;/span>((Entity)&lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">getX&lt;/span>(), &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">getY&lt;/span>(), &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">getZ&lt;/span>(), (&lt;span style="color:#66d9ef">float&lt;/span>)&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">explosionPower&lt;/span>, bl, bl &lt;span style="color:#f92672">?&lt;/span> Explosion.&lt;span style="color:#a6e22e">DestructionType&lt;/span>.&lt;span style="color:#a6e22e">DESTROY&lt;/span> : Explosion.&lt;span style="color:#a6e22e">DestructionType&lt;/span>.&lt;span style="color:#a6e22e">NONE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">remove&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们可以加以利用&lt;/p></description></item><item><title>Minecraft Fabric 教程 #7 添加工具提示</title><link>https://blog.enaium.cn/post/2019-12-16-minecraft-fabric-%E6%95%99%E7%A8%8B-%237-%E6%B7%BB%E5%8A%A0%E5%B7%A5%E5%85%B7%E6%8F%90%E7%A4%BA/</link><pubDate>Mon, 16 Dec 2019 12:30:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2019-12-16-minecraft-fabric-%E6%95%99%E7%A8%8B-%237-%E6%B7%BB%E5%8A%A0%E5%B7%A5%E5%85%B7%E6%8F%90%E7%A4%BA/</guid><description>&lt;h2 id="添加工具提示">添加工具提示&lt;/h2>
&lt;p>在EndHeart类中添加&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">appendTooltip&lt;/span>(ItemStack stack, World world, List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Text&lt;span style="color:#f92672">&amp;gt;&lt;/span> tooltip, TooltipContext context) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tooltip.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> TranslatableText(&lt;span style="color:#e6db74">&amp;#34;tooltip.endarmor.end_heart&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://blog.enaium.cn/assets/fabric/7-1.jpg" alt="7 1">&lt;/p></description></item><item><title>Minecraft Fabric 教程 #6 添加合成表</title><link>https://blog.enaium.cn/post/2019-12-15-minecraft-fabric-%E6%95%99%E7%A8%8B-%236-%E6%B7%BB%E5%8A%A0%E5%90%88%E6%88%90%E8%A1%A8/</link><pubDate>Sun, 15 Dec 2019 20:48:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2019-12-15-minecraft-fabric-%E6%95%99%E7%A8%8B-%236-%E6%B7%BB%E5%8A%A0%E5%90%88%E6%88%90%E8%A1%A8/</guid><description>&lt;p>位置 &lt;code>src\main\resources\data\endarmor\recipes\end_heart_block.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;minecraft:crafting_shaped&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;pattern&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;WWW&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;WWW&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;WWW&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;key&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;W&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;item&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;endarmor:end_heart&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;result&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;item&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;endarmor:end_heart_block&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;count&amp;#34;&lt;/span>: 4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>W就是key里面的物品如果是空的就打一个空格比如W W&lt;/p></description></item><item><title>Minecraft Fabric 教程 #5 添加语言文件</title><link>https://blog.enaium.cn/post/2019-12-15-minecraft-fabric-%E6%95%99%E7%A8%8B-%235-%E6%B7%BB%E5%8A%A0%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6/</link><pubDate>Sun, 15 Dec 2019 20:26:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2019-12-15-minecraft-fabric-%E6%95%99%E7%A8%8B-%235-%E6%B7%BB%E5%8A%A0%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6/</guid><description>&lt;h2 id="创建语言文件">创建语言文件&lt;/h2>
&lt;p>lang也就是你模组的翻译比如 中文简体 zh_cn 中文正體 zh_tw 英文 en_us&lt;/p>
&lt;p>resources/assets/endarmor/lang/zh_cn.json&lt;/p>
&lt;pre tabindex="0">&lt;code>{
 &amp;#34;item.endarmor.end_heart&amp;#34;: &amp;#34;End心&amp;#34;,
 &amp;#34;block.endarmor.end_heart_block&amp;#34;: &amp;#34;End心块&amp;#34;,
 [...]
}
&lt;/code>&lt;/pre>&lt;h2 id="格式">格式&lt;/h2>
&lt;p>&lt;code>&amp;lt;object-type&amp;gt;.&amp;lt;modid&amp;gt;.&amp;lt;registry-id&amp;gt;&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>block.&amp;lt;modid&amp;gt;.&amp;lt;registry-id&amp;gt;
item.&amp;lt;modid&amp;gt;.&amp;lt;registry-id&amp;gt;
itemGroup.&amp;lt;modid&amp;gt;.&amp;lt;registry-id&amp;gt;
fluid.&amp;lt;modid&amp;gt;.&amp;lt;registry-id&amp;gt;
sound_event.&amp;lt;modid&amp;gt;.&amp;lt;registry-id&amp;gt;
mob_effect.&amp;lt;modid&amp;gt;.&amp;lt;registry-id&amp;gt;
enchantment.&amp;lt;modid&amp;gt;.&amp;lt;registry-id&amp;gt;
entity_type.&amp;lt;modid&amp;gt;.&amp;lt;registry-id&amp;gt;
potion.&amp;lt;modid&amp;gt;.&amp;lt;registry-id&amp;gt;
biome.&amp;lt;modid&amp;gt;.&amp;lt;registry-id&amp;gt;
&lt;/code>&lt;/pre>&lt;p>获取翻译文件的翻译&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">new&lt;/span> TranslatableText(&lt;span style="color:#e6db74">&amp;#34;item.tutorial.fabric_item.tooltip_1&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Minecraft Fabric 教程 #4 添加分组</title><link>https://blog.enaium.cn/post/2019-12-15-minecraft-fabric-%E6%95%99%E7%A8%8B-%234-%E6%B7%BB%E5%8A%A0%E5%88%86%E7%BB%84/</link><pubDate>Sun, 15 Dec 2019 19:56:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2019-12-15-minecraft-fabric-%E6%95%99%E7%A8%8B-%234-%E6%B7%BB%E5%8A%A0%E5%88%86%E7%BB%84/</guid><description>&lt;p>在 ItemGroup 显示 使用 FabricItemGroupBuilder&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> ItemGroup END_ITEM_GROUP &lt;span style="color:#f92672">=&lt;/span> FabricItemGroupBuilder.&lt;span style="color:#a6e22e">create&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">new&lt;/span> Identifier(&lt;span style="color:#e6db74">&amp;#34;endarmor&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;endarmor&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			.&lt;span style="color:#a6e22e">icon&lt;/span>(() &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ItemStack(END_HEART))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			.&lt;span style="color:#a6e22e">appendItems&lt;/span>(stacks &lt;span style="color:#f92672">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				stacks.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> ItemStack(END_HEART));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				stacks.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> ItemStack(END_HEART_BLOCK));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			.&lt;span style="color:#a6e22e">build&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>直接创建即可&lt;/p>
&lt;p>new Identifier(&amp;ldquo;endarmor&amp;rdquo;, &amp;ldquo;endarmor&amp;rdquo;) //第一个参数modid 第二个参数名字 只能用的 [a-z0-9_.-] 不要使用其他符号&lt;/p></description></item><item><title>Minecraft Fabric 教程 #3 添加方块</title><link>https://blog.enaium.cn/post/2019-12-15-minecraft-fabric-%E6%95%99%E7%A8%8B-%233-%E6%B7%BB%E5%8A%A0%E6%96%B9%E5%9D%97/</link><pubDate>Sun, 15 Dec 2019 19:36:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2019-12-15-minecraft-fabric-%E6%95%99%E7%A8%8B-%233-%E6%B7%BB%E5%8A%A0%E6%96%B9%E5%9D%97/</guid><description>&lt;h2 id="创建方块">创建方块&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ExampleMod&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> ModInitializer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// an instance of our new block&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Block END_HEART_BLOCK &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Block(FabricBlockSettings.&lt;span style="color:#a6e22e">of&lt;/span>(Material.&lt;span style="color:#a6e22e">METAL&lt;/span>).&lt;span style="color:#a6e22e">build&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注册">注册&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ExampleMod&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> ModInitializer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// block creation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">…&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onInitialize&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Registry.&lt;span style="color:#a6e22e">register&lt;/span>(Registry.&lt;span style="color:#a6e22e">BLOCK&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> Identifier(&lt;span style="color:#e6db74">&amp;#34;endarmor&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;end_heart_block&amp;#34;&lt;/span>), END_HEART_BLOCK);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行游戏发现无法找到方块是因为没有创建方块物品 但是可以使用命令在创建这个方块&lt;/p>
&lt;h2 id="创建方块物品">创建方块物品&lt;/h2>
&lt;p>直接注册就行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ExampleMod&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> ModInitializer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// block creation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">…&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onInitialize&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// block registration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Registry.&lt;span style="color:#a6e22e">register&lt;/span>(Registry.&lt;span style="color:#a6e22e">ITEM&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> Identifier(&lt;span style="color:#e6db74">&amp;#34;endarmor&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;end_heart_block&amp;#34;&lt;/span>), &lt;span style="color:#66d9ef">new&lt;/span> BlockItem(END_HEART_BLOCK, &lt;span style="color:#66d9ef">new&lt;/span> Item.&lt;span style="color:#a6e22e">Settings&lt;/span>().&lt;span style="color:#a6e22e">itemGroup&lt;/span>(ItemGroup.&lt;span style="color:#a6e22e">MISC&lt;/span>)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="添加纹理">添加纹理&lt;/h2>
&lt;pre tabindex="0">&lt;code>Blockstate: src/main/resources/assets/endarmor/blockstates/end_heart_block.json
Block Model: src/main/resources/assets/endarmor/models/block/end_heart_block.json
Item Model: src/main/resources/assets/endarmor/models/item/end_heart_block.json
Block Texture: src/main/resources/assets/endarmor/textures/block/end_heart_block.png
&lt;/code>&lt;/pre>&lt;p>blockstates/end_heart_block.json&lt;/p></description></item><item><title>Minecraft Fabric 教程 #2 添加物品</title><link>https://blog.enaium.cn/post/2019-12-15-minecraft-fabric-%E6%95%99%E7%A8%8B-%232-%E6%B7%BB%E5%8A%A0%E7%89%A9%E5%93%81/</link><pubDate>Sun, 15 Dec 2019 19:06:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2019-12-15-minecraft-fabric-%E6%95%99%E7%A8%8B-%232-%E6%B7%BB%E5%8A%A0%E7%89%A9%E5%93%81/</guid><description>&lt;h2 id="创建物品">创建物品&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ExampleMod&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> ModInitializer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Item END_HEART &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Item(&lt;span style="color:#66d9ef">new&lt;/span> Item.&lt;span style="color:#a6e22e">Settings&lt;/span>().&lt;span style="color:#a6e22e">group&lt;/span>(ItemGroup.&lt;span style="color:#a6e22e">COMBAT&lt;/span>).&lt;span style="color:#a6e22e">maxCount&lt;/span>(32));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ItemGroup.COMBAT //分类为COMBAT&lt;/p>
&lt;p>maxCount(32) //一组最大堆叠数 一组最大只能叠32个物品&lt;/p>
&lt;h2 id="注册物品">注册物品&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ExampleMod&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> ModInitializer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Item END_HEART &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Item(&lt;span style="color:#66d9ef">new&lt;/span> Item.&lt;span style="color:#a6e22e">Settings&lt;/span>().&lt;span style="color:#a6e22e">group&lt;/span>(ItemGroup.&lt;span style="color:#a6e22e">COMBAT&lt;/span>).&lt;span style="color:#a6e22e">maxCount&lt;/span>(32));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onInitialize&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Registry.&lt;span style="color:#a6e22e">register&lt;/span>(Registry.&lt;span style="color:#a6e22e">ITEM&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> Identifier(&lt;span style="color:#e6db74">&amp;#34;endarmor&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;end_heart&amp;#34;&lt;/span>), END_HEART);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Registry.ITEM //类别是物品&lt;/p>
&lt;p>new Identifier(&amp;ldquo;endarmor&amp;rdquo;, &amp;ldquo;end_heart&amp;rdquo;) //第一个参数是MOD ID 第二个参数是 物品的名字&lt;/p>
&lt;p>END_HEART //要注册的物品的变量名&lt;/p>
&lt;p>运行看看&lt;/p>
&lt;p>发现是一个紫色方块 而且 名字是 item.endarmor.end_heart 紫色方块是没用纹理(材质)&lt;/p>
&lt;p>接下来要添加纹理
需要的文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> Item model: ...&lt;span style="color:#f92672">/&lt;/span>resources&lt;span style="color:#f92672">/&lt;/span>assets&lt;span style="color:#f92672">/&lt;/span>endarmor&lt;span style="color:#f92672">/&lt;/span>models&lt;span style="color:#f92672">/&lt;/span>item&lt;span style="color:#f92672">/&lt;/span>end_heart.&lt;span style="color:#a6e22e">json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Item texture: ...&lt;span style="color:#f92672">/&lt;/span>resources&lt;span style="color:#f92672">/&lt;/span>assets&lt;span style="color:#f92672">/&lt;/span>endarmor&lt;span style="color:#f92672">/&lt;/span>textures&lt;span style="color:#f92672">/&lt;/span>item&lt;span style="color:#f92672">/&lt;/span>end_heart.&lt;span style="color:#a6e22e">png&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>end_heart.json 内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;parent&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;item/generated&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;textures&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;layer0&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;endarmor:item/end_heart&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>end_heart.png 就是纹理
&lt;img src="https://blog.enaium.cn/assets/fabric/end_heart.png" alt="my alternate text">&lt;/p></description></item><item><title>Minecraft Fabric 教程 #1 开发环境配置</title><link>https://blog.enaium.cn/post/2019-12-15-minecraft-fabric-%E6%95%99%E7%A8%8B-%231-%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link><pubDate>Sun, 15 Dec 2019 17:50:00 +0800</pubDate><guid>https://blog.enaium.cn/post/2019-12-15-minecraft-fabric-%E6%95%99%E7%A8%8B-%231-%E9%85%8D%E7%BD%AE%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid><description>&lt;p>需要 JAVA8+ 和 IDE&lt;/p>
&lt;p>首先下载github 上的项目 &lt;a href="https://github.com/FabricMC/fabric-example-mod/">fabric-example-mod&lt;/a> 有以下方法:&lt;/p>
&lt;ul>
&lt;li>用IDE 克隆 库&lt;/li>
&lt;li>直接导入IDE&lt;/li>
&lt;li>运行bat &lt;code>./gradlew genSources&lt;/code>然后导入IDE&lt;/li>
&lt;/ul>
&lt;p>推荐使用IDEA&lt;/p></description></item></channel></rss>